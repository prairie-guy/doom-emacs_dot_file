(undo-tree-save-format-version . 1)
"6b9b04a74b946dd200c6760775b7e89bea364f3c"
[nil nil nil nil (25591 54805 201697 535000) 0 nil]
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 4612) (4608 . 4612) (4607 . 4609) (#("
" 0 1 (fontified nil face font-lock-comment-face ws-butler-chg chg)) . 4607) (4603 . 4607) (4602 . 4604) (t 25591 54787 872104 836000)) nil (25591 55057 281387 934000) 0 nil] [nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -4888) (undo-tree-id0 . -1) 4889 (t 25591 54787 872104 836000)) ((nil ws-butler-chg delete 4889 . 4890) (4888 . 4889)) (25591 54804 70712 903000) 0 nil])
([nil nil ((#(";;;;" 0 4 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 4603) (undo-tree-id36 . -4)) nil (25591 55057 281385 664000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4603)) nil (25591 55057 281383 964000) 0 nil])
([nil nil ((#(";;;;" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 4 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 4603)) nil (25591 55057 281383 154000) 0 nil])
([nil nil ((4603 . 4605)) nil (25591 55057 281382 414000) 0 nil])
([nil nil ((4604 . 4614)) nil (25591 55057 281381 634000) 0 nil])
([nil nil ((4614 . 4623)) nil (25591 55057 281380 914000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4622) (undo-tree-id35 . -1) 4623) nil (25591 55057 281379 924000) 0 nil])
([nil nil ((4622 . 4627)) nil (25591 55057 281377 964000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4618) (undo-tree-id26 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4619) (undo-tree-id27 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4620) (undo-tree-id28 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4621) (undo-tree-id29 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4622) (undo-tree-id30 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4623) (undo-tree-id31 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4624) (undo-tree-id32 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4625) (undo-tree-id33 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4626) (undo-tree-id34 . -1) 4627) nil (25591 55057 281375 614000) 0 nil])
([nil nil ((4618 . 4625)) nil (25591 55057 281366 14000) 0 nil])
([nil nil ((4625 . 4630)) nil (25591 55057 281365 284000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4628) (undo-tree-id24 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4629) (undo-tree-id25 . -1) 4630) nil (25591 55057 281363 814000) 0 nil])
([nil nil ((4628 . 4636)) nil (25591 55057 281360 64000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4634) (undo-tree-id22 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4635) (undo-tree-id23 . -1) 4636) nil (25591 55057 281358 584000) 0 nil])
([nil nil ((4634 . 4643)) nil (25591 55057 281355 464000) 0 nil])
([nil nil ((4643 . 4656)) nil (25591 55057 281354 514000) 0 nil])
([nil nil ((4656 . 4677)) nil (25591 55057 281353 654000) 0 nil])
([nil nil ((4677 . 4679)) nil (25591 55057 281352 774000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4676) (undo-tree-id19 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4677) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4678) (undo-tree-id21 . -1) 4679) nil (25591 55057 281351 264000) 0 nil])
([nil nil ((4676 . 4686)) nil (25591 55057 281347 424000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4685) (undo-tree-id18 . -1) 4686) nil (25591 55057 281346 364000) 0 nil])
([nil nil ((4685 . 4690)) nil (25591 55057 281344 454000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4771 . 4772) (nil fontified nil 4691 . 4772) (4691 . 4772)) nil (25591 55057 281343 334000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4704) (undo-tree-id17 . -1) 4705) nil (25591 55057 281341 584000) 0 nil])
([nil nil ((4704 . 4705)) nil (25591 55057 281339 164000) 0 nil])
([nil nil ((#("\"C-x C-c\" #'save-buffers-kill-terminal" 0 9 (ws-butler-chg chg fontified t face font-lock-string-face) 9 10 (ws-butler-chg chg fontified t) 10 12 (ws-butler-chg chg fontified t face highlight-quoted-quote) 12 38 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . 4733) (undo-tree-id16 . -8)) nil (25591 55057 281337 184000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -4726) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4727) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4728) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4729) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4730) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4731) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4732) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 4733) nil (25591 55057 281330 654000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -4709) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -4710) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("u" 0 1 (fontified t face highlight-quoted-symbol)) . -4711) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -4712) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("s" 0 1 (fontified t face highlight-quoted-symbol)) . -4713) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -4714) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -4715) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -4716) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("f" 0 1 (fontified t face highlight-quoted-symbol)) . -4717) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -4718) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -4719) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -4720) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -4721) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("f" 0 1 (fontified t face highlight-quoted-symbol)) . -4722) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -4723) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -4724) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -4725) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 4726 (t 25591 55057 277846 877000)) nil (25591 55203 27078 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4742 . 4743) (nil fontified nil 4709 . 4743) (4709 . 4743)) nil (25591 55203 26994 808000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -4741) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -4742) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 4743) nil (25591 55203 26990 678000) 0 nil])
([nil nil ((10774 . 10780) (t 25643 2771 448809 139000)) nil (25643 2996 166297 978000) 0 nil])
([nil nil ((#(";;(add-hook 'julia-mode-hook 'julia-repl-mode)  ; Don't use with julia-snail" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 76 (face font-lock-comment-face fontified t)) . 10944) (undo-tree-id1 . -18)) nil (25643 2996 166296 438000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 10944) (undo-tree-id0 . -1)) nil (25643 2996 166293 108000) 0 nil])
([nil nil ((10980 . 10982)) nil (25645 52162 910541 146000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14872 . 14873) (nil fontified nil 14515 . 14873) (14515 . 14873) (t 25645 52168 957401 751000)) nil (25651 32570 15358 314000) 0 nil] [nil nil ((apply 78 12042 13238 undo--wrap-and-run-primitive-undo 12042 13238 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13169) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13135) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13107) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13075) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13043) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -13016) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12996) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12978) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12955) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12880) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12829) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12811) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12793) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12754) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12687) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12613) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12535) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12433) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12352) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12271) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12227) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12183) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12146) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12136) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12117) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -12042) 13316)) (t 25643 2996 166273 420000)) ((apply -78 12042 13316 undo--wrap-and-run-primitive-undo 12042 13316 ((12042 . 12045) (12117 . 12120) (12136 . 12139) (12146 . 12149) (12183 . 12186) (12227 . 12230) (12271 . 12274) (12352 . 12355) (12433 . 12436) (12535 . 12538) (12613 . 12616) (12687 . 12690) (12754 . 12757) (12793 . 12796) (12811 . 12814) (12829 . 12832) (12880 . 12883) (12955 . 12958) (12978 . 12981) (12996 . 12999) (13016 . 13019) (13043 . 13046) (13075 . 13078) (13107 . 13110) (13135 . 13138) (13169 . 13172))) (t 25645 50923 184057 222000)) (25645 50923 187581 685000) 0 nil])
([nil nil ((14873 . 14875)) nil (25651 32570 15356 204000) 0 nil])
nil
([nil nil ((14875 . 14878)) nil (25651 32570 15354 974000) 0 nil])
([nil nil ((14878 . 14880)) nil (25651 32570 15353 24000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 14879) (14880 . 14880) 14702) nil (25651 32570 15346 864000) 0 nil])
([nil nil ((#("(with-eval-after-load 'ol (org-link-set-parameters
\"img\"
:follow lambda (path arg) (org-link-open-as-file path arg))
:export (lambda (path desc backend channel)
(cond ((eg backend 'html)
(format \"<img style=|\"max-width:80%%;margin:2em|\"
src=\\\"data:image/jpg; base64,%s\\\">\"
(base64-encode-string (with-temp-buffer (insert-file-contents path)
(buffer-string))))))))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 23 (face highlight-quoted-quote fontified t) 23 25 (face highlight-quoted-symbol fontified t) 25 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 50 (face font-lock-function-name-face fontified t) 50 51 (fontified t) 51 56 (face font-lock-string-face fontified t) 56 57 (fontified t) 57 64 (face font-lock-builtin-face fontified t) 64 72 (fontified t) 72 73 (face (rainbow-delimiters-depth-3-face) fontified t) 73 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-3-face) fontified t) 82 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-3-face) fontified t) 84 105 (face font-lock-function-name-face fontified t) 105 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-3-face) fontified t) 115 116 (face (rainbow-delimiters-depth-2-face) fontified t) 116 117 (fontified t) 117 124 (face font-lock-builtin-face fontified t) 124 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-2-face) fontified t) 126 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 134 (face (rainbow-delimiters-depth-3-face) fontified t) 134 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-3-face) fontified t) 160 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-3-face) fontified t) 162 166 (face font-lock-keyword-face fontified t) 166 167 (fontified t) 167 168 (face (rainbow-delimiters-depth-4-face) fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 180 (fontified t) 180 181 (face highlight-quoted-quote fontified t) 181 185 (face highlight-quoted-symbol fontified t) 185 186 (face (rainbow-delimiters-depth-1-face) fontified t) 186 187 (fontified t) 187 188 (face (rainbow-delimiters-depth-1-face) fontified t) 188 194 (face font-lock-constant-face fontified t) 194 195 (fontified t) 195 209 (face font-lock-string-face fontified t) 209 223 (fontified t) 223 224 (face font-lock-comment-delimiter-face fontified t) 224 237 (face font-lock-comment-face fontified t) 237 257 (fontified t) 257 259 (face font-lock-comment-delimiter-face fontified t) 259 273 (face font-lock-comment-face fontified t) 273 274 (face (rainbow-delimiters-depth-2-face) fontified t) 274 294 (face font-lock-constant-face fontified t) 294 295 (fontified t) 295 296 (face (rainbow-delimiters-depth-3-face) fontified t) 296 312 (face font-lock-keyword-face fontified t) 312 313 (fontified t) 313 314 (face (rainbow-delimiters-depth-4-face) fontified t) 314 334 (face font-lock-constant-face fontified t) 334 339 (fontified t) 339 340 (face (rainbow-delimiters-depth-4-face) fontified t) 340 341 (fontified t) 341 342 (face (rainbow-delimiters-depth-4-face) fontified t) 342 355 (face font-lock-constant-face fontified t) 355 356 (face (rainbow-delimiters-depth-4-face) fontified t) 356 357 (face (rainbow-delimiters-depth-3-face) fontified t) 357 358 (face (rainbow-delimiters-depth-2-face) fontified t) 358 359 (face (rainbow-delimiters-depth-1-face) fontified t) 359 360 (face (rainbow-delimiters-depth-4-face) fontified t) 360 361 (face (rainbow-delimiters-depth-3-face) fontified t) 361 362 (face (rainbow-delimiters-depth-2-face) fontified t) 362 363 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14515) (undo-tree-id0 . -51) (undo-tree-id1 . -341) (undo-tree-id2 . -341) (undo-tree-id3 . -273) (undo-tree-id4 . -273) (undo-tree-id5 . -237) (undo-tree-id6 . -237) (undo-tree-id7 . -187) (undo-tree-id8 . -187) (undo-tree-id9 . -161) (undo-tree-id10 . -161) (undo-tree-id11 . -117) (undo-tree-id12 . -117) (undo-tree-id13 . -57) (undo-tree-id14 . -57) (undo-tree-id15 . -51) (undo-tree-id16 . -51) (undo-tree-id17 . -57) (undo-tree-id18 . -57) (undo-tree-id19 . -57) (undo-tree-id20 . -22) (undo-tree-id21 . 363) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . -363) (t 25651 32570 12733 468000)) nil (25651 32745 781407 474000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15062 . 15063) (nil fontified nil 14515 . 15063) (14515 . 15063)) nil (25651 32745 781360 414000) 0 nil])
([nil nil ((#("(with-eval-after-load 'ol
    (org-link-set-parameters
     \"img\"
     :follow (lambda (path arg) (org-link-open-as-file path arg))
     :export (lambda (path desc backend cchannel)
               (cond ((eq backend 'html)
                      (format \"<img style=\\\"max-width:80%%;margin:2em\\\" src=\\\"data:image/jpg;base64,%s\\\">\"
                              (base64-encode-string
                               (with-temp-buffer
                                 (insert-file-contents path)
                                 (buffer-string)))))))))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 23 (fontified t face highlight-quoted-quote) 23 25 (fontified t face highlight-quoted-symbol) 25 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-2-face)) 31 54 (fontified t face font-lock-function-name-face) 54 60 (fontified t) 60 65 (fontified t face font-lock-string-face) 65 71 (fontified t) 71 78 (fontified t face font-lock-builtin-face) 78 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-3-face)) 80 86 (fontified t face font-lock-keyword-face) 86 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-4-face)) 88 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-4-face)) 97 98 (fontified t) 98 99 (fontified t face (rainbow-delimiters-depth-4-face)) 99 120 (fontified t face font-lock-function-name-face) 120 129 (fontified t) 129 130 (fontified t face (rainbow-delimiters-depth-4-face)) 130 131 (fontified t face (rainbow-delimiters-depth-3-face)) 131 137 (fontified t) 137 144 (fontified t face font-lock-builtin-face) 144 145 (fontified t) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 152 (fontified t face font-lock-keyword-face) 152 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-4-face)) 154 180 (fontified t) 180 181 (fontified t face (rainbow-delimiters-depth-4-face)) 181 197 (fontified t) 197 198 (fontified t face (rainbow-delimiters-depth-4-face)) 198 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-1-face)) 204 205 (fontified t face (rainbow-delimiters-depth-2-face)) 205 207 (fontified t face font-lock-constant-face) 207 216 (fontified t) 216 217 (fontified t face highlight-quoted-quote) 217 221 (fontified t face highlight-quoted-symbol) 221 222 (fontified t face (rainbow-delimiters-depth-2-face)) 222 245 (fontified t) 245 246 (fontified t face (rainbow-delimiters-depth-2-face)) 246 252 (fontified t face font-lock-constant-face) 252 253 (fontified t) 253 329 (fontified t face font-lock-string-face) 329 360 (fontified t) 360 361 (fontified t face (rainbow-delimiters-depth-3-face)) 361 381 (fontified t face font-lock-constant-face) 381 413 (fontified t) 413 414 (fontified t face (rainbow-delimiters-depth-4-face)) 414 430 (fontified t face font-lock-keyword-face) 430 464 (fontified t) 464 465 (fontified t face (rainbow-delimiters-depth-1-face)) 465 485 (fontified t face font-lock-constant-face) 485 490 (fontified t) 490 491 (fontified t face (rainbow-delimiters-depth-1-face)) 491 492 (fontified t) 492 525 (fontified t) 525 526 (fontified t face (rainbow-delimiters-depth-1-face)) 526 539 (fontified t face font-lock-constant-face) 539 540 (fontified t face (rainbow-delimiters-depth-1-face)) 540 541 (fontified t face (rainbow-delimiters-depth-4-face)) 541 542 (fontified t face (rainbow-delimiters-depth-3-face)) 542 543 (fontified t face (rainbow-delimiters-depth-2-face)) 543 544 (fontified t face (rainbow-delimiters-depth-1-face)) 544 545 (fontified t face (rainbow-delimiters-depth-4-face)) 545 546 (fontified t face (rainbow-delimiters-depth-3-face)) 546 547 (fontified t face (rainbow-delimiters-depth-2-face)) 547 548 (fontified t face (rainbow-delimiters-depth-1-face))) . 14515) (undo-tree-id68 . -26) (undo-tree-id69 . -548) (undo-tree-id70 . -492) (undo-tree-id71 . -492) (undo-tree-id72 . -431) (undo-tree-id73 . -431) (undo-tree-id74 . -382) (undo-tree-id75 . -382) (undo-tree-id76 . -330) (undo-tree-id77 . -330) (undo-tree-id78 . -223) (undo-tree-id79 . -223) (undo-tree-id80 . -182) (undo-tree-id81 . -182) (undo-tree-id82 . -132) (undo-tree-id83 . -132) (undo-tree-id84 . -66) (undo-tree-id85 . -66) (undo-tree-id86 . -55) (undo-tree-id87 . -55) (undo-tree-id88 . -26) (undo-tree-id89 . -26) (undo-tree-id90 . -25) (undo-tree-id91 . 548) (undo-tree-id92 . -1) (undo-tree-id93 . 1) (undo-tree-id94 . -548) (t 25651 32745 782380 944000)) nil (25651 33277 184729 441000) 0 nil])
([nil nil ((7075 . 7077)) nil (25651 33277 184709 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7624 . 7625) (nil fontified nil 7624 . 7625) (nil fontified nil 7623 . 7624) (nil fontified nil 7622 . 7623) (nil fontified nil 7621 . 7622) (nil fontified nil 7620 . 7621) (nil fontified nil 7619 . 7620) (nil fontified nil 7618 . 7619) (nil fontified nil 7617 . 7618) (nil fontified nil 7616 . 7617) (nil fontified nil 7603 . 7616) (nil fontified nil 7602 . 7603) (nil fontified nil 7569 . 7602) (nil fontified nil 7568 . 7569) (nil fontified nil 7567 . 7568) (nil fontified nil 7562 . 7567) (nil fontified nil 7542 . 7562) (nil fontified nil 7541 . 7542) (nil fontified nil 7507 . 7541) (nil fontified nil 7491 . 7507) (nil fontified nil 7490 . 7491) (nil fontified nil 7458 . 7490) (nil fontified nil 7438 . 7458) (nil fontified nil 7437 . 7438) (nil fontified nil 7406 . 7437) (nil fontified nil 7330 . 7406) (nil fontified nil 7329 . 7330) (nil fontified nil 7323 . 7329) (nil fontified nil 7322 . 7323) (nil fontified nil 7299 . 7322) (nil fontified nil 7298 . 7299) (nil fontified nil 7294 . 7298) (nil fontified nil 7293 . 7294) (nil fontified nil 7284 . 7293) (nil fontified nil 7282 . 7284) (nil fontified nil 7281 . 7282) (nil fontified nil 7280 . 7281) (nil fontified nil 7279 . 7280) (nil fontified nil 7275 . 7279) (nil fontified nil 7274 . 7275) (nil fontified nil 7258 . 7274) (nil fontified nil 7257 . 7258) (nil fontified nil 7231 . 7257) (nil fontified nil 7230 . 7231) (nil fontified nil 7229 . 7230) (nil fontified nil 7223 . 7229) (nil fontified nil 7222 . 7223) (nil fontified nil 7221 . 7222) (nil fontified nil 7214 . 7221) (nil fontified nil 7208 . 7214) (nil fontified nil 7207 . 7208) (nil fontified nil 7206 . 7207) (nil fontified nil 7197 . 7206) (nil fontified nil 7176 . 7197) (nil fontified nil 7175 . 7176) (nil fontified nil 7174 . 7175) (nil fontified nil 7173 . 7174) (nil fontified nil 7165 . 7173) (nil fontified nil 7164 . 7165) (nil fontified nil 7163 . 7164) (nil fontified nil 7157 . 7163) (nil fontified nil 7156 . 7157) (nil fontified nil 7155 . 7156) (nil fontified nil 7148 . 7155) (nil fontified nil 7142 . 7148) (nil fontified nil 7137 . 7142) (nil fontified nil 7131 . 7137) (nil fontified nil 7108 . 7131) (nil fontified nil 7107 . 7108) (nil fontified nil 7102 . 7107) (nil fontified nil 7100 . 7102) (nil fontified nil 7099 . 7100) (nil fontified nil 7098 . 7099) (nil fontified nil 7078 . 7098) (nil fontified nil 7077 . 7078) (7077 . 7625)) nil (25651 33277 184704 291000) 0 nil])
([nil nil ((7076 . 7077)) nil (25651 33277 184688 801000) 0 nil])
([nil nil ((7077 . 7079)) nil (25651 33277 184688 51000) 0 nil])
([nil nil ((7079 . 7083)) nil (25651 33277 184687 221000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id65 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7081) (undo-tree-id66 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7082) (undo-tree-id67 . -1) 7083) nil (25651 33277 184685 911000) 0 nil])
([nil nil ((7080 . 7081)) nil (25651 33277 184680 861000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id64 . -1) 7081) nil (25651 33277 184679 831000) 0 nil])
([nil nil ((7080 . 7083)) nil (25651 33277 184678 31000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7081) (undo-tree-id62 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7082) (undo-tree-id63 . -1) 7083) nil (25651 33277 184676 861000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id61 . -1) 7081) nil (25651 33277 184674 11000) 0 nil])
([nil nil ((7080 . 7088)) nil (25651 33277 184672 261000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7087) (undo-tree-id60 . -1) 7088) nil (25651 33277 184671 241000) 0 nil])
([nil nil ((7087 . 7099)) nil (25651 33277 184669 371000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7093) (undo-tree-id54 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7094) (undo-tree-id55 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7095) (undo-tree-id56 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7096) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7097) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7098) (undo-tree-id59 . -1) 7099) nil (25651 33277 184667 401000) 0 nil])
([nil nil ((7093 . 7097)) nil (25651 33277 184661 171000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7093) (undo-tree-id50 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7094) (undo-tree-id51 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7095) (undo-tree-id52 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7096) (undo-tree-id53 . -1) 7097) nil (25651 33277 184659 631000) 0 nil])
([nil nil ((7093 . 7104)) nil (25651 33277 184655 291000) 0 nil])
([nil nil ((7104 . 7108)) nil (25651 33277 184654 401000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7102) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7103) (undo-tree-id45 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7104) (undo-tree-id46 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7105) (undo-tree-id47 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7106) (undo-tree-id48 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7107) (undo-tree-id49 . -1) 7108) nil (25651 33277 184652 521000) 0 nil])
([nil nil ((7115 . 7117) (7114 . 7116) (#("[" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7114) (7114 . 7115) (7113 . 7115) (#("[" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7113) (7102 . 7114)) nil (25651 33277 184645 491000) 0 nil])
([nil nil ((7117 . 7123)) nil (25651 33277 184643 401000) 0 nil])
([nil nil ((7123 . 7126)) nil (25651 33277 184642 631000) 0 nil])
([nil nil ((7128 . 7129)) nil (25651 33277 184641 801000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id43 . -1) 7081) nil (25651 33277 184640 711000) 0 nil])
([nil nil ((7080 . 7081)) nil (25651 33277 184638 931000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id42 . -1) 7081) nil (25651 33277 184637 780000) 0 nil])
([nil nil ((7080 . 7087)) nil (25651 33277 184635 940000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7091) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7092) (undo-tree-id39 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7093) (undo-tree-id40 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7094) (undo-tree-id41 . -1) 7095) nil (25651 33277 184634 230000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . -7087) (undo-tree-id34 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7088) (undo-tree-id35 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7089) (undo-tree-id36 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7090) (undo-tree-id37 . -1) 7091) nil (25651 33277 184628 970000) 0 nil])
([nil nil ((#("the link [[img/foo.jpg]] " 0 9 (fontified t ws-butler-chg chg face font-lock-comment-face) 9 10 (fontified t ws-butler-chg chg face font-lock-comment-face) 10 22 (fontified t ws-butler-chg chg face font-lock-comment-face) 22 23 (fontified t ws-butler-chg chg face font-lock-comment-face) 23 24 (fontified t ws-butler-chg delete face font-lock-comment-face) 24 25 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 7102) (undo-tree-id33 . -25)) nil (25651 33277 184624 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7112 . 7113) (nil fontified nil 7112 . 7113) (nil fontified nil 7111 . 7112) (nil fontified nil 7110 . 7111) (nil fontified nil 7098 . 7110) (nil fontified nil 7097 . 7098) (nil fontified nil 7088 . 7097) (7088 . 7113)) nil (25651 33277 184621 850000) 0 nil])
([nil nil ((7113 . 7114)) nil (25651 33277 184619 540000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . -7087) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 7088) nil (25651 33277 184618 390000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7112) (undo-tree-id30 . -1) (#("orgmode-file, " 0 14 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 7113)) nil (25651 33277 184615 420000) 0 nil])
([nil nil ((7112 . 7113)) nil (25651 33277 184613 540000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7112) (undo-tree-id29 . -1) 7113) nil (25651 33277 184612 550000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7080) (undo-tree-id28 . -1) 7081) nil (25651 33277 184610 270000) 0 nil])
([nil nil ((7080 . 7096)) nil (25651 33277 184608 420000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7095) (undo-tree-id27 . -1) 7096) nil (25651 33277 184607 370000) 0 nil])
([nil nil ((7095 . 7102)) nil (25651 33277 184605 510000) 0 nil])
([nil nil ((7102 . 7103)) nil (25651 33277 184604 660000) 0 nil])
([nil nil ((7103 . 7104)) nil (25651 33277 184603 820000) 0 nil])
([nil nil ((7135 . 7141)) nil (25651 33277 184603 20000) 0 nil])
([nil nil ((7141 . 7155)) nil (25651 33277 184602 110000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7135) (undo-tree-id7 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7136) (undo-tree-id8 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7137) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7138) (undo-tree-id10 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7139) (undo-tree-id11 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7140) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7141) (undo-tree-id13 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7142) (undo-tree-id14 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7143) (undo-tree-id15 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7144) (undo-tree-id16 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7145) (undo-tree-id17 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7146) (undo-tree-id18 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7147) (undo-tree-id19 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7148) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7149) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7150) (undo-tree-id22 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7151) (undo-tree-id23 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7152) (undo-tree-id24 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7153) (undo-tree-id25 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7154) (undo-tree-id26 . -1) 7155) nil (25651 33277 184597 480000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7138) (7135 . 7138) (7135 . 7136) (#(" " 0 1 (ws-butler-chg chg fontified nil rear-nonsticky t face font-lock-comment-face)) . 7134) (undo-tree-id6 . -1) (7135 . 7136)) nil (25651 33277 184577 620000) 0 nil])
([nil nil ((7138 . 7144)) nil (25651 33277 184574 820000) 0 nil])
([nil nil ((7144 . 7158)) nil (25651 33277 184573 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7157) (undo-tree-id5 . -1) 7158) nil (25651 33277 184572 840000) 0 nil])
([nil nil ((7157 . 7161)) nil (25651 33277 184571 40000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7160) (undo-tree-id4 . -1) 7161) nil (25651 33277 184569 820000) 0 nil])
([nil nil ((7160 . 7170)) nil (25651 33277 184567 730000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7169) (undo-tree-id3 . -1) 7170) nil (25651 33277 184566 110000) 0 nil])
([nil nil ((7169 . 7190)) nil (25651 33277 184563 550000) 0 nil])
([nil nil ((7190 . 7195)) nil (25651 33277 184562 350000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 7199) (7196 . 7199) (7195 . 7197)) nil (25651 33277 184560 360000) 0 nil])
([nil nil ((#("

" 1 2 (ws-butler-chg delete)) . 15186) (15188 . 15188) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 7198) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 7199) nil (25651 33277 184555 650000) 0 nil])
([nil nil ((7198 . 7203) (t 25651 33277 182999 980000)) nil (25651 33382 62167 999000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7201) (undo-tree-id97 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7202) (undo-tree-id98 . -1) 7203) nil (25651 33382 62166 109000) 0 nil])
([nil nil ((7201 . 7205)) nil (25651 33382 62162 719000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7203) (undo-tree-id95 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7204) (undo-tree-id96 . -1) 7205) nil (25651 33382 62160 369000) 0 nil])
([nil nil ((7203 . 7208)) nil (25651 33382 62150 109000) 0 nil])
([nil nil ((7208 . 7222)) nil (25651 33382 62146 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-face ws-butler-chg chg)) . 7226) (7223 . 7226) (7222 . 7224) (t 25651 33382 59873 846000)) nil (25651 33454 665942 131000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7323 . 7324) (nil fontified nil 7226 . 7324) (7226 . 7324)) nil (25651 33454 665936 551000) 0 nil])
([nil nil ((7873 . 7875) (t 25651 33454 664474 342000)) nil (25651 34400 960103 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8073 . 8074) (nil fontified nil 7875 . 8074) (7875 . 8074)) nil (25651 34400 960099 44000) 0 nil])
([nil nil ((7874 . 7875) (t 25651 34400 956078 518000)) nil (25651 34816 786256 660000) 0 nil])
([nil nil ((7875 . 7888)) nil (25651 34816 786255 450000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7884) (undo-tree-id7 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7885) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7886) (undo-tree-id9 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7887) (undo-tree-id10 . -1) 7888) nil (25651 34816 786253 420000) 0 nil])
([nil nil ((7884 . 7897)) nil (25651 34816 786248 420000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7892) (undo-tree-id2 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7893) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7894) (undo-tree-id4 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7895) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7896) (undo-tree-id6 . -1) 7897) nil (25651 34816 786246 430000) 0 nil])
([nil nil ((7892 . 7896)) nil (25651 34816 786240 90000) 0 nil])
([nil nil ((7896 . 7913)) nil (25651 34816 786238 930000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7911) (undo-tree-id0 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7912) (undo-tree-id1 . -1) 7913) nil (25651 34816 786236 820000) 0 nil])
([nil nil ((7911 . 7912)) nil (25651 34816 786220 70000) 0 nil])
([nil nil ((7916 . 7931) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7916) (7916 . 7917) (#("'" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7916) (7912 . 7917)) nil (25651 35432 441660 818000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-string-face)) . -7602) (undo-tree-id0 . -1) 7603 (t 25651 35436 426083 474000)) nil (25651 37118 799243 682000) 0 nil] [nil nil ((apply -33 7325 7907 undo--wrap-and-run-primitive-undo 7325 7907 ((7847 . 7850) (7783 . 7786) (7731 . 7734) (7676 . 7679) (7566 . 7569) (7522 . 7525) (7469 . 7472) (7400 . 7403) (7386 . 7389) (7354 . 7357) (7325 . 7328) 7873)) (t 25651 34816 786229 666000)) ((apply 33 7325 7874 undo--wrap-and-run-primitive-undo 7325 7874 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7325) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7354) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7386) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7400) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7469) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7522) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7566) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7676) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7731) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7783) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 7847))) (t 25651 35326 53367 369000)) (25651 35326 56962 257000) 0 nil])
([nil nil ((7602 . 7605)) nil (25651 37118 799209 272000) 0 nil])
nil
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -7604) (undo-tree-id0 . -1) 7605 (t 25651 37118 796643 836000)) nil (25652 7046 308842 706000) 0 nil])
([nil nil ((8133 . 8135) (t 25652 7046 311334 7000)) nil (25652 27463 639367 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8199 . 8200) (nil fontified nil 8134 . 8200) (8134 . 8200)) nil (25652 27463 639365 912000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8159) (undo-tree-id1 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8160) (undo-tree-id2 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8161) (undo-tree-id3 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8162) (undo-tree-id4 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8163) (undo-tree-id5 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8164) (undo-tree-id6 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8165) (undo-tree-id7 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8166) (undo-tree-id8 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8167) (undo-tree-id9 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8168) (undo-tree-id10 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8169) (undo-tree-id11 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8170) (undo-tree-id12 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8171) (undo-tree-id13 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8172) (undo-tree-id14 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8173) (undo-tree-id15 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8174) (undo-tree-id16 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8175) (undo-tree-id17 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8176) (undo-tree-id18 . -1) 8177) nil (25652 27463 639359 622000) 0 nil])
([nil nil ((8159 . 8161)) nil (25652 27463 639334 952000) 0 nil])
([nil nil ((8161 . 8167)) nil (25652 27463 639333 832000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8166) (undo-tree-id0 . -1) 8167) nil (25652 27463 639331 612000) 0 nil])
([nil nil ((8166 . 8168)) nil (25652 27463 639319 412000) 0 nil])
([nil nil ((8168 . 8181)) nil (25652 27463 639318 512000) 0 nil])
([nil nil ((8204 . 8206)) nil (25652 27463 639317 442000) 0 nil])
([nil nil ((8205 . 8206)) nil (25652 27463 639316 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8353 . 8354) (nil fontified nil 8206 . 8354) (8206 . 8354)) nil (25652 27463 639314 842000) 0 nil])
([nil nil ((8133 . 8134)) nil (25652 27463 639312 832000) 0 nil])
([nil nil ((8134 . 8136)) nil (25652 27463 639310 402000) 0 nil])
([nil nil ((8136 . 8146)) nil (25652 27463 639305 922000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -8182) (undo-tree-id3 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8183) (undo-tree-id4 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -8184) (undo-tree-id5 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -8185) (undo-tree-id6 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8186) (undo-tree-id7 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -8187) (undo-tree-id8 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -8188) (undo-tree-id9 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8189) (undo-tree-id10 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8190) (undo-tree-id11 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -8191) (undo-tree-id12 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8192) (undo-tree-id13 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -8193) (undo-tree-id14 . -1) 8194 (t 25652 27463 636763 835000)) nil (25652 27609 161659 724000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8194 . 8195) (nil fontified nil 8182 . 8195) (8182 . 8195)) nil (25652 27609 161651 834000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8182) (undo-tree-id2 . -1) 8183) nil (25652 27609 161650 574000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . -8172) (undo-tree-id0 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -8173) (undo-tree-id1 . -1) 8174) nil (25652 27609 161648 164000) 0 nil])
([nil nil ((8172 . 8187)) nil (25652 27609 161637 414000) 0 nil])
([nil nil ((apply -21 8232 8402 undo--wrap-and-run-primitive-undo 8232 8402 ((8395 . 8398) (8358 . 8361) (8332 . 8335) (8319 . 8322) (8275 . 8278) (8258 . 8261) (8232 . 8235) 8380)) (t 25652 27609 161820 877000)) nil (25652 35483 83217 768000) 0 nil])
([nil nil ((8210 . 8212) (t 25652 35483 82444 560000)) nil (25652 35514 943283 644000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8210) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8211) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 8212 (t 25652 35514 942646 994000)) nil (25653 25639 26647 32000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -8195) (undo-tree-id1 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8196) (undo-tree-id2 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -8197) (undo-tree-id3 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -8198) (undo-tree-id4 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8199) (undo-tree-id5 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -8200) (undo-tree-id6 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -8201) (undo-tree-id7 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8202) (undo-tree-id8 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8203) (undo-tree-id9 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -8204) (undo-tree-id10 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8205) (undo-tree-id11 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -8206) (undo-tree-id12 . -1) 8207 (t 25653 25639 24612 152000)) nil (25653 25746 916297 867000) 0 nil])
([nil nil ((8195 . 8204)) nil (25653 25746 916282 997000) 0 nil])
([nil nil ((8204 . 8207)) nil (25653 25746 916281 887000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8206) (undo-tree-id0 . -1) 8207) nil (25653 25746 916278 917000) 0 nil])
([nil nil ((8206 . 8207)) nil (25653 25746 916260 717000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -8204) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -8205) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -8206) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 8207 (t 25653 25746 917293 314000)) nil (25653 25808 401239 26000) 0 nil])
([nil nil ((8147 . 8149) (t 25653 25808 401673 705000)) nil (25653 27815 607538 97000) 0 nil])
([nil nil ((8206 . 8209) (t 25653 27815 603623 296000)) nil (25653 27873 440997 751000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face highlight-quoted-quote)) . -8221) (undo-tree-id0 . -1) 8222) nil (25653 27873 440995 161000) 0 nil])
([nil nil ((8221 . 8222) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8221) (8221 . 8222) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -8221) (8221 . 8222)) nil (25653 27873 440978 471000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8147) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8148) (undo-tree-id1 . -1) 8149 (t 25653 27873 440050 470000)) nil (25653 27940 304848 98000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8211) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t)) . -8212) (undo-tree-id2 . -1) (#("q" 0 1 (fontified t)) . -8213) (undo-tree-id3 . -1) (#("u" 0 1 (fontified t)) . -8214) (undo-tree-id4 . -1) (#("i" 0 1 (fontified t)) . -8215) (undo-tree-id5 . -1) (#("r" 0 1 (fontified t)) . -8216) (undo-tree-id6 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -8217) (undo-tree-id7 . -1) 8218 (t 25653 27940 304542 869000)) nil (25653 28261 530889 76000) 0 nil])
([nil nil ((8211 . 8216)) nil (25653 28261 530879 556000) 0 nil])
([nil nil ((8211 . 8222) (#("use-p" 0 5 (fontified t ws-butler-chg chg)) . -8211) (undo-tree-id0 . -5) 8216) nil (25653 28261 530875 366000) 0 nil])
([nil nil ((#("'" 0 1 (face highlight-quoted-quote fontified t)) . -8223) (undo-tree-id0 . -1) 8224 (t 25653 28261 530891 992000)) nil (25653 28326 50762 732000) 0 nil])
([nil nil ((8223 . 8224) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8223) (8223 . 8224) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -8223) (8223 . 8224) (t 25653 28326 51361 373000)) nil (25653 28549 200898 692000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8211) (undo-tree-id0 . -1) (#("s" 0 1 (fontified t)) . -8212) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t)) . -8213) (undo-tree-id2 . -1) (#("-" 0 1 (fontified t)) . -8214) (undo-tree-id3 . -1) (#("p" 0 1 (fontified t)) . -8215) (undo-tree-id4 . -1) (#("a" 0 1 (fontified t)) . -8216) (undo-tree-id5 . -1) (#("c" 0 1 (fontified t)) . -8217) (undo-tree-id6 . -1) (#("k" 0 1 (fontified t)) . -8218) (undo-tree-id7 . -1) (#("a" 0 1 (fontified t)) . -8219) (undo-tree-id8 . -1) (#("g" 0 1 (fontified t)) . -8220) (undo-tree-id9 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -8221) (undo-tree-id10 . -1) 8222) nil (25653 28549 200893 822000) 0 nil])
([nil nil ((8211 . 8218)) nil (25653 28549 200865 942000) 0 nil])
([nil nil ((8147 . 8148)) nil (25653 28549 200862 452000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8147) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 8148 (t 25653 28549 200980 509000)) nil (25653 28673 254112 837000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -8202) (undo-tree-id7 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8203) (undo-tree-id8 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -8204) (undo-tree-id9 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8205) (undo-tree-id10 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -8206) (undo-tree-id11 . -1) 8207) nil (25653 28673 254106 997000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -8195) (undo-tree-id0 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8196) (undo-tree-id1 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -8197) (undo-tree-id2 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -8198) (undo-tree-id3 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8199) (undo-tree-id4 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -8200) (undo-tree-id5 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -8201) (undo-tree-id6 . -1) 8202) nil (25653 29016 824777 608000) 0 nil])
([nil nil ((apply 21 8220 8368 undo--wrap-and-run-primitive-undo 8220 8368 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8365) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8331) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8308) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8298) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8257) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8243) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8220)))) ((apply -21 8220 8389 undo--wrap-and-run-primitive-undo 8220 8389 ((8220 . 8223) (8243 . 8246) (8257 . 8260) (8298 . 8301) (8308 . 8311) (8331 . 8334) (8365 . 8368))) (t 25653 28722 422234 17000)) (25653 29017 916120 213000) 0 nil])
([nil nil ((#("(with-eval-after-load 'ol
    (org-link-set-parameters
     \"img\"
     :follow (lambda (path arg) (org-link-open-as-file path arg))
     :export (lambda (path desc backend cchannel)
               (cond ((eq backend 'html)
                      (format \"<img style=\\\"max-width:100%%;margin:2em\\\" src=\\\"data:image/jpg;base64,%s\\\">\"
                              (base64-encode-string
                               (with-temp-buffer
                                 (insert-file-contents path)
                                 (buffer-string)))))))))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 23 (face highlight-quoted-quote fontified t) 23 25 (face highlight-quoted-symbol fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 54 (face font-lock-function-name-face fontified t) 54 60 (fontified t) 60 65 (face font-lock-string-face fontified t) 65 71 (fontified t) 71 78 (face font-lock-builtin-face fontified t) 78 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-3-face) fontified t) 80 86 (face font-lock-keyword-face fontified t) 86 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-4-face) fontified t) 88 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-4-face) fontified t) 97 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-4-face) fontified t) 99 120 (face font-lock-function-name-face fontified t) 120 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-4-face) fontified t) 130 131 (face (rainbow-delimiters-depth-3-face) fontified t) 131 137 (fontified t) 137 144 (face font-lock-builtin-face fontified t) 144 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-3-face) fontified t) 146 152 (face font-lock-keyword-face fontified t) 152 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-4-face) fontified t) 154 180 (fontified t) 180 181 (face (rainbow-delimiters-depth-4-face) fontified t) 181 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-4-face) fontified t) 198 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t) 203 204 (face (rainbow-delimiters-depth-1-face) fontified t) 204 205 (face (rainbow-delimiters-depth-2-face) fontified t) 205 207 (face font-lock-constant-face fontified t) 207 216 (fontified t) 216 217 (face highlight-quoted-quote fontified t) 217 221 (face highlight-quoted-symbol fontified t) 221 222 (face (rainbow-delimiters-depth-2-face) fontified t) 222 245 (fontified t) 245 246 (face (rainbow-delimiters-depth-2-face) fontified t) 246 252 (face font-lock-constant-face fontified t) 252 253 (fontified t) 253 330 (face font-lock-string-face fontified t) 330 361 (fontified t) 361 362 (face (rainbow-delimiters-depth-3-face) fontified t) 362 382 (face font-lock-constant-face fontified t) 382 414 (fontified t) 414 415 (face (rainbow-delimiters-depth-4-face) fontified t) 415 431 (face font-lock-keyword-face fontified t) 431 465 (fontified t) 465 466 (face (rainbow-delimiters-depth-1-face) fontified t) 466 486 (face font-lock-constant-face fontified t) 486 491 (fontified t) 491 492 (face (rainbow-delimiters-depth-1-face) fontified t) 492 493 (fontified t) 493 526 (fontified t) 526 527 (face (rainbow-delimiters-depth-1-face) fontified t) 527 540 (face font-lock-constant-face fontified t) 540 541 (face (rainbow-delimiters-depth-1-face) fontified t) 541 542 (face (rainbow-delimiters-depth-4-face) fontified t) 542 543 (face (rainbow-delimiters-depth-3-face) fontified t) 543 544 (face (rainbow-delimiters-depth-2-face) fontified t) 544 545 (face (rainbow-delimiters-depth-1-face) fontified t) 545 546 (face (rainbow-delimiters-depth-4-face) fontified t) 546 547 (face (rainbow-delimiters-depth-3-face) fontified t) 547 548 (face (rainbow-delimiters-depth-2-face) fontified t) 548 549 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7325) (undo-tree-id22 . -549) (undo-tree-id23 . -493) (undo-tree-id24 . -493) (undo-tree-id25 . -432) (undo-tree-id26 . -432) (undo-tree-id27 . -383) (undo-tree-id28 . -383) (undo-tree-id29 . -331) (undo-tree-id30 . -331) (undo-tree-id31 . -223) (undo-tree-id32 . -223) (undo-tree-id33 . -182) (undo-tree-id34 . -182) (undo-tree-id35 . -132) (undo-tree-id36 . -132) (undo-tree-id37 . -66) (undo-tree-id38 . -66) (undo-tree-id39 . -55) (undo-tree-id40 . -55) (undo-tree-id41 . -26) (undo-tree-id42 . -26) (undo-tree-id43 . -493) (undo-tree-id44 . -549) (undo-tree-id45 . -549) (undo-tree-id46 . 1) (undo-tree-id47 . -549) (undo-tree-id48 . 549) (undo-tree-id49 . -1) (undo-tree-id50 . -549) (undo-tree-id51 . -549) 7818 (t 25653 28722 422234 17000)) nil (25653 29104 615815 624000) 0 nil] [nil nil ((nil rear-nonsticky nil 8483 . 8484) (nil fontified nil 7874 . 8484) (7874 . 8484) (t 25653 28722 422234 17000)) ((#("(with-eval-after-load 'ol
    (org-link-set-parameters
     \"img\"
     :follow (lambda (path arg) (org-link-open-as-file path arg))
     :export (lambda (path desc backend cchannel)
               (cond ((eq backend 'html)
                      (format \"<img style=\\\"max-width:80%%;margin:2em\\\" src=\\\"data:%s;base64,%s\\\">\"
                              (mailcap-file-name-to-mime-type path)
                              (base64-encode-string
                               (with-temp-buffer
                                 (insert-file-contents path)
                                  (buffer-string)))))))))" 0 1 (face (rainbow-delimiters-depth-1-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified nil ws-butler-chg chg) 1 21 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-keyword-face) fontified nil ws-butler-chg chg) 21 25 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified nil ws-butler-chg chg) 25 30 (fontified nil ws-butler-chg chg) 30 31 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 31 54 (face font-lock-function-name-face fontified nil ws-butler-chg chg) 54 60 (fontified nil ws-butler-chg chg) 60 65 (face font-lock-string-face fontified nil ws-butler-chg chg) 65 71 (fontified nil ws-butler-chg chg) 71 78 (face font-lock-builtin-face fontified nil ws-butler-chg chg) 78 79 (fontified nil ws-butler-chg chg) 79 80 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 80 86 (face font-lock-keyword-face fontified nil ws-butler-chg chg) 86 87 (fontified nil ws-butler-chg chg) 87 88 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 88 96 (fontified nil ws-butler-chg chg) 96 97 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 97 98 (fontified nil ws-butler-chg chg) 98 99 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 99 120 (face font-lock-function-name-face fontified nil ws-butler-chg chg) 120 129 (fontified nil ws-butler-chg chg) 129 130 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 130 131 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 131 137 (fontified nil ws-butler-chg chg) 137 144 (face font-lock-builtin-face fontified nil ws-butler-chg chg) 144 145 (fontified nil ws-butler-chg chg) 145 146 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 146 152 (face font-lock-keyword-face fontified nil ws-butler-chg chg) 152 153 (fontified nil ws-butler-chg chg) 153 154 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 154 180 (fontified nil ws-butler-chg chg) 180 181 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 181 197 (fontified nil ws-butler-chg chg) 197 198 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 198 202 (face font-lock-keyword-face fontified nil ws-butler-chg chg) 202 203 (fontified nil ws-butler-chg chg) 203 204 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 204 205 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 205 207 (face font-lock-constant-face fontified nil ws-butler-chg chg) 207 216 (fontified nil ws-butler-chg chg) 216 217 (face highlight-quoted-quote fontified nil ws-butler-chg chg) 217 221 (face highlight-quoted-symbol fontified nil ws-butler-chg chg) 221 222 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 222 245 (fontified nil ws-butler-chg chg) 245 246 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 246 252 (face font-lock-constant-face fontified nil ws-butler-chg chg) 252 253 (fontified nil ws-butler-chg chg) 253 322 (face font-lock-string-face fontified nil ws-butler-chg chg) 322 353 (fontified nil ws-butler-chg chg) 353 354 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 354 384 (face font-lock-function-name-face fontified nil ws-butler-chg chg) 384 389 (fontified nil ws-butler-chg chg) 389 390 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 390 421 (fontified nil ws-butler-chg chg) 421 422 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 422 442 (face font-lock-constant-face fontified nil ws-butler-chg chg) 442 474 (fontified nil ws-butler-chg chg) 474 475 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 475 491 (face font-lock-keyword-face fontified nil ws-butler-chg chg) 491 525 (fontified nil ws-butler-chg chg) 525 526 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 526 546 (face font-lock-constant-face fontified nil ws-butler-chg chg) 546 551 (fontified nil ws-butler-chg chg) 551 552 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 552 553 (fontified nil ws-butler-chg chg) 553 587 (fontified nil ws-butler-chg chg) 587 588 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 588 601 (face font-lock-constant-face fontified nil ws-butler-chg chg) 601 602 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 602 603 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 603 604 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 604 605 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 605 606 (face (rainbow-delimiters-depth-1-face) fontified nil ws-butler-chg chg) 606 607 (face (rainbow-delimiters-depth-4-face) fontified nil ws-butler-chg chg) 607 608 (face (rainbow-delimiters-depth-3-face) fontified nil ws-butler-chg chg) 608 609 (face (rainbow-delimiters-depth-2-face) fontified nil ws-butler-chg chg) 609 610 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil ws-butler-chg chg)) . 7874) (undo-tree-id0 . -587) (undo-tree-id1 . -587) (undo-tree-id2 . -610) (undo-tree-id3 . -553) (undo-tree-id4 . -553) (undo-tree-id5 . 23) (undo-tree-id6 . -588) (undo-tree-id7 . 22) (undo-tree-id8 . -601) (undo-tree-id9 . 9) (undo-tree-id10 . -602) (undo-tree-id11 . -587) (undo-tree-id12 . -587) (nil fontified t 8426 . 8427) (nil fontified t 8425 . 8426) (nil fontified t 8420 . 8425) (nil fontified t 8400 . 8420) (nil fontified t 8399 . 8400) (nil fontified t 8365 . 8399) (nil fontified t 8349 . 8365) (nil fontified t 8348 . 8349) (nil fontified t 8316 . 8348) (nil fontified t 8296 . 8316) (nil fontified t 8295 . 8296) (nil fontified t 8264 . 8295) (nil fontified t 8263 . 8264) (nil fontified t 8258 . 8263) (nil fontified t 8228 . 8258) (nil fontified t 8227 . 8228) (nil fontified t 8196 . 8227) (nil fontified t 8127 . 8196) (nil fontified t 8126 . 8127) (nil fontified t 8120 . 8126) (nil fontified t 8119 . 8120) (nil fontified t 8096 . 8119) (nil fontified t 8095 . 8096) (nil fontified t 8091 . 8095) (nil fontified t 8090 . 8091) (nil fontified t 8081 . 8090) (nil fontified t 8079 . 8081) (nil fontified t 8078 . 8079) (nil fontified t 8077 . 8078) (nil fontified t 8076 . 8077) (nil fontified t 8072 . 8076) (nil fontified t 8071 . 8072) (nil fontified t 8055 . 8071) (nil fontified t 8054 . 8055) (nil fontified t 8028 . 8054) (nil fontified t 8027 . 8028) (nil fontified t 8026 . 8027) (nil fontified t 8020 . 8026) (nil fontified t 8019 . 8020) (nil fontified t 8018 . 8019) (nil fontified t 8011 . 8018) (nil fontified t 8005 . 8011) (nil fontified t 8004 . 8005) (nil fontified t 8003 . 8004) (nil fontified t 7994 . 8003) (nil fontified t 7973 . 7994) (nil fontified t 7972 . 7973) (nil fontified t 7971 . 7972) (nil fontified t 7970 . 7971) (nil fontified t 7962 . 7970) (nil fontified t 7961 . 7962) (nil fontified t 7960 . 7961) (nil fontified t 7954 . 7960) (nil fontified t 7953 . 7954) (nil fontified t 7952 . 7953) (nil fontified t 7945 . 7952) (nil fontified t 7939 . 7945) (nil fontified t 7934 . 7939) (nil fontified t 7928 . 7934) (nil fontified t 7905 . 7928) (nil fontified t 7904 . 7905) (nil fontified t 7899 . 7904) (nil fontified t 7895 . 7899) (nil fontified t 7875 . 7895) (nil fontified t 7874 . 7875) (nil rear-nonsticky t 8483 . 8484)) (25653 29013 401924 660000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7934 . 7935) (nil fontified nil 7325 . 7935) (7325 . 7935)) nil (25653 29104 615789 853000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -8425) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -8426) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -8427) (undo-tree-id21 . -1) 8428) nil (25653 29104 615784 473000) 0 nil])
([nil nil ((8207 . 8215) (t 25653 29104 612993 414000)) nil (25653 29537 704513 142000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8214) (undo-tree-id60 . -1) 8215) nil (25653 29537 704512 392000) 0 nil])
([nil nil ((8214 . 8221)) nil (25653 29537 704511 312000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8211) (undo-tree-id50 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8212) (undo-tree-id51 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8213) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8214) (undo-tree-id53 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8215) (undo-tree-id54 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8216) (undo-tree-id55 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8217) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8218) (undo-tree-id57 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8219) (undo-tree-id58 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8220) (undo-tree-id59 . -1) 8221) nil (25653 29537 704509 692000) 0 nil])
([nil nil ((8211 . 8214)) nil (25653 29537 704503 592000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8212) (undo-tree-id48 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8213) (undo-tree-id49 . -1) 8214) nil (25653 29537 704502 862000) 0 nil])
([nil nil ((8212 . 8220)) nil (25653 29537 704501 182000) 0 nil])
([nil nil ((8220 . 8239)) nil (25653 29537 704500 722000) 0 nil])
([nil nil ((8239 . 8245)) nil (25653 29537 704500 232000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8234) (undo-tree-id37 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8235) (undo-tree-id38 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8236) (undo-tree-id39 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8237) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8238) (undo-tree-id41 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8239) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8240) (undo-tree-id43 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8241) (undo-tree-id44 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8242) (undo-tree-id45 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8243) (undo-tree-id46 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8244) (undo-tree-id47 . -1) 8245) nil (25653 29537 704498 532000) 0 nil])
([nil nil ((8239 . 8243) (8238 . 8240) (#("\"" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -8238) (8234 . 8239)) nil (25653 29537 704491 572000) 0 nil])
([nil nil ((8243 . 8247)) nil (25653 29537 704490 672000) 0 nil])
([nil nil ((8248 . 8253)) nil (25653 29537 704490 172000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8249) (undo-tree-id33 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8250) (undo-tree-id34 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8251) (undo-tree-id35 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8252) (undo-tree-id36 . -1) 8253) nil (25653 29537 704489 112000) 0 nil])
([nil nil ((8249 . 8251)) nil (25653 29537 704486 352000) 0 nil])
([nil nil ((8251 . 8253)) nil (25653 29537 704485 712000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8252) (undo-tree-id32 . -1) 8253) nil (25653 29537 704484 812000) 0 nil])
([nil nil ((8252 . 8273)) nil (25653 29537 704483 522000) 0 nil])
([nil nil ((8273 . 8275)) nil (25653 29537 704482 952000) 0 nil])
([nil nil ((8275 . 8290)) nil (25653 29537 704482 452000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8287) (undo-tree-id29 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8288) (undo-tree-id30 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8289) (undo-tree-id31 . -1) 8290) nil (25653 29537 704481 542000) 0 nil])
([nil nil ((8287 . 8301)) nil (25653 29537 704479 372000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8296) (undo-tree-id24 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8297) (undo-tree-id25 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8298) (undo-tree-id26 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8299) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8300) (undo-tree-id28 . -1) 8301) nil (25653 29537 704478 212000) 0 nil])
([nil nil ((8296 . 8302)) nil (25653 29537 704474 912000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 8306) (8303 . 8306) (8302 . 8304)) nil (25653 29537 704474 232000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8343 . 8344) (nil fontified nil 8306 . 8344) (8306 . 8344)) nil (25653 29537 704473 262000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8416) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 8417) nil (25653 29537 704472 262000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8212) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8213) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8214) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8215) (undo-tree-id17 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8216) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8217) (undo-tree-id19 . -1) 8218) nil (25653 29537 704469 12000) 0 nil])
([nil nil ((8212 . 8213)) nil (25653 29537 704463 682000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8212) (undo-tree-id10 . -1) 8213) nil (25653 29537 704462 982000) 0 nil])
([nil nil ((8212 . 8219)) nil (25653 29537 704461 662000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8218) (undo-tree-id9 . -1) 8219) nil (25653 29537 704460 822000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8226) (undo-tree-id0 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8227) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8228) (undo-tree-id2 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8229) (undo-tree-id3 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8230) (undo-tree-id4 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8231) (undo-tree-id5 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8232) (undo-tree-id6 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8233) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8234) (undo-tree-id8 . -1) 8235) nil (25653 29537 704458 12000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 8339) (8336 . 8339) (8335 . 8337)) nil (25653 29537 704440 612000) 0 nil])
([nil nil ((8525 . 8526)) nil (25653 29537 704439 222000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . 8338) 7551) nil (25653 29537 704436 102000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-string-face)) . -7602) (undo-tree-id72 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -7603) (undo-tree-id73 . -1) 7604 (t 25653 29537 704114 648000)) nil (25653 29667 699800 485000) 0 nil])
([nil nil ((7602 . 7603)) nil (25653 29667 699798 335000) 0 nil])
([nil nil ((7603 . 7604)) nil (25653 29667 699797 615000) 0 nil])
([nil nil ((#("https://www.reddit.com/r/orgmode/comments/12gxa8s/how_to_generate_a_single_htmlfile_with_embedded/" 0 98 (fontified t face font-lock-comment-face)) . 7226) (undo-tree-id71 . -98)) nil (25653 29667 699796 635000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7323 . 7324) (nil fontified nil 7226 . 7324) (7226 . 7324)) nil (25653 29667 699794 765000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7328) (7325 . 7328) (7324 . 7326)) nil (25653 29667 699793 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7370 . 7371) (nil fontified nil 7328 . 7371) (7328 . 7371)) nil (25653 29667 699792 515000) 0 nil])
([nil nil ((7372 . 7374) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7372) (7371 . 7373)) nil (25653 29667 699791 545000) 0 nil])
([nil nil ((#("()" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 7372) (undo-tree-id66 . -1) (undo-tree-id67 . 2) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -2) 7373) nil (25653 29667 699790 275000) 0 nil])
([nil nil ((7373 . 7378) (7372 . 7374) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . -7372) (7372 . 7373)) nil (25653 29667 699784 735000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7376) (undo-tree-id64 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7377) (undo-tree-id65 . -1) 7378) nil (25653 29667 699783 145000) 0 nil])
([nil nil ((7376 . 7381)) nil (25653 29667 699780 565000) 0 nil])
([nil nil ((7381 . 7394)) nil (25653 29667 699779 545000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7391) (undo-tree-id61 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7392) (undo-tree-id62 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7393) (undo-tree-id63 . -1) 7394) nil (25653 29667 699777 955000) 0 nil])
([nil nil ((7391 . 7407)) nil (25653 29667 699769 725000) 0 nil])
([nil nil ((7407 . 7428)) nil (25653 29667 699768 665000) 0 nil])
([nil nil ((7428 . 7429)) nil (25653 29667 699765 145000) 0 nil])
([nil nil ((8495 . 8508) (t 25653 29667 697050 841000)) nil (25653 29718 456382 23000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -8504) (undo-tree-id85 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -8505) (undo-tree-id86 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8506) (undo-tree-id87 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8507) (undo-tree-id88 . -1) 8508) nil (25653 29718 456380 733000) 0 nil])
([nil nil ((8504 . 8510)) nil (25653 29718 456377 683000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -8509) (undo-tree-id84 . -1) 8510) nil (25653 29718 456377 103000) 0 nil])
([nil nil ((8509 . 8516)) nil (25653 29718 456376 23000) 0 nil])
([nil nil ((8516 . 8526)) nil (25653 29718 456375 513000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -8525) (undo-tree-id83 . -1) 8526) nil (25653 29718 456374 803000) 0 nil])
([nil nil ((8525 . 8527)) nil (25653 29718 456373 493000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -8525) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8526) (undo-tree-id82 . -1) 8527) nil (25653 29718 456372 293000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t ws-butler-chg chg)) . -8496) (undo-tree-id80 . -1) 8497) nil (25653 29718 456369 963000) 0 nil])
([nil nil ((8496 . 8497)) nil (25653 29718 456368 463000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8498) (undo-tree-id74 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8499) (undo-tree-id75 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8500) (undo-tree-id76 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8501) (undo-tree-id77 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8502) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8503) (undo-tree-id79 . -1) 8504) nil (25653 29718 456366 463000) 0 nil])
([nil nil ((8519 . 8540)) nil (25653 29718 456355 233000) 0 nil])
([nil nil ((8540 . 8542)) nil (25653 29718 456351 803000) 0 nil])
([nil nil ((8444 . 8445) (t 25653 29718 457416 356000)) nil (25653 29786 256911 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8465 . 8466) (nil fontified nil 8445 . 8466) (8445 . 8466)) nil (25653 29786 256911 39000) 0 nil])
([nil nil ((8445 . 8449)) nil (25653 29786 256909 809000) 0 nil])
([nil nil ((7199 . 7203)) nil (25653 29786 256906 579000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 8743) (8740 . 8743) (8739 . 8741) (t 25653 29786 257981 9000)) nil (25653 29827 295471 480000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -8742) (undo-tree-id0 . -1) 8743) nil (25653 29827 295466 640000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-face ws-butler-chg chg)) . 8478) (8475 . 8478) (8474 . 8476) (t 25653 29827 298373 930000)) nil (25653 30690 417159 129000) 0 nil])
([nil nil ((apply -27 8479 8775 undo--wrap-and-run-primitive-undo 8479 8775 ((8768 . 8771) (8730 . 8733) (8704 . 8707) (8691 . 8694) (8647 . 8650) (8630 . 8633) (8604 . 8607) (8580 . 8583) (8479 . 8482) 8747))) nil (25653 30690 417157 729000) 0 nil])
([nil current ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 8477) 8722) nil (25653 30690 417154 419000) 0 nil])
nil
