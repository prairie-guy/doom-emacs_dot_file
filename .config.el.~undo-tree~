(undo-tree-save-format-version . 1)
"63cb665f0313ef9db75145c994a4797a39b58b87"
[nil nil nil nil (25200 24425 669844 723000) 0 nil]
([nil nil ((10393 . 10397) (t 25159 27415 344142 709000)) nil (25200 24425 669841 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10418 . 10419) (nil fontified nil 10395 . 10419) (10395 . 10419)) nil (25200 24425 669839 136000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10443 . 10444) (nil fontified nil 10394 . 10444) (10394 . 10444)) nil (25200 24425 669836 62000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -10467) (undo-tree-id0 . -1) 10468) nil (25200 24425 669832 500000) 0 nil])
([nil nil ((10467 . 10471) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -10467) (10467 . 10468) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -10467) (10467 . 10468)) nil (25200 24425 669801 770000) 0 nil])
([nil nil ((#("(global-flycheck-mode 'nil)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t) 22 23 (fontified t face highlight-quoted-quote) 23 26 (fontified t face highlight-quoted-symbol) 26 27 (fontified t face (rainbow-delimiters-depth-1-face))) . 10445) (undo-tree-id24 . -27) (undo-tree-id25 . 27) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -27) (undo-tree-id29 . -27) (t 25200 24425 674977 337000)) nil (25200 24660 212331 725000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -10435) (undo-tree-id16 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -10436) (undo-tree-id17 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -10437) (undo-tree-id18 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -10438) (undo-tree-id19 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -10439) (undo-tree-id20 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -10440) (undo-tree-id21 . -1) (#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -10441) (undo-tree-id22 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -10442) (undo-tree-id23 . -1) 10443) nil (25200 24660 212319 433000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t)) . -10421) (undo-tree-id2 . -1) (#("'" 0 1 (fontified t face highlight-quoted-quote)) . -10422) (undo-tree-id3 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -10423) (undo-tree-id4 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -10424) (undo-tree-id5 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -10425) (undo-tree-id6 . -1) (#("b" 0 1 (fontified t face highlight-quoted-symbol)) . -10426) (undo-tree-id7 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -10427) (undo-tree-id8 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -10428) (undo-tree-id9 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -10429) (undo-tree-id10 . -1) (#("f" 0 1 (fontified t face highlight-quoted-symbol)) . -10430) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -10431) (undo-tree-id12 . -1) (#("y" 0 1 (fontified t face highlight-quoted-symbol)) . -10432) (undo-tree-id13 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -10433) (undo-tree-id14 . -1) (#("h" 0 1 (fontified t face highlight-quoted-symbol)) . -10434) (undo-tree-id15 . -1) 10435) nil (25200 24660 212301 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10447 . 10448) (nil fontified nil 10447 . 10448) (nil fontified nil 10444 . 10447) (nil fontified nil 10443 . 10444) (nil fontified nil 10442 . 10443) (nil fontified nil 10422 . 10442) (nil fontified nil 10421 . 10422) (10421 . 10448)) nil (25200 24660 212275 991000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 10450) (undo-tree-id1 . -1)) nil (25200 24660 212271 32000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 10450) (undo-tree-id0 . -1)) nil (25200 24660 212262 930000) 0 nil])
([nil nil ((#("(add-hook 'after-init-hook (global-flycheck-mode 'nil))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (face font-lock-function-name-face fontified t) 9 10 (fontified t) 10 11 (face highlight-quoted-quote fontified t) 11 26 (face font-lock-variable-name-face fontified t) 26 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 49 (fontified t) 49 50 (face highlight-quoted-quote fontified t) 50 53 (face highlight-quoted-symbol fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10394) (undo-tree-id3 . 55) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -55) (t 25200 24660 217546 824000)) nil (25200 24826 738611 13000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 10394) (undo-tree-id2 . -1)) nil (25200 24826 738603 540000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 10394) (undo-tree-id1 . -1)) nil (25200 24826 738599 279000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 10394) (undo-tree-id0 . -1)) nil (25200 24826 738592 16000) 0 nil])
([nil nil ((7131 . 7133) (t 25200 24826 746224 378000)) nil (25200 25830 828148 69000) 0 nil])
([nil nil ((7133 . 7134)) nil (25200 25830 828145 345000) 0 nil])
([nil nil ((7134 . 7135)) nil (25200 25830 828142 970000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -7134) (undo-tree-id21 . -1) 7135) nil (25200 25830 828129 281000) 0 nil])
([nil nil ((7134 . 7141) (7133 . 7135) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7133) (7133 . 7134)) nil (25200 25830 828125 160000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -7140) (undo-tree-id20 . -1) 7141) nil (25200 25830 828121 598000) 0 nil])
([nil nil ((7140 . 7145)) nil (25200 25830 828117 687000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -7143) (undo-tree-id18 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -7144) (undo-tree-id19 . -1) 7145) nil (25200 25830 828114 335000) 0 nil])
([nil nil ((7143 . 7144)) nil (25200 25830 828109 166000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -7143) (undo-tree-id17 . -1) 7144) nil (25200 25830 828106 163000) 0 nil])
([nil nil ((7143 . 7144)) nil (25200 25830 828101 204000) 0 nil])
([nil nil ((7144 . 7151)) nil (25200 25830 828098 480000) 0 nil])
([nil nil ((7151 . 7156)) nil (25200 25830 828095 547000) 0 nil])
([nil nil ((7151 . 7156)) nil (25200 25830 828077 527000) 0 nil])
([nil nil ((7157 . 7163) (7156 . 7158) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7156) (7156 . 7157)) nil (25200 25830 828074 524000) 0 nil])
([nil nil ((7157 . 7168) (#("intera" 0 6 (fontified t ws-butler-chg chg)) . -7157) (undo-tree-id16 . -6) 7163) nil (25200 25830 828059 717000) 0 nil])
([nil nil ((7169 . 7172)) nil (25200 25830 828055 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7174 . 7175) (nil fontified nil 7172 . 7175) (7172 . 7175)) nil (25200 25830 828053 82000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t)) . -7172) (undo-tree-id13 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -7173) (undo-tree-id14 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -7174) (undo-tree-id15 . -1) 7175) nil (25200 25830 828049 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7196 . 7197) (nil fontified nil 7172 . 7197) (7172 . 7197)) nil (25200 25830 828040 860000) 0 nil])
([nil nil ((7172 . 7174)) nil (25200 25830 828037 787000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . -7172) (undo-tree-id12 . -2) (7174 . 7175) (7198 . 7199) 7174) nil (25200 25830 828034 993000) 0 nil])
([nil nil ((7172 . 7178)) nil (25200 25830 828030 593000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -7174) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7175) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7176) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7177) (undo-tree-id11 . -1) 7178) nil (25200 25830 828026 891000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -7200) (undo-tree-id1 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -7201) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7202) (undo-tree-id4 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7203) (undo-tree-id5 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7204) (undo-tree-id6 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7205) (undo-tree-id7 . -1) 7206) nil (25200 25830 828017 951000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7202) (undo-tree-id0 . -1)) nil (25200 25830 828005 449000) 0 nil])
([nil nil ((7152 . 7154) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7152) (7151 . 7153)) nil (25200 25830 827974 20000) 0 nil])
([nil nil ((7132 . 7134) (t 25200 25830 834530 174000)) nil (25200 25928 446729 465000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7133 . 7134) (nil fontified nil 7133 . 7134) (7133 . 7134)) nil (25200 25928 446726 601000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7173 . 7174) (nil fontified nil 7133 . 7174) (7133 . 7174)) nil (25200 25928 446723 458000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified nil)) . -7174) (7174 . 7175) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -7174) (7174 . 7175) (#(")" 0 1 (ws-butler-chg chg fontified nil)) . -7174) (7174 . 7175)) nil (25200 25928 446719 757000) 0 nil])
([nil nil ((#("setq" 0 4 (face font-lock-keyword-face fontified t ws-butler-chg chg)) . 7134)) nil (25200 25928 446716 55000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7134) (undo-tree-id20 . -1)) nil (25200 25928 446713 401000) 0 nil])
([nil nil ((#(" python-shell-interpreter \"ipython\"" 0 1 (fontified t ws-butler-chg delete) 1 25 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 34 (face font-lock-string-face fontified t ws-butler-chg chg) 34 35 (face font-lock-string-face fontified t rear-nonsticky t ws-butler-chg chg)) . 7134) (undo-tree-id19 . -35)) nil (25200 25928 446709 210000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t ws-butler-chg chg)) . -7133) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . 1) (undo-tree-id18 . -1) 7134) nil (25200 25928 446705 229000) 0 nil])
([nil nil ((nil fontified nil 7172 . 7173) (nil fontified nil 7164 . 7172) (nil fontified nil 7163 . 7164) (nil fontified nil 7139 . 7163) (nil fontified nil 7138 . 7139) (nil fontified nil 7137 . 7138) (nil fontified nil 7133 . 7137) (7133 . 7173)) nil (25200 25928 446697 756000) 0 nil])
([nil nil ((7133 . 7134) (7173 . 7174)) nil (25200 25928 446693 496000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -7138) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7139) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 7140) nil (25200 25943 70480 482000) 0 nil])
([nil nil ((nil ws-butler-chg delete 7139 . 7140) (7138 . 7139)) ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 7138)) (25200 25946 771206 557000) 0 nil])
([nil nil ((apply -9 7177 7258 undo--wrap-and-run-primitive-undo 7177 7258 ((7223 . 7226) (7202 . 7205) (7177 . 7180) 7249))) nil (25200 25963 682992 15000) 0 nil] [nil nil ((#("(defun run-ipython ()
    (interactive)
    (python/open-ipython-repl))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 18 (face font-lock-function-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t) 21 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 38 (face font-lock-keyword-face fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t)) . -7177) (undo-tree-id0 . -72) (undo-tree-id1 . -20) (undo-tree-id2 . -72) (undo-tree-id3 . -72) (undo-tree-id4 . -40) (undo-tree-id5 . -40) (undo-tree-id6 . -22) (undo-tree-id7 . -22) (undo-tree-id8 . -72) (undo-tree-id9 . -72) 7249) ((nil ws-butler-chg delete 7249 . 7250) (7177 . 7249)) (25200 25929 174481 125000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 7175) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1)) nil (25200 25963 682986 288000) 0 nil])
([nil nil ((7177 . 7178)) ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 7177) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1)) (25200 25928 446632 313000) 0 nil])
([nil nil ((#(";; (defun run-ipython ()" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 24 (fontified t face font-lock-comment-face)) . 7176) (undo-tree-id25 . 1) (undo-tree-id26 . -24) (undo-tree-id27 . 2) (undo-tree-id28 . -23) (t 25200 25963 690281 170000)) nil (25200 26024 755319 529000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7176) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1)) nil (25200 26024 755311 78000) 0 nil])
([nil nil ((#(";;     (interactive)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-delimiter-face) 7 20 (fontified t face font-lock-comment-face)) . 7176) (undo-tree-id18 . 1) (undo-tree-id19 . -20) (undo-tree-id20 . 13) (undo-tree-id21 . -8)) nil (25200 26024 755304 722000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7176) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (25200 26024 755296 900000) 0 nil])
([nil nil ((#(";;     (python/open-ipython-repl))" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-delimiter-face) 7 34 (fontified t face font-lock-comment-face)) . 7176) (undo-tree-id13 . 1) (undo-tree-id14 . -34)) nil (25200 26024 755290 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7176) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . 1)) nil (25200 26024 755284 957000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7175) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25200 26024 755271 756000) 0 nil])
([nil nil ((7174 . 7195)) nil (25200 26024 755197 793000) 0 nil])
([nil nil ((7195 . 7200)) nil (25200 26024 755191 577000) 0 nil])
([nil nil ((1160 . 1161) (t 25200 26024 764005 682000)) nil (25276 36128 533971 680000) 0 nil])
([nil nil ((1162 . 1163) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -1162) (1162 . 1163) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . -1162) (1162 . 1163) (1161 . 1163) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -1161) (1161 . 1162)) nil (25276 36128 533968 398000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1172 . 1173) (nil fontified nil 1163 . 1173) (1163 . 1173)) nil (25276 36128 533964 207000) 0 nil])
([nil nil ((1162 . 1165)) nil (25276 36128 533961 274000) 0 nil])
([nil nil ((#("q" 0 1 (ws-butler-chg chg fontified t)) . -1164) (undo-tree-id0 . -1) 1165) nil (25276 36128 533958 340000) 0 nil])
([nil nil ((1164 . 1168)) nil (25276 36128 533936 968000) 0 nil])
([nil nil ((1168 . 1178)) nil (25276 36128 533934 105000) 0 nil])
([nil nil ((1133 . 1135)) nil (25276 36128 533928 238000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-dark+)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 28 (fontified t face highlight-quoted-symbol) 28 29 (fontified t face (rainbow-delimiters-depth-1-face))) . 1163) (undo-tree-id10 . 29) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -29) (undo-tree-id14 . -28) (t 25276 36128 542067 533000)) nil (25276 36372 270360 558000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1191 . 1192) (nil fontified nil 1191 . 1192) (nil fontified nil 1181 . 1191) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1169 . 1179) (nil fontified nil 1168 . 1169) (nil fontified nil 1164 . 1168) (nil fontified nil 1163 . 1164) (1163 . 1192)) nil (25276 36372 270352 457000) 0 nil])
([nil nil ((1192 . 1193)) nil (25276 36372 270348 196000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1221 . 1222) (nil fontified nil 1221 . 1222) (nil fontified nil 1211 . 1221) (nil fontified nil 1210 . 1211) (nil fontified nil 1209 . 1210) (nil fontified nil 1199 . 1209) (nil fontified nil 1198 . 1199) (nil fontified nil 1194 . 1198) (nil fontified nil 1193 . 1194) (1193 . 1222)) nil (25276 36372 270345 333000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1211) (undo-tree-id0 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1212) (undo-tree-id1 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1213) (undo-tree-id2 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1214) (undo-tree-id3 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id4 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id5 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id6 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id7 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id8 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id9 . -1) 1221) nil (25276 36372 270338 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1226 . 1227) (nil fontified nil 1211 . 1227) (1211 . 1227)) nil (25276 36372 270303 497000) 0 nil])
([nil nil ((1163 . 1165)) nil (25276 36372 270296 512000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1213) (undo-tree-id0 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1214) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (undo-tree-id2 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (undo-tree-id3 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (undo-tree-id4 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (undo-tree-id5 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (undo-tree-id6 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (undo-tree-id7 . -1) (#("y" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (undo-tree-id8 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (undo-tree-id9 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (undo-tree-id10 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1224) (undo-tree-id11 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1225) (undo-tree-id12 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t)) . -1226) (undo-tree-id13 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1227) (undo-tree-id14 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -1228) (undo-tree-id15 . -1) 1229 (t 25276 36372 277244 771000)) nil (25276 36483 753616 526000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1229 . 1230) (nil fontified nil 1213 . 1230) (1213 . 1230)) nil (25276 36483 753564 563000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1213) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1214) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("h" 0 1 (fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("b" 0 1 (fontified t face highlight-quoted-symbol)) . -1225) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1226) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1227) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1228) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -1229) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 1230 (t 25276 36483 760496 548000)) nil (25276 36551 997535 975000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1224 . 1225) (nil fontified nil 1213 . 1225) (1213 . 1225)) nil (25276 36551 997458 239000) 0 nil])
([nil nil ((1195 . 1197) (t 25276 36552 6479 925000)) nil (25276 37276 451821 852000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1163) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1164) (undo-tree-id1 . -1) 1165) nil (25276 37276 451815 986000) 0 nil])
([nil nil ((1163 . 1165) (t 25276 37276 455335 371000)) nil (25276 37316 627407 575000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1195) (undo-tree-id0 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1196) (undo-tree-id1 . -1) 1197) nil (25276 37316 627401 569000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-horizon)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 30 (fontified t face highlight-quoted-symbol) 30 31 (fontified t face (rainbow-delimiters-depth-1-face))) . 1195) (undo-tree-id14 . 31) (undo-tree-id15 . -1) (undo-tree-id16 . 1) (undo-tree-id17 . -31) (undo-tree-id18 . -30) (t 25276 37316 632485 785000)) nil (25276 37400 23283 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1225 . 1226) (nil fontified nil 1225 . 1226) (nil fontified nil 1213 . 1225) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1201 . 1211) (nil fontified nil 1200 . 1201) (nil fontified nil 1196 . 1200) (nil fontified nil 1195 . 1196) (1195 . 1226)) nil (25276 37400 23275 833000) 0 nil])
([nil nil ((1226 . 1227)) nil (25276 37400 23271 573000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1257 . 1258) (nil fontified nil 1257 . 1258) (nil fontified nil 1245 . 1257) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1233 . 1243) (nil fontified nil 1232 . 1233) (nil fontified nil 1228 . 1232) (nil fontified nil 1227 . 1228) (1227 . 1258)) nil (25276 37400 23268 709000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1245) (undo-tree-id2 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1246) (undo-tree-id3 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1247) (undo-tree-id4 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1248) (undo-tree-id5 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1249) (undo-tree-id6 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1250) (undo-tree-id7 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1251) (undo-tree-id8 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1252) (undo-tree-id9 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1253) (undo-tree-id10 . -1) (#("z" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1254) (undo-tree-id11 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1255) (undo-tree-id12 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1256) (undo-tree-id13 . -1) 1257) nil (25276 37400 23261 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1256 . 1257) (nil fontified nil 1245 . 1257) (1245 . 1257)) nil (25276 37400 23231 483000) 0 nil])
([nil nil ((1195 . 1197) (t 25276 37400 26872 535000)) nil (25276 37405 441367 540000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1196) (undo-tree-id19 . -1) 1197) nil (25276 37405 441363 978000) 0 nil])
([nil nil ((1196 . 1197)) nil (25276 37405 441341 558000) 0 nil])
([nil nil ((#(";;(setq doom-theme 'doom-dark+)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 31 (face font-lock-comment-face fontified t)) . 1163) (undo-tree-id15 . 1) (undo-tree-id16 . -31) (undo-tree-id17 . 29) (undo-tree-id18 . -3) (t 25276 37405 451027 726000)) nil (25276 37558 276101 326000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1163) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) nil (25276 37595 650980 63000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("I" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("v" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified nil)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1227 (t 25276 37599 448685 972000)) nil (25276 37696 598316 789000) 0 nil] [nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (#("I" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (#("v" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1224) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1225) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1226) 1227) ((1215 . 1227)) (25276 37594 784569 686000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1230 . 1231) (nil fontified nil 1215 . 1231) (1215 . 1231)) nil (25276 37696 598249 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1227 . 1228) (nil fontified nil 1215 . 1228) (1215 . 1228)) ((#("material-dark" 0 12 (fontified nil face highlight-quoted-symbol) 12 13 (fontified nil face highlight-quoted-symbol rear-nonsticky nil)) . 1215) (undo-tree-id0 . -13) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (nil rear-nonsticky nil 1227 . 1228) (t 25276 37558 283479 260000)) (25276 37558 276038 119000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1225) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1226) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1227) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("p" 0 1 (fontified t face highlight-quoted-symbol)) . -1228) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1229) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1230) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 1231 (t 25276 37696 603525 539000)) nil (25276 37811 472329 339000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1223 . 1224) (nil fontified nil 1215 . 1224) (1215 . 1224)) nil (25276 37811 472035 789000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 1224 (t 25276 37811 478870 63000)) nil (25276 37917 456539 999000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1228 . 1229) (nil fontified nil 1215 . 1229) (1215 . 1229)) nil (25276 37917 456467 83000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("s" 0 1 (fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("p" 0 1 (fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1227) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("y" 0 1 (fontified t face highlight-quoted-symbol)) . -1228) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1229 (t 25276 37917 465945 681000)) nil (25276 37967 111588 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1230 . 1231) (nil fontified nil 1215 . 1231) (1215 . 1231)) nil (25276 37967 111520 77000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("y" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1227) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1228) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t)) . -1229) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified nil)) . -1230) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1231 (t 25276 37967 119383 765000)) nil (25276 38000 733942 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1233 . 1234) (nil fontified nil 1215 . 1234) (1215 . 1234)) nil (25276 38000 733861 221000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1229) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1230) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1231) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("h" 0 1 (fontified t face highlight-quoted-symbol)) . -1232) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("t" 0 1 (fontified nil face highlight-quoted-symbol)) . -1233) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 1234 (t 25276 38000 740356 616000)) nil (25276 38046 581095 181000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("w" 0 1 (fontified t face highlight-quoted-symbol)) . -1227) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1228) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1229) nil (25276 38046 581074 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1226 . 1227) (nil fontified nil 1215 . 1227) (1215 . 1227)) nil (25276 38046 580996 4000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("v" 0 1 (face highlight-quoted-symbol fontified t)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("b" 0 1 (face highlight-quoted-symbol fontified t)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1227 (t 25276 38046 589682 233000)) nil (25276 38100 961389 709000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1230 . 1231) (nil fontified nil 1215 . 1231) (1215 . 1231)) nil (25276 38100 961327 688000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("w" 0 1 (fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1225) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("s" 0 1 (fontified t face highlight-quoted-symbol)) . -1226) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1227) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1228) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1229) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("f" 0 1 (fontified nil face highlight-quoted-symbol)) . -1230) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1231 (t 25276 38100 967252 955000)) nil (25276 38119 627475 664000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1224 . 1225) (nil fontified nil 1215 . 1225) (1215 . 1225)) nil (25276 38119 627416 228000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-xcode)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face highlight-quoted-quote fontified t) 18 28 (face highlight-quoted-symbol fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1197) (undo-tree-id10 . 29) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -29) (t 25276 38119 635791 865000)) nil (25276 38224 805169 276000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1225 . 1226) (nil fontified nil 1225 . 1226) (nil fontified nil 1215 . 1225) (nil fontified nil 1214 . 1215) (nil fontified nil 1213 . 1214) (nil fontified nil 1203 . 1213) (nil fontified nil 1202 . 1203) (nil fontified nil 1198 . 1202) (nil fontified nil 1197 . 1198) (1197 . 1226)) nil (25276 38224 805160 755000) 0 nil])
([nil nil ((1226 . 1227)) nil (25276 38224 805156 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1255 . 1256) (nil fontified nil 1255 . 1256) (nil fontified nil 1245 . 1255) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1233 . 1243) (nil fontified nil 1232 . 1233) (nil fontified nil 1228 . 1232) (nil fontified nil 1227 . 1228) (1227 . 1256)) nil (25276 38224 805153 142000) 0 nil])
([nil nil ((1197 . 1199)) nil (25276 38224 805148 533000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1247) (undo-tree-id0 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1248) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1249) (undo-tree-id2 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1250) (undo-tree-id3 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1251) (undo-tree-id4 . -1) (#("x" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1252) (undo-tree-id5 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1253) (undo-tree-id6 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1254) (undo-tree-id7 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1255) (undo-tree-id8 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1256) (undo-tree-id9 . -1) 1257) nil (25276 38224 805142 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1258 . 1259) (nil fontified nil 1247 . 1259) (1247 . 1259)) nil (25276 38224 805097 198000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-zenburn)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 30 (fontified t face highlight-quoted-symbol) 30 31 (fontified t face (rainbow-delimiters-depth-1-face))) . 1229) (undo-tree-id4 . 31) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -31) (t 25276 38224 810825 88000)) nil (25276 38299 39708 328000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -1228) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1229) nil (25276 38299 39698 201000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1163) (undo-tree-id8 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1164) (undo-tree-id9 . -1) 1165 (t 25276 38299 48963 496000)) nil (25276 38305 499717 828000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-horizon)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face highlight-quoted-quote fontified t) 18 30 (face highlight-quoted-symbol fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1163) (undo-tree-id26 . 31) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -31) (t 25276 38305 509149 490000)) nil (25276 38612 777094 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1193 . 1194) (nil fontified nil 1193 . 1194) (nil fontified nil 1181 . 1193) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1169 . 1179) (nil fontified nil 1168 . 1169) (nil fontified nil 1164 . 1168) (nil fontified nil 1163 . 1164) (1163 . 1194)) nil (25276 38612 777086 783000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 1229) (1227 . 1229) (1226 . 1228)) nil (25276 38612 777082 104000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -1227) (undo-tree-id24 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . -1228) (undo-tree-id25 . -1) 1229) nil (25276 38612 777078 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1257 . 1258) (nil fontified nil 1257 . 1258) (nil fontified nil 1245 . 1257) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1233 . 1243) (nil fontified nil 1232 . 1233) (nil fontified nil 1228 . 1232) (nil fontified nil 1227 . 1228) (1227 . 1258)) nil (25276 38612 777072 954000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1245) (undo-tree-id12 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1246) (undo-tree-id13 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1247) (undo-tree-id14 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1248) (undo-tree-id15 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1249) (undo-tree-id16 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1250) (undo-tree-id17 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1251) (undo-tree-id18 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1252) (undo-tree-id19 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1253) (undo-tree-id20 . -1) (#("z" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1254) (undo-tree-id21 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1255) (undo-tree-id22 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1256) (undo-tree-id23 . -1) 1257) nil (25276 38612 777065 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1256 . 1257) (nil fontified nil 1245 . 1257) (1245 . 1257)) nil (25276 38612 777046 903000) 0 nil])
([nil nil ((1163 . 1165)) nil (25276 38612 777044 179000) 0 nil])
([nil nil ((#(";;(setq doom-theme 'doom-horizon)" 0 2 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t) 2 3 (face font-lock-comment-face fontified t ws-butler-chg chg) 3 7 (face font-lock-comment-face fontified t ws-butler-chg chg) 7 8 (face font-lock-comment-face fontified t ws-butler-chg chg) 8 18 (face font-lock-comment-face fontified t ws-butler-chg chg) 18 19 (face font-lock-comment-face fontified t ws-butler-chg chg) 19 20 (face font-lock-comment-face fontified t ws-butler-chg chg) 20 32 (face font-lock-comment-face fontified t ws-butler-chg chg) 32 33 (face font-lock-comment-face rear-nonsticky t fontified t ws-butler-chg chg)) . 1163) (undo-tree-id7 . 1) (undo-tree-id8 . -33) (undo-tree-id9 . 31) (undo-tree-id10 . -3) (undo-tree-id11 . -2)) nil (25276 38612 777041 315000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 1198) (1196 . 1198) (1195 . 1197)) nil (25276 38612 777033 493000) 0 nil])
([nil nil ((nil fontified nil 1230 . 1231) (nil fontified nil 1218 . 1230) (nil fontified nil 1217 . 1218) (nil fontified nil 1216 . 1217) (nil fontified nil 1206 . 1216) (nil fontified nil 1205 . 1206) (nil fontified nil 1201 . 1205) (nil fontified nil 1200 . 1201) (nil fontified nil 1198 . 1200) (1198 . 1231)) nil (25276 38612 777030 280000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1163) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (25276 38612 777025 112000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -1195) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -1196) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1197) nil (25276 38612 777016 242000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1247) (undo-tree-id0 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1248) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1249) (undo-tree-id2 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1250) (undo-tree-id3 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1251) (undo-tree-id4 . -1) (#("p" 0 1 (fontified t face highlight-quoted-symbol)) . -1252) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1253) (undo-tree-id6 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1254) (undo-tree-id7 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1255) (undo-tree-id8 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1256) (undo-tree-id9 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1257) (undo-tree-id10 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -1258) (undo-tree-id11 . -1) 1259 (t 25276 38612 785983 168000)) nil (25276 38643 280502 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1260 . 1261) (nil fontified nil 1247 . 1261) (1247 . 1261)) nil (25276 38643 280456 326000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1247) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1248) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1249) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1250) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1251) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("p" 0 1 (face highlight-quoted-symbol fontified t)) . -1252) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1253) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1254) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1255) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1256) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1257) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1258) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t)) . -1259) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified nil)) . -1260) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1261 (t 25276 38643 286858 899000)) nil (25276 38671 480313 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1266 . 1267) (nil fontified nil 1247 . 1267) (1247 . 1267)) nil (25276 38671 480236 324000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1247) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1248) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1249) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1250) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1251) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1252) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("u" 0 1 (fontified t face highlight-quoted-symbol)) . -1253) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1254) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1255) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("u" 0 1 (fontified t face highlight-quoted-symbol)) . -1256) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1257) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1258) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1259) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1260) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1261) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1262) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1263) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1264) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1265) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("c" 0 1 (fontified nil face highlight-quoted-symbol)) . -1266) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1267 (t 25276 38671 487668 451000)) nil (25276 38701 815678 277000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 1247 . 1260) (1247 . 1260)) nil (25276 38701 815599 354000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1247) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1248) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1249) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1250) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1251) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1252) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1253) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1254) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1255) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t)) . -1256) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1257) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("p" 0 1 (face highlight-quoted-symbol fontified t)) . -1258) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified nil)) . -1259) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1260 (t 25276 38701 828539 296000)) nil (25276 38731 941168 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1267 . 1268) (nil fontified nil 1247 . 1268) (1247 . 1268)) nil (25276 38731 941104 183000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-monokai-spectrum)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 39 (fontified t face highlight-quoted-symbol) 39 40 (fontified t face (rainbow-delimiters-depth-1-face))) . 1229) (undo-tree-id21 . -39) (undo-tree-id22 . -39) (undo-tree-id23 . -39) (undo-tree-id24 . -39) (undo-tree-id25 . -39) (undo-tree-id26 . -39) (undo-tree-id27 . -39) (undo-tree-id28 . -39) (undo-tree-id29 . 40) (undo-tree-id30 . -1) (undo-tree-id31 . 1) (undo-tree-id32 . -40) (t 25276 38731 953403 804000)) nil (25276 38889 867113 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1268 . 1269) (nil fontified nil 1268 . 1269) (nil fontified nil 1247 . 1268) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1235 . 1245) (nil fontified nil 1234 . 1235) (nil fontified nil 1230 . 1234) (nil fontified nil 1229 . 1230) (1229 . 1269)) nil (25276 38889 867098 676000) 0 nil])
([nil nil ((1269 . 1270)) nil (25276 38889 867094 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1309 . 1310) (nil fontified nil 1309 . 1310) (nil fontified nil 1288 . 1309) (nil fontified nil 1287 . 1288) (nil fontified nil 1286 . 1287) (nil fontified nil 1276 . 1286) (nil fontified nil 1275 . 1276) (nil fontified nil 1271 . 1275) (nil fontified nil 1270 . 1271) (1270 . 1310)) nil (25276 38889 867091 691000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1288) (undo-tree-id0 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1289) (undo-tree-id1 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id2 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id3 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id5 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id6 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id7 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id8 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id9 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id10 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id11 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id12 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id13 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1302) (undo-tree-id14 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1303) (undo-tree-id15 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1304) (undo-tree-id16 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1305) (undo-tree-id17 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1306) (undo-tree-id18 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1307) (undo-tree-id19 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1308) (undo-tree-id20 . -1) 1309) nil (25276 38889 867081 913000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1309 . 1310) (nil fontified nil 1288 . 1310) (1288 . 1310)) nil (25276 38889 867022 966000) 0 nil])
([nil nil ((1229 . 1231)) nil (25276 38889 867015 981000) 0 nil])
([nil nil ((#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id2 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id3 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id4 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id5 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id6 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id7 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id8 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id9 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id10 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id11 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1302) (undo-tree-id12 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1303) (undo-tree-id13 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1304) (undo-tree-id14 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -1305) (undo-tree-id15 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1306) (undo-tree-id16 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1307) (undo-tree-id17 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1308) (undo-tree-id18 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1309) (undo-tree-id19 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1310) (undo-tree-id20 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1311) (undo-tree-id21 . -1) 1312 (t 25276 38889 877933 900000)) nil (25276 38940 228066 317000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) 1291) nil (25276 38940 228031 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 1290 . 1302) (1290 . 1302)) nil (25276 38940 228001 572000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("i" 0 1 (fontified nil face highlight-quoted-symbol)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1302 (t 25276 38940 235377 825000)) nil (25276 38974 385169 761000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1309 . 1310) (nil fontified nil 1290 . 1310) (1290 . 1310)) nil (25276 38974 385101 943000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1303) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -1304) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1305) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1306) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1307) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1308) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1309) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1310 (t 25276 38974 396357 203000)) nil (25276 39008 783799 415000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1302 . 1303) (nil fontified nil 1290 . 1303) (1290 . 1303)) nil (25276 39008 783719 445000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (fontified nil face highlight-quoted-symbol)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1303 (t 25276 39008 793343 243000)) nil (25276 39029 382258 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 1290 . 1302) (1290 . 1302)) nil (25276 39029 382195 449000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("b" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("u" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified nil)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1302 (t 25276 39029 393933 742000)) nil (25276 39053 607947 698000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1302 . 1303) (nil fontified nil 1290 . 1303) (1290 . 1303)) nil (25276 39053 607879 42000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1302) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1303 (t 25276 39053 618628 80000)) nil (25276 39080 859118 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1303 . 1304) (nil fontified nil 1290 . 1304) (1290 . 1304)) nil (25276 39080 859026 283000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("w" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("v" 0 1 (face highlight-quoted-symbol fontified t)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified nil)) . -1303) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1304 (t 25276 39080 867409 42000)) nil (25276 39101 194377 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 1290 . 1302) (1290 . 1302)) nil (25276 39101 194310 165000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 1302 (t 25276 39101 203991 863000)) nil (25276 39124 561510 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1302 . 1303) (nil fontified nil 1290 . 1303) (1290 . 1303)) nil (25276 39124 561450 915000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("b" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified nil)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1303 (t 25276 39124 572661 545000)) nil (25276 39162 6207 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1299 . 1300) (nil fontified nil 1290 . 1300) (1290 . 1300)) nil (25276 39162 6143 60000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("h" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("a" 0 1 (fontified nil face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1300 (t 25276 39162 17734 544000)) nil (25276 39177 957238 847000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1291) nil (25276 39177 957210 840000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 1290 . 1302) (1290 . 1302)) nil (25276 39177 957169 353000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("u" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("v" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("b" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("x" 0 1 (face highlight-quoted-symbol fontified nil)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1302 (t 25276 39177 970191 639000)) nil (25276 39203 667027 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1303 . 1304) (nil fontified nil 1290 . 1304) (1290 . 1304)) nil (25276 39203 666965 348000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("y" 0 1 (fontified nil face highlight-quoted-symbol)) . -1303) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1304 (t 25276 39203 674928 141000)) nil (25276 39222 483228 443000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 1290 . 1302) (1290 . 1302)) nil (25276 39222 483152 594000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("u" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified nil)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 1302 (t 25276 39222 491467 256000)) nil (25276 39244 282787 368000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1305 . 1306) (nil fontified nil 1290 . 1306) (1290 . 1306)) nil (25276 39244 282691 543000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("y" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("l" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1302) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("h" 0 1 (fontified t face highlight-quoted-symbol)) . -1303) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t face highlight-quoted-symbol)) . -1304) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("s" 0 1 (fontified nil face highlight-quoted-symbol)) . -1305) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1306 (t 25276 39244 292091 844000)) nil (25276 39263 841717 414000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1309 . 1310) (nil fontified nil 1290 . 1310) (1290 . 1310)) nil (25276 39263 841647 152000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id2 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id3 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id4 . -1) (#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id5 . -1) (#("h" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id6 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id7 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id8 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id9 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id10 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id11 . -1) (#("g" 0 1 (face highlight-quoted-symbol fontified t)) . -1302) (undo-tree-id12 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1303) (undo-tree-id13 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1304) (undo-tree-id14 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1305) (undo-tree-id15 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1306) (undo-tree-id16 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1307) (undo-tree-id17 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -1308) (undo-tree-id18 . -1) (#("p" 0 1 (face highlight-quoted-symbol fontified t)) . -1309) (undo-tree-id19 . -1) 1310 (t 25276 39263 852652 234000)) nil (25276 39315 25510 507000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1300 . 1301) (nil fontified nil 1290 . 1301) (1290 . 1301)) nil (25276 39315 25453 96000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("b" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("g" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("r" 0 1 (fontified nil face highlight-quoted-symbol)) . -1300) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 1301 (t 25276 39315 38118 554000)) nil (25276 39336 767382 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1298 . 1299) (nil fontified nil 1290 . 1299) (1290 . 1299)) nil (25276 39336 767310 341000) 0 nil])
([nil nil ((#("7" 0 1 (face highlight-quoted-symbol fontified nil)) . -1298) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 1299 (t 25276 39336 778741 325000)) nil (25276 39353 837118 246000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("1" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("3" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("3" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1298) nil (25276 39353 837109 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1305 . 1306) (nil fontified nil 1290 . 1306) (1290 . 1306)) nil (25276 39353 837056 575000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1291) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1292) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1293) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1294) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1295) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("c" 0 1 (fontified t face highlight-quoted-symbol)) . -1296) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1297) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1298) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t face highlight-quoted-symbol)) . -1299) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1300) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1301) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1302) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1303) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("r" 0 1 (fontified t face highlight-quoted-symbol)) . -1304) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("k" 0 1 (fontified t face highlight-quoted-symbol)) . -1305) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 1306 (t 25276 39353 847230 247000)) nil (25276 39375 410057 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1302 . 1303) (nil fontified nil 1290 . 1303) (1290 . 1303)) nil (25276 39375 409969 724000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1290) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1291) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -1292) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t)) . -1293) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1294) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1295) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("y" 0 1 (face highlight-quoted-symbol fontified t)) . -1296) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("u" 0 1 (face highlight-quoted-symbol fontified t)) . -1297) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -1298) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -1299) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t)) . -1300) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t)) . -1301) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t)) . -1302) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1303 (t 25276 39375 427848 399000)) nil (25276 39407 592272 829000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1309 . 1310) (nil fontified nil 1290 . 1310) (1290 . 1310)) nil (25276 39407 592180 427000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-monokai-machine)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 38 (fontified t face highlight-quoted-symbol) 38 39 (fontified t face (rainbow-delimiters-depth-1-face))) . 1272) (undo-tree-id3 . -38) (undo-tree-id4 . -38) (undo-tree-id5 . -38) (undo-tree-id6 . -38) (undo-tree-id7 . -38) (undo-tree-id8 . -38) (undo-tree-id9 . 39) (undo-tree-id10 . -1) (undo-tree-id11 . 1) (undo-tree-id12 . -39) (undo-tree-id13 . -38) (t 25276 39407 604770 36000)) nil (25276 39503 503867 790000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 1272) (undo-tree-id2 . -1)) nil (25276 39503 503849 701000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1163) (undo-tree-id0 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1164) (undo-tree-id1 . -1) 1165) nil (25276 39503 503841 878000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-xcode)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face highlight-quoted-quote fontified t) 18 28 (face highlight-quoted-symbol fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1163) (undo-tree-id10 . 29) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -29) (t 25276 39503 515516 963000)) nil (25276 39556 94581 360000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1162) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 1163) nil (25276 39556 94570 186000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1163) (undo-tree-id14 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1164) (undo-tree-id15 . -1) 1165 (t 25276 39556 108879 915000)) nil (25276 39564 342204 577000) 0 nil])
([nil nil ((1163 . 1165) (t 25276 39564 357092 744000)) nil (25276 39627 344143 383000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1197) (undo-tree-id0 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1198) (undo-tree-id1 . -1) 1199) nil (25276 39627 344136 817000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-monokai-spectrum)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 16 (face font-lock-variable-name-face fontified nil) 16 17 (fontified nil) 17 18 (face highlight-quoted-quote fontified nil) 18 39 (face highlight-quoted-symbol fontified nil) 39 40 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1197) (undo-tree-id2 . 40) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -40) (t 25276 39627 358728 786000)) nil (25276 39664 179484 987000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1163) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1164) (undo-tree-id1 . -1) 1165) nil (25276 39664 179473 882000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-horizon)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 30 (fontified t face highlight-quoted-symbol) 30 31 (fontified t face (rainbow-delimiters-depth-1-face))) . 1163) (undo-tree-id12 . 31) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -31) (t 25276 39664 191693 224000)) nil (25276 39846 675777 628000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1193 . 1194) (nil fontified nil 1193 . 1194) (nil fontified nil 1181 . 1193) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1169 . 1179) (nil fontified nil 1168 . 1169) (nil fontified nil 1164 . 1168) (nil fontified nil 1163 . 1164) (1163 . 1194)) nil (25276 39846 675769 526000) 0 nil])
([nil nil ((1194 . 1195)) nil (25276 39846 675764 777000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1225 . 1226) (nil fontified nil 1225 . 1226) (nil fontified nil 1213 . 1225) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1201 . 1211) (nil fontified nil 1200 . 1201) (nil fontified nil 1196 . 1200) (nil fontified nil 1195 . 1196) (1195 . 1226)) nil (25276 39846 675761 774000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1213) (undo-tree-id0 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1214) (undo-tree-id1 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1215) (undo-tree-id2 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1216) (undo-tree-id3 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1217) (undo-tree-id4 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1218) (undo-tree-id5 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1219) (undo-tree-id6 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1220) (undo-tree-id7 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1221) (undo-tree-id8 . -1) (#("z" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1222) (undo-tree-id9 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1223) (undo-tree-id10 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1224) (undo-tree-id11 . -1) 1225) nil (25276 39846 675753 881000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1221 . 1222) (nil fontified nil 1213 . 1222) (1213 . 1222)) nil (25276 39846 675710 230000) 0 nil])
([nil nil ((1163 . 1165)) nil (25276 39846 675703 315000) 0 nil])
([nil nil ((1197 . 1199) (t 25276 39846 688543 986000)) nil (25276 39933 431278 939000) 0 nil])
([nil nil ((#(";;(setq doom-theme 'doom-horizon)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 33 (face font-lock-comment-face fontified t)) . 1163) (undo-tree-id6 . 1) (undo-tree-id7 . -33) (undo-tree-id8 . 31) (undo-tree-id9 . -3) (undo-tree-id10 . -2)) nil (25276 39933 431275 726000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -1163) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 1164) nil (25276 39933 431266 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1226 . 1227) (nil fontified nil 1196 . 1227) (nil fontified nil 1194 . 1196) (1194 . 1227)) nil (25276 39933 431258 265000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -1194) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t ws-butler-chg chg)) . -1195) (undo-tree-id1 . -1) 1196) nil (25276 39933 431251 351000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-horizon)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face highlight-quoted-quote) 18 30 (fontified t face highlight-quoted-symbol) 30 31 (fontified t face (rainbow-delimiters-depth-1-face))) . 1194) (undo-tree-id12 . 31) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -31) (t 25276 39933 442884 512000)) nil (25276 40103 192308 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1224 . 1225) (nil fontified nil 1224 . 1225) (nil fontified nil 1212 . 1224) (nil fontified nil 1211 . 1212) (nil fontified nil 1210 . 1211) (nil fontified nil 1200 . 1210) (nil fontified nil 1199 . 1200) (nil fontified nil 1195 . 1199) (nil fontified nil 1194 . 1195) (1194 . 1225)) nil (25276 40103 192300 919000) 0 nil])
([nil nil ((1225 . 1226)) nil (25276 40103 192296 379000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1256 . 1257) (nil fontified nil 1256 . 1257) (nil fontified nil 1244 . 1256) (nil fontified nil 1243 . 1244) (nil fontified nil 1242 . 1243) (nil fontified nil 1232 . 1242) (nil fontified nil 1231 . 1232) (nil fontified nil 1227 . 1231) (nil fontified nil 1226 . 1227) (1226 . 1257)) nil (25276 40103 192293 446000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1244) (undo-tree-id0 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1245) (undo-tree-id1 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1246) (undo-tree-id2 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1247) (undo-tree-id3 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1248) (undo-tree-id4 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1249) (undo-tree-id5 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1250) (undo-tree-id6 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1251) (undo-tree-id7 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1252) (undo-tree-id8 . -1) (#("z" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1253) (undo-tree-id9 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1254) (undo-tree-id10 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-symbol)) . -1255) (undo-tree-id11 . -1) 1256) nil (25276 40103 192286 42000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 1244 . 1260) (1244 . 1260)) nil (25276 40103 192233 101000) 0 nil])
([nil nil ((1194 . 1196)) nil (25276 40103 192226 327000) 0 nil])
([nil nil ((#(";;(setq doom-theme 'doom-nord)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 30 (face font-lock-comment-face fontified t)) . 1163) (undo-tree-id5 . 1) (undo-tree-id6 . -30) (undo-tree-id7 . 28) (undo-tree-id8 . -3) (t 25276 40103 203512 862000)) nil (25276 40161 402870 558000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1162) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 1163) nil (25276 40161 402859 523000) 0 nil])
([nil nil ((#("(setq doom-theme 'doom-monokai-pro)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face highlight-quoted-quote fontified t) 18 34 (face highlight-quoted-symbol fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1197) (undo-tree-id25 . -34) (undo-tree-id26 . 35) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -35) (t 25276 40161 417112 6000)) nil (25276 40233 98682 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1231 . 1232) (nil fontified nil 1231 . 1232) (nil fontified nil 1215 . 1231) (nil fontified nil 1214 . 1215) (nil fontified nil 1213 . 1214) (nil fontified nil 1203 . 1213) (nil fontified nil 1202 . 1203) (nil fontified nil 1198 . 1202) (nil fontified nil 1197 . 1198) (1197 . 1232)) nil (25276 40233 98674 289000) 0 nil])
([nil nil ((1232 . 1233)) nil (25276 40233 98669 749000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1267 . 1268) (nil fontified nil 1267 . 1268) (nil fontified nil 1251 . 1267) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1239 . 1249) (nil fontified nil 1238 . 1239) (nil fontified nil 1234 . 1238) (nil fontified nil 1233 . 1234) (1233 . 1268)) nil (25276 40233 98666 885000) 0 nil])
([nil nil ((1197 . 1199)) nil (25276 40233 98662 695000) 0 nil])
([nil nil ((#("d" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1253) (undo-tree-id9 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1254) (undo-tree-id10 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1255) (undo-tree-id11 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1256) (undo-tree-id12 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1257) (undo-tree-id13 . -1) (#("m" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1258) (undo-tree-id14 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1259) (undo-tree-id15 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1260) (undo-tree-id16 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1261) (undo-tree-id17 . -1) (#("k" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1262) (undo-tree-id18 . -1) (#("a" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1263) (undo-tree-id19 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1264) (undo-tree-id20 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1265) (undo-tree-id21 . -1) (#("p" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1266) (undo-tree-id22 . -1) (#("r" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1267) (undo-tree-id23 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -1268) (undo-tree-id24 . -1) 1269) nil (25276 40233 98655 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1263 . 1264) (nil fontified nil 1253 . 1264) (1253 . 1264)) nil (25276 40233 98614 363000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face highlight-quoted-symbol)) . -1253) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1254) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t face highlight-quoted-symbol)) . -1255) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("m" 0 1 (fontified t face highlight-quoted-symbol)) . -1256) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("-" 0 1 (fontified t face highlight-quoted-symbol)) . -1257) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (fontified t face highlight-quoted-symbol)) . -1258) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("n" 0 1 (fontified t face highlight-quoted-symbol)) . -1259) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("a" 0 1 (fontified t face highlight-quoted-symbol)) . -1260) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("z" 0 1 (fontified t face highlight-quoted-symbol)) . -1261) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("z" 0 1 (fontified t face highlight-quoted-symbol)) . -1262) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("y" 0 1 (fontified nil face highlight-quoted-symbol)) . -1263) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1264 (t 25276 40233 115088 480000)) nil (25276 40266 79208 613000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1251) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("'" 0 1 (fontified t face highlight-quoted-quote)) . -1252) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1253) nil (25276 40266 79175 368000) 0 nil])
([nil nil ((1252 . 1253) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -1252) (1252 . 1253) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -1252) (1251 . 1253)) nil (25276 40266 79144 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1266 . 1267) (nil fontified nil 1253 . 1267) (1253 . 1267)) nil (25276 40266 79137 164000) 0 nil])
([nil nil ((6901 . 6903) (t 25276 40266 91999 845000)) nil (25276 43001 151540 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6973 . 6974) (nil fontified nil 6903 . 6974) (6903 . 6974)) nil (25276 43001 151533 715000) 0 nil])
([nil nil ((#(";; (use-package org-bullets
;;   :hook (org-mode . org-bullets-mode))" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 28 (fontified t face font-lock-comment-face) 28 33 (fontified t face font-lock-comment-delimiter-face) 33 69 (fontified t face font-lock-comment-face)) . 6976) (undo-tree-id3 . -69) (undo-tree-id4 . -69) (undo-tree-id5 . -69) (undo-tree-id6 . 1) (undo-tree-id7 . -69) 7045 (t 25276 43001 165398 479000)) nil (25276 56646 368104 310000) 0 nil])
([nil nil ((6902 . 6903)) nil (25276 56646 368095 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6970 . 6971) (nil fontified nil 6935 . 6971) (nil fontified nil 6930 . 6935) (nil fontified nil 6905 . 6930) (nil fontified nil 6902 . 6905) (6902 . 6971)) nil (25276 56646 368092 297000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6898) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -6899) (undo-tree-id2 . -1) 6900) nil (25276 56646 368087 618000) 0 nil])
([nil nil ((6900 . 6901)) nil (25276 56646 368054 792000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7097 . 7098) (nil fontified nil 7045 . 7098) (7045 . 7098) (t 25276 56646 380002 959000)) nil (25276 57217 834610 703000) 0 nil])
([nil nil ((#("git clone https://gitlab.com/fvdbeek/emacs-pubmed.git" 0 52 (fontified t ws-butler-chg chg) 52 53 (rear-nonsticky t fontified t ws-butler-chg chg)) . 7045) (undo-tree-id15 . -53)) nil (25276 57217 834607 420000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7092 . 7093) (nil fontified nil 7045 . 7093) (7045 . 7093)) nil (25276 57217 834603 649000) 0 nil])
([nil nil ((#("/path/to/emacs-pubmed" 0 21 (face font-lock-string-face fontified t ws-butler-chg chg)) . 7070)) nil (25276 57217 834600 715000) 0 nil])
([nil nil ((7070 . 7072) (#("`" 0 1 (face font-lock-string-face fontified nil ws-butler-chg chg)) . -7070) (7070 . 7071)) nil (25276 57217 834598 61000) 0 nil])
([nil nil ((#("`'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t) 1 2 (face font-lock-string-face ws-butler-chg chg fontified t)) . 7070) (undo-tree-id14 . -1) 7071) nil (25276 57217 834595 58000) 0 nil])
([nil nil ((7070 . 7076)) nil (25276 57217 834591 77000) 0 nil])
([nil nil ((7076 . 7078)) nil (25276 57217 834588 772000) 0 nil])
([nil nil ((7078 . 7085)) nil (25276 57217 834586 398000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7076) (undo-tree-id5 . -1) (#("m" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7077) (undo-tree-id6 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7078) (undo-tree-id7 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7079) (undo-tree-id8 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7080) (undo-tree-id9 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7081) (undo-tree-id10 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7082) (undo-tree-id11 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7083) (undo-tree-id12 . -1) (#(" " 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7084) (undo-tree-id13 . -1) 7085) nil (25276 57217 834581 858000) 0 nil])
([nil nil ((7076 . 7081)) nil (25276 57217 834566 632000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7076) (undo-tree-id0 . -1) (#("m" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7077) (undo-tree-id1 . -1) (#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7078) (undo-tree-id2 . -1) (#("c" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7079) (undo-tree-id3 . -1) (#("s" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7080) (undo-tree-id4 . -1) 7081) nil (25276 57217 834562 721000) 0 nil])
([nil nil ((7076 . 7088)) nil (25276 57217 834529 336000) 0 nil])
([nil nil ((7090 . 7091)) nil (25276 57217 834526 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7173 . 7174) (nil fontified nil 7091 . 7174) (7091 . 7174)) nil (25276 57217 834524 517000) 0 nil])
([nil nil ((7044 . 7045)) nil (25276 57217 834521 304000) 0 nil])
([nil nil ((7045 . 7061)) nil (25276 57217 834515 228000) 0 nil])
([nil nil ((7105 . 7106) (t 25276 57217 852231 304000)) nil (25276 57307 252249 319000) 0 nil])
([nil nil ((#("(add-to-list 'load-path \"~/bin/emacs-pubmed/\")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t face highlight-quoted-quote) 14 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t) 24 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face (rainbow-delimiters-depth-1-face))) . 7062) (undo-tree-id23 . -16) (undo-tree-id24 . -43) (undo-tree-id25 . -46) (undo-tree-id26 . -16) (undo-tree-id27 . -44) (undo-tree-id28 . -44) (undo-tree-id29 . -44) (undo-tree-id30 . -44) (undo-tree-id31 . 46) (undo-tree-id32 . -1) (undo-tree-id33 . 1) (undo-tree-id34 . -46) (t 25276 57307 266775 740000)) nil (25276 57397 471028 344000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7107 . 7108) (nil fontified nil 7107 . 7108) (nil fontified nil 7106 . 7107) (nil fontified nil 7105 . 7106) (nil fontified nil 7086 . 7105) (nil fontified nil 7085 . 7086) (nil fontified nil 7076 . 7085) (nil fontified nil 7075 . 7076) (nil fontified nil 7074 . 7075) (nil fontified nil 7063 . 7074) (nil fontified nil 7062 . 7063) (7062 . 7108)) nil (25276 57397 471011 303000) 0 nil])
([nil nil ((7108 . 7109)) nil (25276 57397 471006 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7154 . 7155) (nil fontified nil 7154 . 7155) (nil fontified nil 7153 . 7154) (nil fontified nil 7152 . 7153) (nil fontified nil 7133 . 7152) (nil fontified nil 7132 . 7133) (nil fontified nil 7123 . 7132) (nil fontified nil 7122 . 7123) (nil fontified nil 7121 . 7122) (nil fontified nil 7110 . 7121) (nil fontified nil 7109 . 7110) (7109 . 7155)) nil (25276 57397 471003 131000) 0 nil])
([nil nil ((7062 . 7063)) nil (25276 57397 470998 172000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -7062) (undo-tree-id22 . -1) 7063) nil (25276 57397 470995 448000) 0 nil])
([nil nil ((7062 . 7063)) nil (25276 57397 470991 188000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7144) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7145) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7146) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7147) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7148) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7149) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7150) (undo-tree-id18 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7151) (undo-tree-id19 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7152) (undo-tree-id20 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7153) (undo-tree-id21 . -1) 7154) nil (25276 57397 470985 810000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7141) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7142) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7143) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 7144) nil (25276 57397 470958 82000) 0 nil])
([nil nil ((#("(add-to-list 'load-path \"~/bin/\")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-function-name-face fontified t) 12 13 (fontified t) 13 14 (face highlight-quoted-quote fontified t) 14 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7110) (undo-tree-id4 . -31) (undo-tree-id5 . -31) (undo-tree-id6 . 33) (undo-tree-id7 . -1) (undo-tree-id8 . 1) (undo-tree-id9 . -33) (t 25276 57397 489344 23000)) nil (25276 57434 104399 199000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7110) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (25276 57434 104387 884000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7062) (undo-tree-id0 . -1) 7063) nil (25276 57434 104378 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7228 . 7229) (nil fontified nil 7193 . 7229) (7193 . 7229) (t 25276 57434 118386 921000)) nil (25276 57953 562026 161000) 0 nil])
([nil nil ((7192 . 7193)) nil (25276 57953 562022 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7252 . 7253) (nil fontified nil 7193 . 7253) (7193 . 7253)) nil (25276 57978 342005 320000) 0 nil])
([nil nil ((#("772024ac885b3a0055c302ab295f41ce5c08" 0 35 (fontified t ws-butler-chg chg) 35 36 (fontified t rear-nonsticky t ws-butler-chg chg)) . 7254) (undo-tree-id65 . -36) (undo-tree-id66 . -36) (undo-tree-id67 . -36) (undo-tree-id68 . -36) (undo-tree-id69 . -36)) nil (25276 58005 266658 5000) 0 nil] [nil nil ((#("772024ac885b3a0055c302ab295f41ce5c08" 0 35 (fontified t ws-butler-chg chg) 35 36 (fontified t rear-nonsticky t ws-butler-chg chg)) . 7254) (undo-tree-id52 . -36) (undo-tree-id53 . -36) (undo-tree-id54 . -36) 7290) ((nil ws-butler-chg delete 7290 . 7291) (7254 . 7290)) (25276 57977 866089 213000) 0 nil] [nil nil ((#("772024ac885b3a0055c302ab295f41ce5c08" 0 35 (fontified t ws-butler-chg chg) 35 36 (fontified t rear-nonsticky t ws-butler-chg chg)) . 7254)) ((nil ws-butler-chg delete 7290 . 7291) (7254 . 7290)) (25276 57955 498296 145000) 0 nil])
([nil nil ((7213 . 7214)) nil (25276 58005 266648 507000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7230) (undo-tree-id31 . -1) (#("g" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7231) (undo-tree-id32 . -1) (#("h" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7232) (undo-tree-id33 . -1) (#("i" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7233) (undo-tree-id34 . -1) (#("j" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7234) (undo-tree-id35 . -1) (#("k" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7235) (undo-tree-id36 . -1) (#("l" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7236) (undo-tree-id37 . -1) (#("m" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7237) (undo-tree-id38 . -1) (#("n" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7238) (undo-tree-id39 . -1) (#("o" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7239) (undo-tree-id40 . -1) (#("p" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7240) (undo-tree-id41 . -1) (#("q" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7241) (undo-tree-id42 . -1) (#("r" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7242) (undo-tree-id43 . -1) (#("s" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7243) (undo-tree-id44 . -1) (#("t" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7244) (undo-tree-id45 . -1) (#("u" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7245) (undo-tree-id46 . -1) (#("v" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7246) (undo-tree-id47 . -1) (#("w" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7247) (undo-tree-id48 . -1) (#("x" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7248) (undo-tree-id49 . -1) (#("y" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7249) (undo-tree-id50 . -1) (#("z" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7250) (undo-tree-id51 . -1) 7251) ((7230 . 7251)) (25276 57977 438485 202000) 0 nil])
([nil nil ((#("1234567890abcdefghijklmnopqrstuvwxyz" 0 36 (face font-lock-string-face fontified t ws-butler-chg chg)) . 7215)) ((nil ws-butler-chg delete 7251 . 7252) (7215 . 7251)) (25276 57955 103440 811000) 0 nil])
([nil nil ((nil fontified nil 7249 . 7250) (nil fontified nil 7214 . 7249) (7214 . 7250)) nil (25276 58005 266645 853000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7215) (undo-tree-id16 . -1) (#("2" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7216) (undo-tree-id17 . -1) (#("3" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7217) (undo-tree-id18 . -1) (#("4" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7218) (undo-tree-id19 . -1) (#("5" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7219) (undo-tree-id20 . -1) (#("6" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7220) (undo-tree-id21 . -1) (#("7" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7221) (undo-tree-id22 . -1) (#("8" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7222) (undo-tree-id23 . -1) (#("9" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7223) (undo-tree-id24 . -1) (#("0" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7224) (undo-tree-id25 . -1) (#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7225) (undo-tree-id26 . -1) (#("b" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7226) (undo-tree-id27 . -1) (#("c" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7227) (undo-tree-id28 . -1) (#("d" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7228) (undo-tree-id29 . -1) (#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -7229) (undo-tree-id30 . -1) 7230) ((7216 . 7230) (nil ws-butler-chg delete 7216 . 7217) (7215 . 7216)) (25276 57976 956467 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7274 . 7275) (nil fontified nil 7215 . 7275) (7215 . 7275)) ((#("(setq pubmed-api-key \"1234567890abcdefghijklmnopqrstuvwxyz\")" 0 22 (face font-lock-string-face fontified nil ws-butler-chg chg) 22 58 (fontified nil ws-butler-chg chg) 58 59 (face font-lock-string-face fontified nil ws-butler-chg chg) 59 60 (face font-lock-string-face rear-nonsticky nil fontified nil ws-butler-chg chg)) . 7215) (undo-tree-id15 . -3) (nil rear-nonsticky t 7274 . 7275)) (25276 57954 702213 696000) 0 nil])
([nil nil ((#("\"1234567890abcdefghijklmnopqrstuvwxyz\"" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg) 1 2 (face font-lock-string-face fontified t ws-butler-chg chg) 2 3 (face font-lock-string-face fontified t ws-butler-chg chg) 3 4 (face font-lock-string-face fontified t ws-butler-chg chg) 4 5 (face font-lock-string-face fontified t ws-butler-chg chg) 5 6 (face font-lock-string-face fontified t ws-butler-chg chg) 6 7 (face font-lock-string-face fontified t ws-butler-chg chg) 7 8 (face font-lock-string-face fontified t ws-butler-chg chg) 8 9 (face font-lock-string-face fontified t ws-butler-chg chg) 9 10 (face font-lock-string-face fontified t ws-butler-chg chg) 10 11 (face font-lock-string-face fontified t ws-butler-chg chg) 11 12 (face font-lock-string-face fontified t ws-butler-chg chg) 12 13 (face font-lock-string-face fontified t ws-butler-chg chg) 13 14 (face font-lock-string-face fontified t ws-butler-chg chg) 14 15 (face font-lock-string-face fontified t ws-butler-chg chg) 15 16 (face font-lock-string-face fontified t ws-butler-chg chg) 16 17 (face font-lock-string-face fontified t ws-butler-chg chg) 17 18 (face font-lock-string-face fontified t ws-butler-chg chg) 18 19 (face font-lock-string-face fontified t ws-butler-chg chg) 19 20 (face font-lock-string-face fontified t ws-butler-chg chg) 20 21 (face font-lock-string-face fontified t ws-butler-chg chg) 21 22 (face font-lock-string-face fontified t ws-butler-chg chg) 22 23 (face font-lock-string-face fontified t ws-butler-chg chg) 23 24 (face font-lock-string-face fontified t ws-butler-chg chg) 24 25 (face font-lock-string-face fontified t ws-butler-chg chg) 25 26 (face font-lock-string-face fontified t ws-butler-chg chg) 26 27 (face font-lock-string-face fontified t ws-butler-chg chg) 27 28 (face font-lock-string-face fontified t ws-butler-chg chg) 28 29 (face font-lock-string-face fontified t ws-butler-chg chg) 29 30 (face font-lock-string-face fontified t ws-butler-chg chg) 30 31 (face font-lock-string-face fontified t ws-butler-chg chg) 31 32 (face font-lock-string-face fontified t ws-butler-chg chg) 32 33 (face font-lock-string-face fontified t ws-butler-chg chg) 33 34 (face font-lock-string-face fontified t ws-butler-chg chg) 34 35 (face font-lock-string-face fontified t ws-butler-chg chg) 35 36 (face font-lock-string-face fontified t ws-butler-chg chg) 36 37 (face font-lock-string-face fontified t ws-butler-chg chg) 37 38 (face font-lock-string-face fontified t)) . 7251) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1)) nil (25276 58005 266642 360000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7274 . 7275) (nil fontified nil 7215 . 7275) (7215 . 7275)) ((#("(setq pubmed-api-key \"1234567890abcdefghijklmnopqrstuvwxyz\")" 0 22 (face font-lock-string-face fontified nil ws-butler-chg chg) 22 58 (fontified nil ws-butler-chg chg) 58 59 (face font-lock-string-face fontified nil ws-butler-chg chg) 59 60 (face font-lock-string-face rear-nonsticky nil fontified nil ws-butler-chg chg)) . 7215) (nil rear-nonsticky t 7274 . 7275)) (25276 57975 913172 803000) 0 nil])
([nil nil ((#("(setq pubmed-api-key \"1234567890abcdefghijklmnopqrstuvwxyz\")\")" 0 22 (face font-lock-string-face fontified t ws-butler-chg chg) 22 58 (fontified t ws-butler-chg chg) 58 59 (face font-lock-string-face fontified t ws-butler-chg chg) 59 60 (face font-lock-string-face rear-nonsticky t fontified t ws-butler-chg chg) 60 61 (face font-lock-string-face fontified t ws-butler-chg delete) 61 62 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t ws-butler-chg chg)) . 7215) (undo-tree-id10 . -3) (undo-tree-id11 . 62) (undo-tree-id12 . -1) (undo-tree-id13 . 3) (undo-tree-id14 . -60)) ((nil ws-butler-chg delete 7277 . 7278) (7215 . 7277)) (25276 57953 562004 719000) 0 nil])
([nil nil ((7251 . 7252) (#("\"" 0 1 (ws-butler-chg chg fontified nil)) . 7215) (7214 . 7215) (7214 . 7215) (#("\"" 0 1 (ws-butler-chg chg fontified nil)) . -7250) (7250 . 7251)) nil (25276 58005 266634 747000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -7252) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 7253) nil (25276 58005 266627 554000) 0 nil])
([nil nil ((6971 . 6972) (t 25276 58005 278747 832000)) nil (25277 53391 525056 545000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7097 . 7098) (nil fontified nil 7055 . 7098) (nil fontified nil 7052 . 7055) (nil fontified nil 7022 . 7052) (nil fontified nil 7019 . 7022) (nil fontified nil 6975 . 7019) (nil fontified nil 6972 . 6975) (6972 . 7098)) nil (25277 53391 525053 332000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7025) (undo-tree-id0 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7026) (undo-tree-id1 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7027) (undo-tree-id2 . -1) 7028) nil (25277 53393 309161 30000) 0 nil])
([nil nil ((7025 . 7032)) nil (25277 53417 216632 185000) 0 nil] [nil nil ((7025 . 7028)) ((#("Bib" 0 3 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 7025)) (25277 53391 525009 540000) 0 nil])
([nil nil ((#(";; BibLaTeX settings" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 20 (fontified t face font-lock-comment-face)) . 7103) (undo-tree-id6 . -13)) nil (25277 53417 216628 972000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg delete)) . -7103) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 7103) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 7103) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (25277 53417 216624 14000) 0 nil])
([nil nil ((7152 . 7153)) nil (25277 53418 436935 993000) 0 nil])
([nil nil ((#(";; bibtex-mode" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 14 (fontified t face font-lock-comment-face)) . 7103)) nil (25277 53552 473343 272000) 0 nil] [nil nil ((nil rear-nonsticky nil 7173 . 7174) (nil fontified nil 7173 . 7174) (nil fontified nil 7156 . 7173) (nil fontified nil 7153 . 7156) (7153 . 7174)) ((#(";; BibLaTeX settings
" 0 3 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 3 20 (ws-butler-chg chg fontified nil face font-lock-comment-face) 20 21 (ws-butler-chg chg fontified nil rear-nonsticky nil face font-lock-comment-face)) . 7153) (undo-tree-id7 . -21) (undo-tree-id8 . -21) (undo-tree-id9 . -21) (undo-tree-id10 . -21) (undo-tree-id11 . -21) (undo-tree-id12 . -21) (nil rear-nonsticky t 7173 . 7174)) (25277 53417 216598 870000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -7102) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 7103) nil (25277 53552 473340 269000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -7103) (undo-tree-id34 . -2) 7105) nil (25277 53552 473330 72000) 0 nil])
([nil nil ((7136 . 7138)) nil (25277 53552 473326 510000) 0 nil])
([nil nil ((nil fontified nil 7266 . 7267) (nil fontified nil 7224 . 7266) (nil fontified nil 7221 . 7224) (nil fontified nil 7198 . 7221) (nil fontified nil 7197 . 7198) (nil fontified nil 7187 . 7197) (nil fontified nil 7184 . 7187) (nil fontified nil 7140 . 7184) (nil fontified nil 7137 . 7140) (7137 . 7267)) nil (25277 53552 473323 507000) 0 nil])
([nil nil ((#("B" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7190) (undo-tree-id28 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7191) (undo-tree-id29 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7192) (undo-tree-id30 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7193) (undo-tree-id31 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7194) (undo-tree-id32 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7195) (undo-tree-id33 . -1) 7196) nil (25277 53552 473317 221000) 0 nil])
([nil nil ((7190 . 7196)) nil (25277 53552 473307 233000) 0 nil])
([nil nil ((7268 . 7271)) nil (25277 53552 473304 929000) 0 nil])
([nil nil ((7271 . 7281)) nil (25277 53552 473302 344000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7317 . 7318) (nil fontified nil 7281 . 7318) (7281 . 7318)) nil (25277 53552 473299 760000) 0 nil])
([nil nil ((7318 . 7319)) nil (25277 53552 473296 757000) 0 nil])
([nil nil ((#(";; Pubmed lookup" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 16 (fontified t face font-lock-comment-face)) . 7320) (undo-tree-id27 . -16)) nil (25277 53552 473293 963000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7271) (7268 . 7271) (7267 . 7269)) nil (25277 53552 473289 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7286 . 7287) (nil fontified nil 7274 . 7287) (nil fontified nil 7271 . 7274) (7271 . 7287)) nil (25277 53552 473286 839000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -7268) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -7269) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -7270) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7271) (undo-tree-id24 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7272) (undo-tree-id25 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7273) (undo-tree-id26 . -1) 7274) nil (25277 53552 473281 880000) 0 nil])
([nil nil ((#("Pubmed lookup" 0 1 (ws-butler-chg delete fontified t) 1 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t rear-nonsticky t)) . 7268) (undo-tree-id17 . -13)) nil (25277 53552 473268 610000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7268) (undo-tree-id16 . -1)) nil (25277 53552 473264 490000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7320) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1)) nil (25277 53552 473260 20000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 7318) 7451) nil (25277 53552 473241 791000) 0 nil])
([nil nil ((7447 . 7448) (t 25277 53552 489426 634000)) nil (25277 54302 359646 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7463 . 7464) (nil fontified nil 7448 . 7464) (7448 . 7464)) nil (25277 54302 359642 930000) 0 nil])
([nil nil ((7466 . 7467)) nil (25277 54302 359639 89000) 0 nil])
([nil nil ((7467 . 7469) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7467) (7467 . 7468)) nil (25277 54302 359635 597000) 0 nil])
([nil nil ((#("()" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 7467) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . 2) (undo-tree-id123 . -1) (undo-tree-id124 . 1) (undo-tree-id125 . -2) 7468) nil (25277 54302 359630 917000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7322) (7319 . 7322) (7318 . 7320)) nil (25277 54302 359618 206000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7353 . 7354) (nil fontified nil 7322 . 7354) (7322 . 7354)) nil (25277 54302 359614 225000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -7319) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -7320) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -7321) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 7322) nil (25277 54302 359608 986000) 0 nil])
([nil nil ((7319 . 7322)) nil (25277 54302 359595 856000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7322) (7319 . 7322) (7318 . 7320)) nil (25277 54302 359592 224000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7358 . 7359) (nil fontified nil 7322 . 7359) (7322 . 7359)) nil (25277 54302 359588 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7642 . 7643) (nil fontified nil 7606 . 7643) (7606 . 7643)) nil (25277 54302 359584 53000) 0 nil])
([nil nil ((#("https://github.com/emacsmirror/pubmed" 0 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t rear-nonsticky t)) . 7606) (undo-tree-id113 . -37)) nil (25277 54302 359579 792000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7682 . 7683) (nil fontified nil 7606 . 7683) (7606 . 7683)) nil (25277 54302 359574 694000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7660) (undo-tree-id92 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7661) (undo-tree-id93 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7662) (undo-tree-id94 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7663) (undo-tree-id95 . -1) (#("j" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7664) (undo-tree-id96 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7665) (undo-tree-id97 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7666) (undo-tree-id98 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7667) (undo-tree-id99 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7668) (undo-tree-id100 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7669) (undo-tree-id101 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7670) (undo-tree-id102 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7671) (undo-tree-id103 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7672) (undo-tree-id104 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7673) (undo-tree-id105 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7674) (undo-tree-id106 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7675) (undo-tree-id107 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7676) (undo-tree-id108 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7677) (undo-tree-id109 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7678) (undo-tree-id110 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7679) (undo-tree-id111 . -1) (#("z" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7680) (undo-tree-id112 . -1) 7681) nil (25277 54302 359564 77000) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7645) (undo-tree-id77 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7646) (undo-tree-id78 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7647) (undo-tree-id79 . -1) (#("4" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7648) (undo-tree-id80 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7649) (undo-tree-id81 . -1) (#("6" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7650) (undo-tree-id82 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7651) (undo-tree-id83 . -1) (#("8" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7652) (undo-tree-id84 . -1) (#("9" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7653) (undo-tree-id85 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7654) (undo-tree-id86 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7655) (undo-tree-id87 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7656) (undo-tree-id88 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7657) (undo-tree-id89 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7658) (undo-tree-id90 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7659) (undo-tree-id91 . -1) 7660) nil (25277 54302 359508 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7674 . 7675) (nil fontified nil 7645 . 7675) (7645 . 7675)) nil (25277 54302 359477 891000) 0 nil])
([nil nil ((7677 . 7678)) nil (25277 54302 359474 120000) 0 nil])
([nil nil ((7605 . 7606)) nil (25277 54302 359470 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7659 . 7660) (nil fontified nil 7606 . 7660) (7606 . 7660)) nil (25277 54302 359467 484000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7637) (undo-tree-id56 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7638) (undo-tree-id57 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7639) (undo-tree-id58 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7640) (undo-tree-id59 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7641) (undo-tree-id60 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7642) (undo-tree-id61 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7643) (undo-tree-id62 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7644) (undo-tree-id63 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7645) (undo-tree-id64 . -1) (#("@" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7646) (undo-tree-id65 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7647) (undo-tree-id66 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7648) (undo-tree-id67 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7649) (undo-tree-id68 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7650) (undo-tree-id69 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7651) (undo-tree-id70 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7652) (undo-tree-id71 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7653) (undo-tree-id72 . -1) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7654) (undo-tree-id73 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7655) (undo-tree-id74 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7656) (undo-tree-id75 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7657) (undo-tree-id76 . -1) 7658) nil (25277 54302 359456 868000) 0 nil])
([nil nil ((#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7636) (undo-tree-id55 . -1) 7637) nil (25277 54302 359407 0) 0 nil])
([nil nil ((7636 . 7643)) nil (25277 54302 359401 692000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7636) (undo-tree-id48 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7637) (undo-tree-id49 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7638) (undo-tree-id50 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7639) (undo-tree-id51 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7640) (undo-tree-id52 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7641) (undo-tree-id53 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7642) (undo-tree-id54 . -1) 7643) nil (25277 54302 359396 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7657 . 7658) (nil fontified nil 7636 . 7658) (7636 . 7658)) nil (25277 54302 359379 692000) 0 nil])
([nil nil ((#("(setq pubmed-openaccessbutton-api-key \"2a98a191b95c9169eb5b1730235c3e\")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t) 6 37 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t face font-lock-string-face) 39 68 (ws-butler-chg chg fontified t face font-lock-string-face) 68 69 (ws-butler-chg chg rear-nonsticky t fontified t face font-lock-string-face) 69 70 (ws-butler-chg delete fontified t face font-lock-string-face) 70 71 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7661) (undo-tree-id42 . -54) (undo-tree-id43 . -39) (undo-tree-id44 . 71) (undo-tree-id45 . -1) (undo-tree-id46 . 1) (undo-tree-id47 . -71)) nil (25277 54302 359374 523000) 0 nil])
([nil nil ((7605 . 7606)) nil (25277 54302 359350 428000) 0 nil])
([nil nil ((nil fontified nil 7676 . 7677) (nil fontified nil 7675 . 7676) (nil fontified nil 7674 . 7675) (nil fontified nil 7645 . 7674) (nil fontified nil 7644 . 7645) (nil fontified nil 7643 . 7644) (nil fontified nil 7612 . 7643) (nil fontified nil 7611 . 7612) (nil fontified nil 7607 . 7611) (nil fontified nil 7606 . 7607) (7606 . 7677)) nil (25277 54302 359341 767000) 0 nil])
([nil nil ((7541 . 7542) (t 25277 54302 375838 483000)) nil (25277 54769 973203 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7556 . 7557) (nil fontified nil 7542 . 7557) (7542 . 7557)) nil (25277 54769 973200 636000) 0 nil])
([nil nil ((7557 . 7558)) nil (25277 54769 973197 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7572 . 7573) (nil fontified nil 7558 . 7573) (7558 . 7573)) nil (25277 54769 973195 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7833 . 7834) (nil fontified nil 7765 . 7834) (7765 . 7834)) nil (25277 54769 973192 604000) 0 nil])
([nil nil ((#("(setq pubmed-springer-api-key \"1234567890abcdefghijklmnopqrstuvwxyz\")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 30 (ws-butler-chg chg fontified t) 30 68 (ws-butler-chg chg fontified t face font-lock-string-face) 68 69 (ws-butler-chg chg fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 7765) (undo-tree-id194 . -69) (undo-tree-id195 . 69) (undo-tree-id196 . -1) (undo-tree-id197 . 1) (undo-tree-id198 . -69)) nil (25277 54769 973189 322000) 0 nil])
([nil nil ((7709 . 7710)) nil (25277 54769 973181 918000) 0 nil])
([nil nil ((nil fontified nil 7778 . 7779) (nil fontified nil 7740 . 7778) (nil fontified nil 7715 . 7740) (nil fontified nil 7711 . 7715) (nil fontified nil 7710 . 7711) (7710 . 7779)) nil (25277 54769 973178 915000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7756) (undo-tree-id173 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7757) (undo-tree-id174 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7758) (undo-tree-id175 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7759) (undo-tree-id176 . -1) (#("j" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7760) (undo-tree-id177 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7761) (undo-tree-id178 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7762) (undo-tree-id179 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7763) (undo-tree-id180 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7764) (undo-tree-id181 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7765) (undo-tree-id182 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7766) (undo-tree-id183 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7767) (undo-tree-id184 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7768) (undo-tree-id185 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7769) (undo-tree-id186 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7770) (undo-tree-id187 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7771) (undo-tree-id188 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7772) (undo-tree-id189 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7773) (undo-tree-id190 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7774) (undo-tree-id191 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7775) (undo-tree-id192 . -1) (#("z" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7776) (undo-tree-id193 . -1) 7777) nil (25277 54769 973170 813000) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7741) (undo-tree-id158 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7742) (undo-tree-id159 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7743) (undo-tree-id160 . -1) (#("4" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7744) (undo-tree-id161 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7745) (undo-tree-id162 . -1) (#("6" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7746) (undo-tree-id163 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7747) (undo-tree-id164 . -1) (#("8" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7748) (undo-tree-id165 . -1) (#("9" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7749) (undo-tree-id166 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7750) (undo-tree-id167 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7751) (undo-tree-id168 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7752) (undo-tree-id169 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7753) (undo-tree-id170 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7754) (undo-tree-id171 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7755) (undo-tree-id172 . -1) 7756) nil (25277 54769 973139 314000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7772 . 7773) (nil fontified nil 7741 . 7773) (7741 . 7773)) nil (25277 54769 973119 199000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 7399) (7396 . 7399) (7395 . 7397)) nil (25277 54769 973116 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7430 . 7431) (nil fontified nil 7399 . 7431) (7399 . 7431)) nil (25277 54769 973113 193000) 0 nil])
([nil nil ((#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7410) (undo-tree-id137 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7411) (undo-tree-id138 . -1) (#("8" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7412) (undo-tree-id139 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7413) (undo-tree-id140 . -1) (#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7414) (undo-tree-id141 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7415) (undo-tree-id142 . -1) (#("4" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7416) (undo-tree-id143 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7417) (undo-tree-id144 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7418) (undo-tree-id145 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7419) (undo-tree-id146 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7420) (undo-tree-id147 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7421) (undo-tree-id148 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7422) (undo-tree-id149 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7423) (undo-tree-id150 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7424) (undo-tree-id151 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7425) (undo-tree-id152 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7426) (undo-tree-id153 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7427) (undo-tree-id154 . -1) (#("7" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7428) (undo-tree-id155 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7429) (undo-tree-id156 . -1) (#("8" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-comment-face)) . -7430) (undo-tree-id157 . -1) 7431) nil (25277 54769 973105 720000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7399) (undo-tree-id126 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7400) (undo-tree-id127 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7401) (undo-tree-id128 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7402) (undo-tree-id129 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7403) (undo-tree-id130 . -1) (#("4" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7404) (undo-tree-id131 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7405) (undo-tree-id132 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7406) (undo-tree-id133 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7407) (undo-tree-id134 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7408) (undo-tree-id135 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -7409) (undo-tree-id136 . -1) 7410) nil (25277 54771 41180 55000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7447 . 7448) (nil fontified nil 7399 . 7448) (7399 . 7448)) nil (25277 54794 682731 829000) 0 nil] [nil nil ((nil rear-nonsticky nil 7430 . 7431) (nil fontified nil 7399 . 7431) (7399 . 7431)) ((#("f3bce4ebf5b2b8c1747cf735b3c30728" 0 31 (ws-butler-chg chg fontified nil face font-lock-comment-face) 31 32 (ws-butler-chg chg fontified nil rear-nonsticky nil face font-lock-comment-face)) . 7399) (undo-tree-id199 . -32) (undo-tree-id200 . -32) (undo-tree-id201 . -32) (undo-tree-id202 . -32) (nil rear-nonsticky t 7430 . 7431)) (25277 54769 973025 330000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7629) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1)) nil (25277 54794 682725 334000) 0 nil])
nil
([nil nil ((7626 . 7627) (t 25277 54794 702440 194000)) nil (25277 54867 982857 973000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7639 . 7640) (nil fontified nil 7627 . 7640) (7627 . 7640)) nil (25277 54867 982851 129000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8013 . 8014) (nil fontified nil 7897 . 8014) (7897 . 8014) (t 25277 54868 590 199000)) nil (25277 54942 69579 871000) 0 nil])
([nil nil ((7896 . 7897)) nil (25277 54942 69576 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7949 . 7950) (nil fontified nil 7897 . 7950) (7897 . 7950)) nil (25277 54942 69569 185000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -7927) (undo-tree-id213 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7928) (undo-tree-id214 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -7929) (undo-tree-id215 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -7930) (undo-tree-id216 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7931) (undo-tree-id217 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7932) (undo-tree-id218 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7933) (undo-tree-id219 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -7934) (undo-tree-id220 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7935) (undo-tree-id221 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -7936) (undo-tree-id222 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7937) (undo-tree-id223 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7938) (undo-tree-id224 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7939) (undo-tree-id225 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7940) (undo-tree-id226 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -7941) (undo-tree-id227 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7942) (undo-tree-id228 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -7943) (undo-tree-id229 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7944) (undo-tree-id230 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7945) (undo-tree-id231 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -7946) (undo-tree-id232 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7947) (undo-tree-id233 . -1) 7948 (t 25277 54942 82759 171000)) nil (25277 55029 229447 692000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-string-face)) . -7922) (undo-tree-id208 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -7923) (undo-tree-id209 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -7924) (undo-tree-id210 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -7925) (undo-tree-id211 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -7926) (undo-tree-id212 . -1) 7927) nil (25277 55029 229399 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7939 . 7940) (nil fontified nil 7922 . 7940) (7922 . 7940)) nil (25277 55029 229375 264000) 0 nil])
([nil nil ((7642 . 7643) (t 25277 55029 245306 657000)) nil (25277 55225 928227 111000) 0 nil])
([nil nil ((7644 . 7649) (7643 . 7645) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -7643) (7643 . 7644)) nil (25277 55225 928224 108000) 0 nil])
([nil nil ((7644 . 7651) (#("requi" 0 5 (ws-butler-chg chg fontified t)) . -7644) (undo-tree-id22 . -5) 7649) nil (25277 55225 928220 825000) 0 nil])
([nil nil ((7651 . 7652)) nil (25277 55225 928216 495000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -7644) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -7645) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t)) . -7646) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -7647) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -7648) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -7649) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (face font-lock-constant-face ws-butler-chg chg fontified t)) . -7650) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7651) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 7652) nil (25277 55225 928211 536000) 0 nil])
([nil nil ((#("()" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t)) . 7643) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . 2) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -2) 7644) nil (25277 55225 928186 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7669 . 7670) (nil fontified nil 7643 . 7670) (7643 . 7670)) nil (25277 55225 928145 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8121 . 8122) (nil fontified nil 8089 . 8122) (8089 . 8122) (t 25277 55225 943041 434000)) nil (25277 56326 252963 581000) 0 nil])
([nil nil ((8122 . 8123) (t 25277 56326 270347 615000)) nil (25277 56442 477115 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8300 . 8301) (nil fontified nil 8123 . 8301) (8123 . 8301)) nil (25277 56442 477112 363000) 0 nil])
([nil nil ((#("(require 'pubmed-advanced-search)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 32 (fontified t face font-lock-constant-face) 32 33 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 8089) (undo-tree-id13 . -33) (undo-tree-id14 . -33) (undo-tree-id15 . -33) (undo-tree-id16 . -33) (undo-tree-id17 . -33) (undo-tree-id18 . -33) (undo-tree-id19 . -33) (undo-tree-id20 . 33) (undo-tree-id21 . -1) (undo-tree-id22 . 1) (undo-tree-id23 . -33)) nil (25277 56442 477108 801000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8088) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 8089) nil (25277 56442 477092 667000) 0 nil])
([nil nil ((7971 . 7972)) nil (25277 56442 477054 323000) 0 nil])
([nil nil ((7972 . 7973)) nil (25277 56442 477047 618000) 0 nil])
([nil nil ((8269 . 8270) (t 25277 56442 493605 554000)) nil (25277 56958 599121 191000) 0 nil])
([nil nil ((7670 . 7671)) nil (25277 56958 599118 607000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7886 . 7887) (nil fontified nil 7886 . 7887) (nil fontified nil 7878 . 7886) (nil fontified nil 7877 . 7878) (nil fontified nil 7876 . 7877) (nil fontified nil 7869 . 7876) (nil fontified nil 7868 . 7869) (nil fontified nil 7867 . 7868) (nil fontified nil 7866 . 7867) (nil fontified nil 7863 . 7866) (nil fontified nil 7862 . 7863) (nil fontified nil 7861 . 7862) (nil fontified nil 7854 . 7861) (nil fontified nil 7853 . 7854) (nil fontified nil 7852 . 7853) (nil fontified nil 7851 . 7852) (nil fontified nil 7850 . 7851) (nil fontified nil 7849 . 7850) (nil fontified nil 7848 . 7849) (nil fontified nil 7841 . 7848) (nil fontified nil 7840 . 7841) (nil fontified nil 7839 . 7840) (nil fontified nil 7838 . 7839) (nil fontified nil 7834 . 7838) (nil fontified nil 7833 . 7834) (nil fontified nil 7832 . 7833) (nil fontified nil 7825 . 7832) (nil fontified nil 7824 . 7825) (nil fontified nil 7823 . 7824) (nil fontified nil 7822 . 7823) (nil fontified nil 7819 . 7822) (nil fontified nil 7818 . 7819) (nil fontified nil 7817 . 7818) (nil fontified nil 7810 . 7817) (nil fontified nil 7809 . 7810) (nil fontified nil 7808 . 7809) (nil fontified nil 7807 . 7808) (nil fontified nil 7803 . 7807) (nil fontified nil 7802 . 7803) (nil fontified nil 7801 . 7802) (nil fontified nil 7794 . 7801) (nil fontified nil 7793 . 7794) (nil fontified nil 7792 . 7793) (nil fontified nil 7791 . 7792) (nil fontified nil 7780 . 7791) (nil fontified nil 7779 . 7780) (nil fontified nil 7778 . 7779) (nil fontified nil 7771 . 7778) (nil fontified nil 7770 . 7771) (nil fontified nil 7769 . 7770) (nil fontified nil 7768 . 7769) (nil fontified nil 7763 . 7768) (nil fontified nil 7762 . 7763) (nil fontified nil 7761 . 7762) (nil fontified nil 7754 . 7761) (nil fontified nil 7753 . 7754) (nil fontified nil 7752 . 7753) (nil fontified nil 7751 . 7752) (nil fontified nil 7741 . 7751) (nil fontified nil 7740 . 7741) (nil fontified nil 7739 . 7740) (nil fontified nil 7732 . 7739) (nil fontified nil 7731 . 7732) (nil fontified nil 7730 . 7731) (nil fontified nil 7729 . 7730) (nil fontified nil 7706 . 7729) (nil fontified nil 7705 . 7706) (nil fontified nil 7704 . 7705) (nil fontified nil 7697 . 7704) (nil fontified nil 7696 . 7697) (nil fontified nil 7695 . 7696) (nil fontified nil 7694 . 7695) (nil fontified nil 7681 . 7694) (nil fontified nil 7680 . 7681) (nil fontified nil 7679 . 7680) (nil fontified nil 7672 . 7679) (nil fontified nil 7671 . 7672) (7671 . 7887)) nil (25277 56958 599112 810000) 0 nil])
([nil nil ((#("(require 'pubmed-unpaywall)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 26 (fontified t face font-lock-constant-face) 26 27 (fontified t face (rainbow-delimiters-depth-1-face))) . 7643) (undo-tree-id75 . -19) (undo-tree-id76 . 27) (undo-tree-id77 . -1) (undo-tree-id78 . 1) (undo-tree-id79 . -27)) nil (25277 56958 599092 66000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7642) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 7643) nil (25277 56958 599083 545000) 0 nil])
([nil nil ((7495 . 7496)) nil (25277 56958 599073 69000) 0 nil])
([nil nil ((nil fontified nil 7711 . 7712) (nil fontified nil 7703 . 7711) (nil fontified nil 7702 . 7703) (nil fontified nil 7701 . 7702) (nil fontified nil 7694 . 7701) (nil fontified nil 7693 . 7694) (nil fontified nil 7692 . 7693) (nil fontified nil 7691 . 7692) (nil fontified nil 7688 . 7691) (nil fontified nil 7687 . 7688) (nil fontified nil 7686 . 7687) (nil fontified nil 7679 . 7686) (nil fontified nil 7678 . 7679) (nil fontified nil 7677 . 7678) (nil fontified nil 7676 . 7677) (nil fontified nil 7675 . 7676) (nil fontified nil 7674 . 7675) (nil fontified nil 7673 . 7674) (nil fontified nil 7666 . 7673) (nil fontified nil 7665 . 7666) (nil fontified nil 7664 . 7665) (nil fontified nil 7663 . 7664) (nil fontified nil 7659 . 7663) (nil fontified nil 7658 . 7659) (nil fontified nil 7657 . 7658) (nil fontified nil 7650 . 7657) (nil fontified nil 7649 . 7650) (nil fontified nil 7648 . 7649) (nil fontified nil 7647 . 7648) (nil fontified nil 7644 . 7647) (nil fontified nil 7643 . 7644) (nil fontified nil 7642 . 7643) (nil fontified nil 7635 . 7642) (nil fontified nil 7634 . 7635) (nil fontified nil 7633 . 7634) (nil fontified nil 7632 . 7633) (nil fontified nil 7628 . 7632) (nil fontified nil 7627 . 7628) (nil fontified nil 7626 . 7627) (nil fontified nil 7619 . 7626) (nil fontified nil 7618 . 7619) (nil fontified nil 7617 . 7618) (nil fontified nil 7616 . 7617) (nil fontified nil 7605 . 7616) (nil fontified nil 7604 . 7605) (nil fontified nil 7603 . 7604) (nil fontified nil 7596 . 7603) (nil fontified nil 7595 . 7596) (nil fontified nil 7594 . 7595) (nil fontified nil 7593 . 7594) (nil fontified nil 7588 . 7593) (nil fontified nil 7587 . 7588) (nil fontified nil 7586 . 7587) (nil fontified nil 7579 . 7586) (nil fontified nil 7578 . 7579) (nil fontified nil 7577 . 7578) (nil fontified nil 7576 . 7577) (nil fontified nil 7566 . 7576) (nil fontified nil 7565 . 7566) (nil fontified nil 7564 . 7565) (nil fontified nil 7557 . 7564) (nil fontified nil 7556 . 7557) (nil fontified nil 7555 . 7556) (nil fontified nil 7554 . 7555) (nil fontified nil 7531 . 7554) (nil fontified nil 7530 . 7531) (nil fontified nil 7529 . 7530) (nil fontified nil 7522 . 7529) (nil fontified nil 7521 . 7522) (nil fontified nil 7520 . 7521) (nil fontified nil 7519 . 7520) (nil fontified nil 7506 . 7519) (nil fontified nil 7505 . 7506) (nil fontified nil 7504 . 7505) (nil fontified nil 7497 . 7504) (nil fontified nil 7496 . 7497) (7496 . 7712)) nil (25277 56958 599067 62000) 0 nil])
([nil nil ((#("(require 'pubmed-bibtex)
(require 'pubmed-openaccessbutton)
(require 'pubmed-pmc)
(require 'esxml)
(require 'esxml-query)
(require 'ewoc)
(require 'eww)
(require 'json)
(require 's)
(require 'url)
(require 'url-http)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (ws-butler-chg chg fontified t face font-lock-constant-face) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t face highlight-quoted-quote) 10 23 (ws-butler-chg chg fontified t face font-lock-constant-face) 23 24 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 26 33 (ws-butler-chg chg fontified t face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 58 (ws-butler-chg chg fontified t face font-lock-constant-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 59 60 (ws-butler-chg chg fontified t) 60 61 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 61 68 (ws-butler-chg chg fontified t face font-lock-constant-face) 68 69 (ws-butler-chg chg fontified t) 69 70 (ws-butler-chg chg fontified t face highlight-quoted-quote) 70 80 (ws-butler-chg chg fontified t face font-lock-constant-face) 80 81 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 81 82 (ws-butler-chg chg fontified t) 82 83 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 83 90 (ws-butler-chg chg fontified t face font-lock-constant-face) 90 91 (ws-butler-chg chg fontified t) 91 92 (ws-butler-chg chg fontified t face highlight-quoted-quote) 92 97 (ws-butler-chg chg fontified t face font-lock-constant-face) 97 98 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 98 99 (ws-butler-chg chg fontified t) 99 100 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 100 107 (ws-butler-chg chg fontified t face font-lock-constant-face) 107 108 (ws-butler-chg chg fontified t) 108 109 (ws-butler-chg chg fontified t face highlight-quoted-quote) 109 120 (ws-butler-chg chg fontified t face font-lock-constant-face) 120 121 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 121 122 (ws-butler-chg chg fontified t) 122 123 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 123 130 (ws-butler-chg chg fontified t face font-lock-constant-face) 130 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t face highlight-quoted-quote) 132 136 (ws-butler-chg chg fontified t face font-lock-constant-face) 136 137 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 137 138 (ws-butler-chg chg fontified t) 138 139 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 139 146 (ws-butler-chg chg fontified t face font-lock-constant-face) 146 147 (ws-butler-chg chg fontified t) 147 148 (ws-butler-chg chg fontified t face highlight-quoted-quote) 148 151 (ws-butler-chg chg fontified t face font-lock-constant-face) 151 152 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 152 153 (ws-butler-chg chg fontified t) 153 154 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 154 161 (ws-butler-chg chg fontified t face font-lock-constant-face) 161 162 (ws-butler-chg chg fontified t) 162 163 (ws-butler-chg chg fontified t face highlight-quoted-quote) 163 167 (ws-butler-chg chg fontified t face font-lock-constant-face) 167 168 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 168 169 (ws-butler-chg chg fontified t) 169 170 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 170 177 (ws-butler-chg chg fontified t face font-lock-constant-face) 177 178 (ws-butler-chg chg fontified t) 178 179 (ws-butler-chg chg fontified t face highlight-quoted-quote) 179 180 (ws-butler-chg chg fontified t face font-lock-constant-face) 180 181 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 181 182 (ws-butler-chg chg fontified t) 182 183 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 183 190 (ws-butler-chg chg fontified t face font-lock-constant-face) 190 191 (ws-butler-chg chg fontified t) 191 192 (ws-butler-chg chg fontified t face highlight-quoted-quote) 192 195 (ws-butler-chg chg fontified t face font-lock-constant-face) 195 196 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 196 197 (ws-butler-chg chg fontified t) 197 198 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 198 205 (ws-butler-chg chg fontified t face font-lock-constant-face) 205 206 (ws-butler-chg chg fontified t) 206 207 (ws-butler-chg chg fontified t face highlight-quoted-quote) 207 215 (ws-butler-chg chg fontified t face font-lock-constant-face) 215 216 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . -7860) (undo-tree-id63 . -216) (undo-tree-id64 . -197) (undo-tree-id65 . 1) (undo-tree-id66 . -216) (undo-tree-id67 . 19) (undo-tree-id68 . -198) (undo-tree-id69 . -216) 8057) nil (25277 56958 599045 411000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -7859) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 7860) nil (25277 56958 599034 585000) 0 nil])
([nil nil ((#("(add-to-list 'pubmed-fulltext-functions 'pubmed-unpaywall t)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t face highlight-quoted-quote) 14 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t) 40 41 (fontified t face highlight-quoted-quote) 41 52 (fontified t face highlight-quoted-symbol) 52 57 (fontified t face highlight-quoted-symbol) 57 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-1-face))) . 8280) (undo-tree-id52 . -2) (undo-tree-id53 . 60) (undo-tree-id54 . -1) (undo-tree-id55 . 1) (undo-tree-id56 . -60)) nil (25277 56958 599024 738000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 8280) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1)) nil (25277 56958 599016 77000) 0 nil])
([nil nil ((#("(add-to-list 'pubmed-fulltext-functions 'pubmed-dissemin t)" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t face highlight-quoted-quote) 14 19 (fontified t face font-lock-variable-name-face) 19 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t) 40 41 (fontified t face highlight-quoted-quote) 41 56 (fontified t face highlight-quoted-symbol) 56 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face))) . 8280) (undo-tree-id45 . 59) (undo-tree-id46 . -1) (undo-tree-id47 . 1) (undo-tree-id48 . -59)) nil (25277 56958 599008 185000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 8280) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25277 56958 599000 991000) 0 nil])
([nil nil ((#("(add-to-list 'pubmed-fulltext-functions 'pubmed-scihub t)" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t face highlight-quoted-quote) 14 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t) 40 41 (fontified t face highlight-quoted-quote) 41 54 (fontified t face highlight-quoted-symbol) 54 56 (fontified t) 56 57 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 8280) (undo-tree-id38 . 57) (undo-tree-id39 . -1) (undo-tree-id40 . 1) (undo-tree-id41 . -57)) nil (25277 56958 598994 496000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8160) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8161) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 8162) nil (25277 56958 598983 949000) 0 nil])
([nil nil ((#("(require 'pubmed-bibtex)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 23 (face font-lock-constant-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id67 . 24) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -24) (t 25277 56958 616227 51000)) nil (25277 57462 480337 922000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1)) nil (25277 57462 480330 798000) 0 nil])
([nil nil ((#("(require 'pubmed-openaccessbutton)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 33 (face font-lock-constant-face fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496)) nil (25277 57462 480322 906000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1)) nil (25277 57462 480320 42000) 0 nil])
([nil nil ((#("(require 'pubmed-pmc)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 20 (face font-lock-constant-face fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id57 . 21) (undo-tree-id58 . -1) (undo-tree-id59 . 1) (undo-tree-id60 . -21)) nil (25277 57462 480314 385000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . 1) (undo-tree-id56 . 1)) nil (25277 57462 480307 471000) 0 nil])
([nil nil ((#("(require 'esxml)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 15 (face font-lock-constant-face fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id48 . 16) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (undo-tree-id51 . -16)) nil (25277 57462 480300 277000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (25277 57462 480293 712000) 0 nil])
([nil nil ((#("(require 'esxml-query)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 21 (face font-lock-constant-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id41 . 22) (undo-tree-id42 . -1) (undo-tree-id43 . 1) (undo-tree-id44 . -22)) nil (25277 57462 480288 54000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (25277 57462 480281 629000) 0 nil])
([nil nil ((#("(require 'ewoc)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 14 (face font-lock-constant-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id34 . 15) (undo-tree-id35 . -1) (undo-tree-id36 . 1) (undo-tree-id37 . -15)) nil (25277 57462 480276 111000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (25277 57462 480269 616000) 0 nil])
([nil nil ((#("(require 'eww)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 13 (face font-lock-constant-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id27 . 14) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -14)) nil (25277 57462 480263 889000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (25277 57462 480257 114000) 0 nil])
([nil nil ((#("(require 'json)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 14 (face font-lock-constant-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496)) nil (25277 57462 480251 317000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1)) nil (25277 57462 480248 523000) 0 nil])
([nil nil ((#("(require 's)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 11 (face font-lock-constant-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id17 . 12) (undo-tree-id18 . -1) (undo-tree-id19 . 1) (undo-tree-id20 . -12)) nil (25277 57462 480242 517000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25277 57462 480235 882000) 0 nil])
([nil nil ((#("(require 'url)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 13 (face font-lock-constant-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id10 . 14) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -14)) nil (25277 57462 480229 875000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (25277 57462 480222 961000) 0 nil])
([nil nil ((#("(require 'url-http)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 18 (face font-lock-constant-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7496) (undo-tree-id3 . 19) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -19)) nil (25277 57462 480216 116000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7496) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25277 57462 480206 478000) 0 nil])
([nil nil ((#(":commands (pubmed-search pubmed-advanced-search pubmed-unpaywall pubmed-dissemin pubmed-springer pubmed-scihub)" 0 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 24 (face font-lock-function-name-face fontified t) 24 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7530) (t 25277 57462 502622 987000)) nil (25277 57584 767565 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7640 . 7641) (nil fontified nil 7640 . 7641) (nil fontified nil 7554 . 7640) (nil fontified nil 7541 . 7554) (nil fontified nil 7540 . 7541) (nil fontified nil 7539 . 7540) (nil fontified nil 7530 . 7539) (7530 . 7641)) nil (25277 57584 767562 980000) 0 nil])
([nil nil ((7641 . 7644)) nil (25277 57584 767558 999000) 0 nil])
([nil nil ((7641 . 7644)) nil (25277 57584 767556 554000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7754 . 7755) (nil fontified nil 7754 . 7755) (nil fontified nil 7668 . 7754) (nil fontified nil 7655 . 7668) (nil fontified nil 7654 . 7655) (nil fontified nil 7653 . 7654) (nil fontified nil 7644 . 7653) (7644 . 7755)) nil (25277 57584 767553 760000) 0 nil])
([nil nil ((7530 . 7532)) nil (25277 57584 767549 360000) 0 nil])
([nil nil ((#(" pubmed-unpaywall pubmed-dissemin pubmed-springer pubmed-scihub" 0 63 (fontified t ws-butler-chg chg)) . 7693)) nil (25277 57584 767542 865000) 0 nil])
([nil nil ((7644 . 7646) (#("  " 0 2 (fontified nil)) . -7644) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (#(":commands (pubmed-search pubmed-advanced-search)" 0 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 24 (face font-lock-function-name-face fontified t) 24 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . 7646) (undo-tree-id118 . -47) (undo-tree-id119 . -47) (undo-tree-id120 . -47) (undo-tree-id121 . -47) (undo-tree-id122 . -47) (undo-tree-id123 . -47) (undo-tree-id124 . -47) (undo-tree-id125 . -47) (undo-tree-id126 . -47) (undo-tree-id127 . -47) (undo-tree-id128 . 1) (undo-tree-id129 . -48) (undo-tree-id130 . 38) (undo-tree-id131 . -11) (undo-tree-id132 . -47) (t 25277 57584 786124 788000)) nil (25277 57709 776496 631000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7648) (undo-tree-id102 . -1) 7649) nil (25277 57709 776456 751000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7530) (undo-tree-id100 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7531) (undo-tree-id101 . -1) 7532) nil (25277 57709 776451 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7641) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7642) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7643) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -7644) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#(" " 0 1 (fontified t)) . -7645) (undo-tree-id99 . -1) 7646) nil (25277 57709 776436 8000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8061) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (t 25277 57709 797706 675000)) nil (25277 57794 984323 903000) 0 nil])
([nil nil ((apply -9 7496 7651 undo--wrap-and-run-primitive-undo 7496 7651 ((7534 . 7537) (7519 . 7522) (7496 . 7499) 7642)) (t 25277 57715 569872 102000)) nil (25277 57815 747452 756000) 0 nil] [nil nil ((apply -6 7496 7534 undo--wrap-and-run-primitive-undo 7496 7534 ((7519 . 7522) (7496 . 7499) 7528)) (t 25277 57715 569872 102000)) ((apply 6 7496 7528 undo--wrap-and-run-primitive-undo 7496 7528 ((#(";; " 0 3 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 7496) (#(";; " 0 3 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 7519)))) (25277 57793 663674 168000) 0 nil])
([nil nil ((7534 . 7535)) nil (25277 57815 747450 32000) 0 nil])
nil
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -7534) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 7535) nil (25277 57815 747446 540000) 0 nil])
([nil nil ((7652 . 7654)) nil (25277 58175 766521 396000) 0 nil])
([nil nil ((nil fontified nil 7652 . 7653) (nil fontified nil 7653 . 7660) (nil fontified nil 7660 . 7661) (nil fontified nil 7661 . 7662) (nil fontified nil 7662 . 7668) (nil fontified nil 7668 . 7669) (nil fontified nil 7669 . 7670) (7652 . 7703)) ((#("(require 'pubmed)
(require 'pubmed-advanced-search)" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 8 (fontified nil face font-lock-constant-face) 8 9 (fontified nil) 9 10 (fontified nil face highlight-quoted-quote) 10 16 (fontified nil face font-lock-constant-face) 16 17 (fontified nil face (rainbow-delimiters-depth-1-face)) 17 18 (fontified nil) 18 19 (fontified nil face (rainbow-delimiters-depth-1-face)) 19 26 (fontified nil face font-lock-constant-face) 26 27 (fontified nil) 27 28 (fontified nil face highlight-quoted-quote) 28 32 (fontified nil face font-lock-constant-face) 32 50 (fontified nil face font-lock-constant-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face) rear-nonsticky nil)) . 7652) (undo-tree-id10 . -18) (undo-tree-id11 . -18) (nil fontified t 7669 . 7670) (nil fontified t 7668 . 7669) (nil fontified t 7662 . 7668) (nil fontified t 7661 . 7662) (nil fontified t 7660 . 7661) (nil fontified t 7653 . 7660) (nil fontified t 7652 . 7653) (nil rear-nonsticky nil 7702 . 7703) (t 25277 57815 764744 122000)) (25277 58177 709766 545000) 0 nil])
([nil nil ((#("pubmed-scihub" 0 13 (fontified t)) . 8107) (t 25277 57815 764744 122000)) nil (25277 58202 219694 176000) 0 nil] [nil nil ((nil rear-nonsticky nil 7718 . 7719) (nil fontified nil 7718 . 7719) (nil fontified nil 7717 . 7718) (nil fontified nil 7704 . 7717) (7704 . 7719) (t 25277 57815 764744 122000)) ((#("pubmed-scihub))" 0 13 (ws-butler-chg chg fontified nil) 13 14 (ws-butler-chg chg fontified nil face (rainbow-delimiters-unmatched-face)) 14 15 (ws-butler-chg chg fontified nil rear-nonsticky nil face (rainbow-delimiters-unmatched-face))) . 7704) (undo-tree-id4 . -15) (undo-tree-id5 . -15) (undo-tree-id6 . 1) (undo-tree-id7 . -15) (undo-tree-id8 . -15) (undo-tree-id9 . -15) (nil rear-nonsticky t 7718 . 7719)) (25277 58169 46490 463000) 0 nil] [nil nil ((apply 9 7496 7642 undo--wrap-and-run-primitive-undo 7496 7642 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7528) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7516) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7496) 7651)) (t 25277 57815 764744 122000)) ((apply -9 7496 7651 undo--wrap-and-run-primitive-undo 7496 7651 ((7496 . 7499) (7516 . 7519) (7528 . 7531)))) (25277 58132 434618 688000) 0 nil] [nil nil ((5124 . 5125) (t 25277 57815 764744 122000)) ((#("," 0 1 (fontified t ws-butler-chg chg)) . 5124) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) (25277 58034 835147 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8119 . 8120) (nil fontified nil 8107 . 8120) (8107 . 8120)) nil (25277 58202 219691 452000) 0 nil])
nil
nil
nil
([nil nil ((7713 . 7714) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7713) (7713 . 7714) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -7713) (7705 . 7714) (7704 . 7706) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7704) (7704 . 7705)) nil (25277 58202 219687 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7726 . 7727) (nil fontified nil 7714 . 7727) (7714 . 7727)) nil (25277 58202 219679 369000) 0 nil])
([nil nil ((#("(require 'pubmed-scihub)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 23 (face font-lock-constant-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7704) (undo-tree-id8 . -24) (undo-tree-id9 . 24) (undo-tree-id10 . -1) (undo-tree-id11 . 1) (undo-tree-id12 . -24) (undo-tree-id13 . -24) (t 25277 58202 239643 822000)) nil (25277 58330 393422 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7727 . 7728) (nil fontified nil 7727 . 7728) (nil fontified nil 7714 . 7727) (nil fontified nil 7713 . 7714) (nil fontified nil 7712 . 7713) (nil fontified nil 7705 . 7712) (nil fontified nil 7704 . 7705) (7704 . 7728)) nil (25277 58330 393412 19000) 0 nil])
([nil nil ((7728 . 7730)) nil (25277 58330 393407 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7753 . 7754) (nil fontified nil 7753 . 7754) (nil fontified nil 7740 . 7753) (nil fontified nil 7739 . 7740) (nil fontified nil 7738 . 7739) (nil fontified nil 7731 . 7738) (nil fontified nil 7730 . 7731) (7730 . 7754)) nil (25277 58330 393405 104000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 7729) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25277 58330 393400 494000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7746) (undo-tree-id0 . -1) (#("c" 0 1 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7747) (undo-tree-id1 . -1) (#("i" 0 1 (face font-lock-constant-face fontified nil ws-butler-chg chg)) . -7748) (undo-tree-id2 . -1) (#("h" 0 1 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7749) (undo-tree-id3 . -1) (#("u" 0 1 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7750) (undo-tree-id4 . -1) (#("b" 0 1 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7751) (undo-tree-id5 . -1) 7752) nil (25277 58330 393392 882000) 0 nil])
([nil nil ((7746 . 7749)) nil (25277 58330 393330 233000) 0 nil])
([nil nil ((#("(require 'pubmed)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 16 (fontified t face font-lock-constant-face) 16 17 (fontified t face (rainbow-delimiters-depth-1-face))) . 7652) (undo-tree-id43 . -17) (undo-tree-id44 . -17) (undo-tree-id45 . -17) (undo-tree-id46 . -17) (undo-tree-id47 . -17) (undo-tree-id48 . 17) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (undo-tree-id51 . -17) (undo-tree-id52 . -17) (t 25277 58330 411251 14000)) nil (25277 58530 265150 633000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 7652) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . 1) (undo-tree-id42 . 1)) nil (25277 58530 265137 922000) 0 nil])
([nil nil ((#("(require 'pubmed-advanced-search)" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 32 (fontified t face font-lock-constant-face) 32 33 (fontified t face (rainbow-delimiters-depth-1-face))) . 7652) (undo-tree-id33 . -20) (undo-tree-id34 . 33) (undo-tree-id35 . -1) (undo-tree-id36 . 1) (undo-tree-id37 . -33)) nil (25277 58530 265130 99000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 7652) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . 1) (undo-tree-id32 . 1)) nil (25277 58530 265122 277000) 0 nil])
([nil nil ((#("(require 'pubmed-scihub)" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 17 (fontified t face font-lock-constant-face) 17 23 (fontified t face font-lock-constant-face) 23 24 (fontified t face (rainbow-delimiters-depth-1-face))) . 7652) (undo-tree-id24 . 24) (undo-tree-id25 . -1) (undo-tree-id26 . 1) (undo-tree-id27 . -24)) nil (25277 58530 265114 594000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7652) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1)) nil (25277 58530 265107 819000) 0 nil])
([nil nil ((#("(require 'pubmed-pmc)" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-constant-face) 8 9 (fontified t) 9 10 (fontified t face highlight-quoted-quote) 10 20 (fontified t face font-lock-constant-face) 20 21 (fontified t face (rainbow-delimiters-depth-1-face))) . 7652) (undo-tree-id17 . 21) (undo-tree-id18 . -1) (undo-tree-id19 . 1) (undo-tree-id20 . -21)) nil (25277 58530 265101 883000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -7651) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 7652) nil (25277 58530 265093 990000) 0 nil])
([nil nil ((apply 9 7496 7642 undo--wrap-and-run-primitive-undo 7496 7642 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7528) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7516) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7496) 7651))) nil (25277 58530 265049 82000) 0 nil])
([nil nil ((7508 . 7509)) nil (25277 58530 265043 145000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-keyword-face fontified t)) . -7508) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 7509 (t 25277 58530 284898 997000)) nil (25277 58678 441311 139000) 0 nil])
([nil nil ((apply -9 7496 7651 undo--wrap-and-run-primitive-undo 7496 7651 ((7534 . 7537) (7519 . 7522) (7496 . 7499) 7642))) nil (25277 58690 171214 255000) 0 nil] [nil nil ((#("(use-package pubmed
  :ensure t
  :commands (pubmed-search pubmed-advanced-search pubmed-unpaywall pubmed-dissemin pubmed-springer pubmed-scihub))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (ws-butler-chg delete fontified t) 13 20 (fontified t) 20 22 (fontified t) 22 29 (face font-lock-builtin-face fontified t) 29 34 (fontified t) 34 43 (face font-lock-builtin-face fontified t) 43 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 58 (face font-lock-function-name-face fontified t) 58 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-2-face) fontified t) 145 146 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7496) (undo-tree-id0 . -146) (undo-tree-id1 . -12) (undo-tree-id2 . -32) (undo-tree-id3 . -32) (undo-tree-id4 . -20) (undo-tree-id5 . -20) (undo-tree-id6 . -32) (undo-tree-id7 . 1) (undo-tree-id8 . -146) (undo-tree-id9 . 146) (undo-tree-id10 . -1) (undo-tree-id11 . -146) 7528) ((nil ws-butler-chg delete 7642 . 7643) (7496 . 7642)) (25277 58676 345398 540000) 0 nil])
([nil nil ((7495 . 7496) (t 25277 58690 189432 152000)) nil (25277 59150 475636 766000) 0 nil])
([nil nil ((7496 . 7497)) ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 7496) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) (25277 58674 966041 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7509 . 7510) (nil fontified nil 7496 . 7510) (7496 . 7510)) nil (25277 59150 475634 42000) 0 nil])
nil
([nil nil ((7496 . 7497)) nil (25277 59150 475631 39000) 0 nil])
([nil nil ((7511 . 7512)) nil (25277 59150 475628 734000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t ws-butler-chg chg)) . -7511) (undo-tree-id2 . -1) 7512) nil (25277 59170 313782 478000) 0 nil])
([nil nil ((7512 . 7513) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . 7498) (7497 . 7498) (7497 . 7498) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -7511) (7511 . 7512)) nil (25277 59195 555002 819000) 0 nil] [nil nil ((#("add-load-path!" 0 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t rear-nonsticky t)) . -7497) (undo-tree-id7 . -14) (undo-tree-id8 . -14) (undo-tree-id9 . -14) (undo-tree-id10 . -14) (undo-tree-id11 . -14) (undo-tree-id12 . -14)) ((nil ws-butler-chg delete 7511 . 7512) (7497 . 7511)) (25277 59169 808514 856000) 0 nil] [nil nil ((#("add-load-path!" 0 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t rear-nonsticky t)) . -7497) (undo-tree-id0 . -14) (undo-tree-id1 . -14)) ((nil ws-butler-chg delete 7511 . 7512) (7497 . 7511)) (25277 59151 983911 399000) 0 nil])
([nil nil ((#("\"~/bin/emacs-pubmed/\"" 0 21 (fontified t face font-lock-string-face)) . 7473)) nil (25277 59195 554998 698000) 0 nil])
([nil nil ((7497 . 7498)) ((#("9" 0 1 (fontified t ws-butler-chg chg face highlight-numbers-number)) . 7497) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) (25277 59167 846529 948000) 0 nil])
([nil nil ((7497 . 7498)) ((#("9" 0 1 (fontified t ws-butler-chg chg face highlight-numbers-number)) . 7497) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) (25277 59150 475590 739000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7493 . 7494) (nil fontified nil 7473 . 7494) (7473 . 7494)) nil (25277 59195 554996 183000) 0 nil])
nil
nil
([nil nil ((7512 . 7513)) nil (25277 59195 554993 180000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7533 . 7534) (nil fontified nil 7513 . 7534) (7513 . 7534)) nil (25277 59195 554990 317000) 0 nil])
([nil nil ((7449 . 7451)) nil (25277 59338 621515 200000) 0 nil])
([nil nil ((apply 9 7538 7684 undo--wrap-and-run-primitive-undo 7538 7684 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7570) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7558) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7538) 7693))) nil (25277 59356 891026 474000) 0 nil] [nil nil ((7498 . 7499) (#(" " 0 1 (fontified nil)) . -7498) (undo-tree-id11 . -1) (undo-tree-id13 . -1) (#("(add-load-path! \"~/bin/emacs-pubmed/\")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 37 (face font-lock-string-face fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7499) (undo-tree-id15 . -1) (undo-tree-id17 . -38) (t 25277 59195 571809 192000)) ((7498 . 7537) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 7498) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) (25277 59337 966607 975000) 0 nil])
([nil nil ((7550 . 7551) (t 25277 59356 908408 213000)) nil (25277 59547 345343 772000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -7497) (undo-tree-id5 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7498) 7499) ((7497 . 7499)) (25277 59335 568667 518000) 0 nil])
([nil nil ((apply -9 7538 7694 undo--wrap-and-run-primitive-undo 7538 7694 ((7577 . 7580) (7562 . 7565) (7538 . 7541) 7685)) (t 25277 59547 365840 576000)) nil (25277 59720 354452 773000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7449) (undo-tree-id1 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7450) (undo-tree-id3 . -1) 7451) ((7449 . 7451) (t 25277 59258 353598 477000)) (25277 59335 477683 274000) 0 nil])
([nil nil ((7577 . 7579)) nil (25277 59720 354450 189000) 0 nil])
([nil nil ((apply 9 7496 7642 undo--wrap-and-run-primitive-undo 7496 7642 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7528) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7516) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -7496) 7651)) (t 25277 59258 353598 477000)) ((apply -9 7496 7651 undo--wrap-and-run-primitive-undo 7496 7651 ((7496 . 7499) (7516 . 7519) (7528 . 7531)))) (25277 59333 823615 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -7577) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -7578) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 7579) nil (25277 59720 354447 186000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 7700) (7695 . 7700) (7694 . 7696)) nil (25277 59720 354440 62000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -7694) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 7695) nil (25277 59720 354436 710000) 0 nil])
([nil nil ((#("   " 0 1 (fontified nil ws-butler-chg delete face font-lock-comment-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 7694) (undo-tree-id14 . -3) (#(";;" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 7694)) nil (25277 59720 354431 262000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 7700) (7698 . 7700) (7698 . 7699) (#("   " 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 7697) (undo-tree-id13 . -3) (7700 . 7701) (#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 7700) (7695 . 7700) (7694 . 7696)) nil (25277 59720 354426 652000) 0 nil])
([nil nil ((#(";;" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 7695) (undo-tree-id12 . -2)) nil (25277 59720 354421 344000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7695) (undo-tree-id11 . -1)) nil (25277 59720 354417 363000) 0 nil])
([nil nil ((#(";;" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . 7695)) nil (25277 59720 354413 522000) 0 nil])
([nil nil ((7695 . 7696)) nil (25277 59720 354410 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7745 . 7746) (nil fontified nil 7695 . 7746) (7695 . 7746)) nil (25277 59720 354408 214000) 0 nil])
([nil nil ((#("'pubmed-advanced-search" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-quote) 1 23 (ws-butler-chg chg fontified t face font-lock-constant-face)) . 7722)) nil (25277 59720 354405 1000) 0 nil])
([nil nil ((7712 . 7713)) nil (25277 59720 354402 696000) 0 nil])
([nil nil ((7711 . 7712)) nil (25277 59720 354400 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7734 . 7735) (nil fontified nil 7713 . 7735) (nil fontified nil 7712 . 7713) (7712 . 7735)) nil (25277 59720 354397 737000) 0 nil])
([nil nil ((#("(require )" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (ws-butler-chg chg fontified t face font-lock-constant-face) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg delete rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7738) (undo-tree-id0 . -10) (undo-tree-id1 . 10) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -10) (undo-tree-id5 . 10) (undo-tree-id6 . -1) (undo-tree-id7 . 9) (undo-tree-id8 . -9) (undo-tree-id9 . 1) (undo-tree-id10 . -10)) nil (25277 59720 354393 197000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7736) 7738) nil (25277 59720 354354 16000) 0 nil])
([nil nil ((#("'pubmed-advanced-search" 0 1 (face highlight-quoted-quote fontified t) 1 23 (face highlight-quoted-symbol fontified t)) . 7712) (t 25277 59720 370777 301000)) nil (25277 59844 924964 492000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7711) (undo-tree-id28 . -1) 7712) nil (25277 59844 924961 489000) 0 nil])
([nil nil ((7712 . 7713)) nil (25277 59844 924957 788000) 0 nil])
([nil nil ((7722 . 7723) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -7722) (7722 . 7723) (#("'" 0 1 (ws-butler-chg chg fontified nil)) . -7722) (7714 . 7723) (7713 . 7715) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -7713) (7713 . 7714)) nil (25277 59844 924954 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7773 . 7774) (nil fontified nil 7723 . 7774) (7723 . 7774)) nil (25277 59844 924950 943000) 0 nil])
([nil nil ((#("(require 'pubmed)" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t ws-butler-chg chg) 1 8 (face font-lock-keyword-face fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (face highlight-quoted-quote fontified t ws-butler-chg chg) 10 16 (face font-lock-constant-face fontified t ws-butler-chg chg) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t ws-butler-chg chg)) . 7723) (undo-tree-id23 . -17) (undo-tree-id24 . 17) (undo-tree-id25 . -1) (undo-tree-id26 . 1) (undo-tree-id27 . -17)) nil (25277 59844 924947 730000) 0 nil])
([nil nil ((#("(require '
(require 'pubmed-advanced-search))" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 1 8 (face font-lock-constant-face ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (face highlight-quoted-quote ws-butler-chg chg fontified t) 10 11 (fontified t ws-butler-chg delete) 11 12 (face (rainbow-delimiters-depth-2-face) fontified t ws-butler-chg chg) 12 19 (face font-lock-constant-face fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (face highlight-quoted-quote fontified t ws-butler-chg chg) 21 43 (face font-lock-constant-face fontified t ws-butler-chg chg) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t ws-butler-chg chg) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t ws-butler-chg delete)) . 7713) (undo-tree-id15 . -11) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) (undo-tree-id19 . 45) (undo-tree-id20 . -1) (undo-tree-id21 . 1) (undo-tree-id22 . -45)) nil (25277 59844 924940 257000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 7713) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . 1) (undo-tree-id14 . 1)) nil (25277 59844 924929 920000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7713) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25277 59844 924920 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7763 . 7764) (nil fontified nil 7713 . 7764) (7713 . 7764)) nil (25277 59844 924915 114000) 0 nil])
([nil nil ((#("(require 'pubmed)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 16 (face font-lock-constant-face fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t)) . 7695) (undo-tree-id1 . 17) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -17)) nil (25277 59844 924911 901000) 0 nil])
([nil nil ((7747 . 7749)) nil (25277 59844 924905 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7774 . 7775) (nil fontified nil 7748 . 7775) (7748 . 7775)) nil (25277 59844 924902 681000) 0 nil])
([nil nil ((7775 . 7776)) nil (25277 59844 924899 888000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7801 . 7802) (nil fontified nil 7776 . 7802) (7776 . 7802)) nil (25277 59844 924897 513000) 0 nil])
([nil nil ((7802 . 7803)) nil (25277 59844 924894 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7828 . 7829) (nil fontified nil 7803 . 7829) (7803 . 7829)) nil (25277 59844 924892 275000) 0 nil])
([nil nil ((7829 . 7830)) nil (25277 59844 924889 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7853 . 7854) (nil fontified nil 7830 . 7854) (7830 . 7854)) nil (25277 59844 924886 967000) 0 nil])
([nil nil ((7854 . 7855)) nil (25277 59844 924883 894000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 7855) (undo-tree-id0 . -1)) nil (25277 59844 924878 236000) 0 nil])
([nil nil ((#("(setq pubmed-fulltext-functions '(pubmed-pmc pubmed-openaccessbutton pubmed-unpaywall pubmed-dissemin pubmed-scihub))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t) 32 33 (fontified t face highlight-quoted-quote) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 115 (fontified t) 115 116 (fontified t face (rainbow-delimiters-depth-2-face)) 116 117 (fontified t face (rainbow-delimiters-depth-1-face))) . 8156) (undo-tree-id0 . 117) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -117) (t 25277 59844 946333 7000)) nil (25277 60090 656564 67000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8272 . 8273) (nil fontified nil 8272 . 8273) (nil fontified nil 8271 . 8272) (nil fontified nil 8190 . 8271) (nil fontified nil 8189 . 8190) (nil fontified nil 8188 . 8189) (nil fontified nil 8187 . 8188) (nil fontified nil 8162 . 8187) (nil fontified nil 8161 . 8162) (nil fontified nil 8157 . 8161) (nil fontified nil 8156 . 8157) (8156 . 8273)) nil (25277 60090 656535 152000) 0 nil])
([nil nil ((8273 . 8274)) nil (25277 60090 656530 752000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8390 . 8391) (nil fontified nil 8390 . 8391) (nil fontified nil 8389 . 8390) (nil fontified nil 8308 . 8389) (nil fontified nil 8307 . 8308) (nil fontified nil 8306 . 8307) (nil fontified nil 8305 . 8306) (nil fontified nil 8280 . 8305) (nil fontified nil 8279 . 8280) (nil fontified nil 8275 . 8279) (nil fontified nil 8274 . 8275) (8274 . 8391)) nil (25277 60090 656527 819000) 0 nil])
([nil nil ((#("pubmed-scihub" 0 13 (ws-butler-chg chg fontified t)) . 8376)) nil (25277 60090 656522 930000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8331 . 8332) (nil fontified nil 8319 . 8332) (8319 . 8332)) nil (25277 60090 656520 136000) 0 nil])
([nil nil ((8332 . 8333)) nil (25277 60090 656516 434000) 0 nil])
([nil nil ((8156 . 8158)) nil (25277 60090 656510 149000) 0 nil])
([nil nil ((#("(setq pubmed-fulltext-functions '(pubmed-pmc pubmed-scihub pubmed-openaccessbutton pubmed-unpaywall pubmed-dissemin ))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face highlight-quoted-quote fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) fontified t) 117 118 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8276) (undo-tree-id46 . -2) (undo-tree-id47 . 118) (undo-tree-id48 . -1) (undo-tree-id49 . 1) (undo-tree-id50 . -118) (t 25277 60090 677259 347000)) nil (25277 60237 84757 776000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8156) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8157) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 8158) nil (25277 60237 84749 535000) 0 nil])
([nil nil ((#("(require 'pubmed)
(require 'pubmed-advanced-search)
(require 'pubmed-unpaywall)
(require 'pubmed-dissemin)
(require 'pubmed-springer)
(require 'pubmed-scihub)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-constant-face fontified t) 8 9 (fontified t) 9 10 (face highlight-quoted-quote fontified t) 10 16 (face font-lock-constant-face fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 26 (face font-lock-constant-face fontified t) 26 27 (fontified t) 27 28 (face highlight-quoted-quote fontified t) 28 50 (face font-lock-constant-face fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 60 (face font-lock-constant-face fontified t) 60 61 (fontified t) 61 62 (face highlight-quoted-quote fontified t) 62 78 (face font-lock-constant-face fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 88 (face font-lock-constant-face fontified t) 88 89 (fontified t) 89 90 (face highlight-quoted-quote fontified t) 90 105 (face font-lock-constant-face fontified t) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t) 106 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 115 (face font-lock-constant-face fontified t) 115 116 (fontified t) 116 117 (face highlight-quoted-quote fontified t) 117 132 (face font-lock-constant-face fontified t) 132 133 (face (rainbow-delimiters-depth-1-face) fontified t) 133 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-1-face) fontified t) 135 142 (face font-lock-constant-face fontified t) 142 143 (fontified t) 143 144 (face highlight-quoted-quote fontified t) 144 157 (face font-lock-constant-face fontified t) 157 158 (face (rainbow-delimiters-depth-1-face) fontified t) 158 159 (fontified t)) . -7696) (undo-tree-id28 . -159) (undo-tree-id29 . -159) (undo-tree-id30 . -159) (undo-tree-id31 . -134) (undo-tree-id32 . -134) (undo-tree-id33 . -107) (undo-tree-id34 . -107) (undo-tree-id35 . -80) (undo-tree-id36 . -80) (undo-tree-id37 . -52) (undo-tree-id38 . -52) (undo-tree-id39 . -18) (undo-tree-id40 . -18) (undo-tree-id41 . -159) 7830) nil (25277 60237 84741 642000) 0 nil])
([nil nil ((7696 . 7697)) nil (25277 60237 84725 928000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7695) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t)) . -7696) (undo-tree-id27 . -1) 7697) nil (25277 60239 385694 948000) 0 nil])
([nil nil ((apply 9 7538 7685 undo--wrap-and-run-primitive-undo 7538 7685 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7571) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7559) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7538) 7694))) nil (25277 60284 988718 16000) 0 nil] [nil nil ((#(";; (use-package! pubmed
;;   :ensure t
;;   :commands (pubmed-search pubmed-advanced-search pubmed-unpaywall pubmed-dissemin pubmed-springer pubmed-scihub))" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 24 (face font-lock-comment-face fontified t) 24 29 (face font-lock-comment-delimiter-face fontified t) 29 39 (face font-lock-comment-face fontified t) 39 44 (face font-lock-comment-delimiter-face fontified t) 44 156 (face font-lock-comment-face fontified t)) . -7538) (undo-tree-id0 . -156) (undo-tree-id1 . -39) (undo-tree-id2 . -39) (undo-tree-id3 . -24) (undo-tree-id4 . -24) (undo-tree-id5 . -39) (undo-tree-id6 . -156) (undo-tree-id7 . 1) (undo-tree-id8 . -156) 7577) ((nil ws-butler-chg delete 7694 . 7695) (7538 . 7694)) (25277 60238 787614 698000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . -7516) (undo-tree-id55 . -1) 7517) nil (25277 60284 988714 664000) 0 nil])
([nil nil ((7538 . 7539)) ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 7538) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) (25277 60237 84663 907000) 0 nil])
([nil nil ((7516 . 7530)) nil (25277 60284 988694 130000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -7527) (undo-tree-id44 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7528) (undo-tree-id45 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -7529) (undo-tree-id46 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7530) (undo-tree-id47 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7531) (undo-tree-id48 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7532) (undo-tree-id49 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -7533) (undo-tree-id50 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7534) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7535) (undo-tree-id52 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -7536) (undo-tree-id53 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -7537) (undo-tree-id54 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7538) (undo-tree-id55 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -7539) (undo-tree-id56 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7540) (undo-tree-id57 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -7541) (undo-tree-id58 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -7542) (undo-tree-id59 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7543) (undo-tree-id60 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -7544) (undo-tree-id61 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7545) (undo-tree-id62 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -7546) (undo-tree-id63 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7547) (undo-tree-id64 . -1) 7548 (t 25277 60285 10659 648000)) nil (25277 62443 625148 401000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -7516) (undo-tree-id33 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7517) (undo-tree-id34 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7518) (undo-tree-id35 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -7519) (undo-tree-id36 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7520) (undo-tree-id37 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7521) (undo-tree-id38 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7522) (undo-tree-id39 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -7523) (undo-tree-id40 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -7524) (undo-tree-id41 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -7525) (undo-tree-id42 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7526) (undo-tree-id43 . -1) 7527) nil (25277 62443 625059 2000) 0 nil])
([nil nil ((#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t ws-butler-chg delete face font-lock-string-face)) . 7515) (undo-tree-id32 . -1) 7516) nil (25277 62443 624998 937000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -7500) (undo-tree-id17 . -1) (#("d" 0 1 (fontified t)) . -7501) (undo-tree-id18 . -1) (#("d" 0 1 (fontified t)) . -7502) (undo-tree-id19 . -1) (#("-" 0 1 (fontified t)) . -7503) (undo-tree-id20 . -1) (#("l" 0 1 (fontified t)) . -7504) (undo-tree-id21 . -1) (#("o" 0 1 (fontified t)) . -7505) (undo-tree-id22 . -1) (#("a" 0 1 (fontified t)) . -7506) (undo-tree-id23 . -1) (#("d" 0 1 (fontified t)) . -7507) (undo-tree-id24 . -1) (#("-" 0 1 (fontified t)) . -7508) (undo-tree-id25 . -1) (#("p" 0 1 (fontified t)) . -7509) (undo-tree-id26 . -1) (#("a" 0 1 (fontified t)) . -7510) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t)) . -7511) (undo-tree-id28 . -1) (#("h" 0 1 (fontified t)) . -7512) (undo-tree-id29 . -1) (#("!" 0 1 (fontified t face font-lock-keyword-face)) . -7513) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -7514) (undo-tree-id31 . -1) 7515) nil (25277 62443 624980 987000) 0 nil])
([nil nil ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face))) . 7499) (undo-tree-id9 . -2) (undo-tree-id10 . -1) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . 2) (undo-tree-id14 . -1) (undo-tree-id15 . 1) (undo-tree-id16 . -2) 7500) nil (25277 62443 624902 973000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -7497) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -7498) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 7499) nil (25277 62443 624854 13000) 0 nil])
([nil nil ((#("(setq pubmed-fulltext-functions '(pubmed-pmc pubmed-openaccessbutton pubmed-unpaywall pubmed-dissemin pubmed-scihub))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face highlight-quoted-quote fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 103 (fontified t) 103 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-2-face) fontified t) 116 117 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7947) (undo-tree-id6 . -19) (undo-tree-id7 . -19) (undo-tree-id8 . -117) (undo-tree-id9 . 117) (undo-tree-id10 . -1) (undo-tree-id11 . 1) (undo-tree-id12 . -117) (t 25277 62443 663665 297000)) nil (25278 993 748401 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8063 . 8064) (nil fontified nil 8063 . 8064) (nil fontified nil 8062 . 8063) (nil fontified nil 8050 . 8062) (nil fontified nil 7981 . 8050) (nil fontified nil 7980 . 7981) (nil fontified nil 7979 . 7980) (nil fontified nil 7978 . 7979) (nil fontified nil 7953 . 7978) (nil fontified nil 7952 . 7953) (nil fontified nil 7948 . 7952) (nil fontified nil 7947 . 7948) (7947 . 8064)) nil (25278 993 748390 199000) 0 nil])
([nil nil ((8064 . 8065)) nil (25278 993 748385 31000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8181 . 8182) (nil fontified nil 8181 . 8182) (nil fontified nil 8180 . 8181) (nil fontified nil 8168 . 8180) (nil fontified nil 8099 . 8168) (nil fontified nil 8098 . 8099) (nil fontified nil 8097 . 8098) (nil fontified nil 8096 . 8097) (nil fontified nil 8071 . 8096) (nil fontified nil 8070 . 8071) (nil fontified nil 8066 . 8070) (nil fontified nil 8065 . 8066) (8065 . 8182)) nil (25278 993 748381 818000) 0 nil])
([nil nil ((#("pubmed-unpaywall" 0 16 (fontified t ws-butler-chg chg)) . 8134) (undo-tree-id0 . -16) (undo-tree-id1 . -16) (undo-tree-id2 . -16) (undo-tree-id3 . -16) (undo-tree-id4 . -16) (undo-tree-id5 . -16) 8150) nil (25278 993 748374 973000) 0 nil])
([nil nil ((7947 . 7949)) nil (25278 993 748340 331000) 0 nil])
([nil nil ((#("pubmed-dissemin" 0 15 (fontified t)) . 8137) (undo-tree-id4 . -15) (undo-tree-id5 . -15) (undo-tree-id6 . -15) 8152 (t 25278 993 768702 99000)) nil (25278 1296 639799 539000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8136) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 8137) nil (25278 1296 639790 180000) 0 nil])
([nil nil ((#(" pubmed-scihub" 0 14 (fontified t)) . 8136) (t 25278 1296 661818 39000)) nil (25278 1505 127669 233000) 0 nil])
([nil nil ((#("(setq pubmed-fulltext-functions '(pubmed-pmc pubmed-openaccessbutton ))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face highlight-quoted-quote fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) ws-butler-chg delete fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8067) (undo-tree-id8 . -69) (undo-tree-id9 . -69) (undo-tree-id10 . 71) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -71) (undo-tree-id14 . -69)) nil (25278 1505 127666 20000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8068) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25278 1505 127654 147000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 8067) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25278 1505 127644 718000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-keyword-face fontified t)) . -7510) (undo-tree-id15 . -1) 7511 (t 25278 1505 148000 530000)) nil (25278 1518 311152 576000) 0 nil])
([nil nil ((apply -9 7498 7653 undo--wrap-and-run-primitive-undo 7498 7653 ((7536 . 7539) (7521 . 7524) (7498 . 7501) 7644)) (t 25278 1518 332389 737000)) nil (25278 2008 252662 653000) 0 nil])
([nil nil ((7536 . 7538)) nil (25278 2008 252659 999000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -7536) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -7537) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 7538) nil (25278 2008 252656 716000) 0 nil])
([nil nil ((7654 . 7655)) nil (25278 2008 252649 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7705 . 7706) (nil fontified nil 7655 . 7706) (7655 . 7706)) nil (25278 2008 252647 218000) 0 nil])
([nil nil ((7706 . 7708)) nil (25278 2008 252644 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7733 . 7734) (nil fontified nil 7707 . 7734) (7707 . 7734)) nil (25278 2008 252641 770000) 0 nil])
([nil nil ((7734 . 7735)) nil (25278 2008 252638 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7760 . 7761) (nil fontified nil 7735 . 7761) (7735 . 7761)) nil (25278 2008 252636 113000) 0 nil])
([nil nil ((7761 . 7762)) nil (25278 2008 252633 109000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7787 . 7788) (nil fontified nil 7762 . 7788) (7762 . 7788)) nil (25278 2008 252630 525000) 0 nil])
([nil nil ((7788 . 7789)) nil (25278 2008 252627 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7812 . 7813) (nil fontified nil 7789 . 7813) (7789 . 7813)) nil (25278 2008 252624 589000) 0 nil])
([nil nil ((#(";;(add-to-list 'load-path \"~/bin/emacs-pubmed/\")" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 48 (fontified t face font-lock-comment-face)) . 7449) (undo-tree-id0 . -24) (undo-tree-id1 . 1) (undo-tree-id2 . -48) (undo-tree-id3 . 46) (undo-tree-id4 . -3)) nil (25278 2008 252618 442000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -7605) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 7606 (t 25278 2008 270757 292000)) nil (25278 2013 73085 156000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8066) (undo-tree-id13 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8067) (undo-tree-id14 . -1) 8068 (t 25278 2013 94898 95000)) nil (25278 2022 30311 631000) 0 nil])
([nil nil ((7658 . 7660) (t 25278 2022 51159 479000)) nil (25279 18984 252242 471000) 0 nil])
([nil nil ((7688 . 7690)) nil (25279 18984 252239 817000) 0 nil])
([nil nil ((7717 . 7719)) nil (25279 18984 252237 303000) 0 nil])
([nil nil ((7746 . 7748)) nil (25279 18984 252234 648000) 0 nil])
([nil nil ((7835 . 7837)) nil (25279 18984 252232 274000) 0 nil])
([nil nil ((7909 . 7911)) nil (25279 18984 252229 829000) 0 nil])
([nil nil ((7977 . 7979)) nil (25279 18984 252227 105000) 0 nil])
([nil nil ((8034 . 8036)) nil (25279 18984 252224 801000) 0 nil])
([nil nil ((8082 . 8084)) nil (25279 18984 252222 426000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7773) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1)) nil (25279 18984 252219 283000) 0 nil])
([nil nil ((8201 . 8202)) nil (25279 18984 252213 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8247 . 8248) (nil fontified nil 8202 . 8248) (8202 . 8248)) nil (25279 18984 252210 902000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8241) (undo-tree-id9 . -1) (#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8242) (undo-tree-id10 . -1) (#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8243) (undo-tree-id11 . -1) (#("r" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8244) (undo-tree-id12 . -1) 8245) nil (25279 18984 252206 921000) 0 nil])
([nil nil ((#("[]" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg) 1 2 (face font-lock-string-face fontified t ws-butler-chg delete)) . 8240) (undo-tree-id4 . -1) (undo-tree-id5 . 2) (undo-tree-id6 . -1) (undo-tree-id7 . 1) (undo-tree-id8 . -2) 8241) nil (25279 18984 252198 819000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8235) (undo-tree-id0 . -1) (#("u" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8236) (undo-tree-id1 . -1) (#("t" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8237) (undo-tree-id2 . -1) (#("h" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -8238) (undo-tree-id3 . -1) 8239) nil (25279 18984 252189 41000) 0 nil])
([nil nil ((8235 . 8239)) nil (25279 18984 252157 402000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8201) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (t 25279 18984 272951 742000)) nil (25279 19124 5986 783000) 0 nil])
([nil nil ((#("(setq pubmed-api-key \"772024ac885b3a0055c302ab295f41ce5c08\")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t) 21 59 (fontified t face font-lock-string-face) 59 60 (fontified t face (rainbow-delimiters-depth-1-face))) . 7773) (undo-tree-id7 . 60) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -60)) nil (25279 19124 5980 497000) 0 nil])
([nil nil ((7657 . 7658)) nil (25279 19124 5974 2000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7717 . 7718) (nil fontified nil 7717 . 7718) (nil fontified nil 7679 . 7717) (nil fontified nil 7678 . 7679) (nil fontified nil 7664 . 7678) (nil fontified nil 7663 . 7664) (nil fontified nil 7659 . 7663) (nil fontified nil 7658 . 7659) (7658 . 7718)) nil (25279 19124 5971 278000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-keypattern \"[pmid]\")" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 17 (fontified t face font-lock-variable-name-face) 17 30 (face font-lock-variable-name-face fontified t) 30 31 (fontified t) 31 39 (face font-lock-string-face fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8202) (undo-tree-id0 . -40) (undo-tree-id1 . -40) (undo-tree-id2 . -40) (undo-tree-id3 . 40) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -40)) nil (25279 19124 5966 389000) 0 nil])
([nil nil ((7718 . 7719)) nil (25279 19124 5934 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7758 . 7759) (nil fontified nil 7758 . 7759) (nil fontified nil 7750 . 7758) (nil fontified nil 7749 . 7750) (nil fontified nil 7736 . 7749) (nil fontified nil 7725 . 7736) (nil fontified nil 7724 . 7725) (nil fontified nil 7720 . 7724) (nil fontified nil 7719 . 7720) (7719 . 7759)) nil (25279 19124 5931 607000) 0 nil])
([nil nil ((7759 . 7760)) nil (25279 19124 5923 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7820 . 7821) (nil fontified nil 7760 . 7821) (7760 . 7821) (t 25279 19124 28889 270000)) nil (25279 19286 4395 242000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7795) (undo-tree-id78 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7796) (undo-tree-id79 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7797) (undo-tree-id80 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7798) (undo-tree-id81 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7799) (undo-tree-id82 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7800) (undo-tree-id83 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7801) (undo-tree-id84 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7802) (undo-tree-id85 . -1) 7803) nil (25279 19286 4390 74000) 0 nil])
([nil nil ((7795 . 7814)) nil (25279 19286 4377 292000) 0 nil])
([nil nil ((7814 . 7820)) nil (25279 19286 4374 848000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7817) (undo-tree-id75 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7818) (undo-tree-id76 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7819) (undo-tree-id77 . -1) 7820) nil (25279 19286 4371 426000) 0 nil])
([nil nil ((7817 . 7825)) nil (25279 19286 4364 930000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7803) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7804) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7805) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7806) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7807) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7808) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7809) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7810) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7811) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7812) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7813) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7814) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7815) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7816) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7817) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7818) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7819) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7820) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7821) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7822) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7823) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 7824) nil (25279 19286 4355 921000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7794) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7795) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7796) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7797) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7798) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7799) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7800) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7801) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7802) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 7803) nil (25279 19286 4303 818000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7824 . 7825) (nil fontified nil 7794 . 7825) (7794 . 7825)) nil (25279 19286 4280 560000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face)) . -7824) (undo-tree-id14 . -1) 7825) nil (25279 19286 4274 344000) 0 nil])
([nil nil ((7843 . 7844) (t 25279 19286 29157 237000)) nil (25279 20174 948309 59000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7844 . 7845) (nil fontified nil 7844 . 7845) (7844 . 7845)) nil (25279 20174 948305 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7880 . 7881) (nil fontified nil 7844 . 7881) (7844 . 7881)) nil (25279 20174 948298 722000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -7872) (undo-tree-id0 . -1) (#("u" 0 1 (fontified t)) . -7873) (undo-tree-id1 . -1) (#("m" 0 1 (fontified t)) . -7874) (undo-tree-id2 . -1) (#("b" 0 1 (fontified t)) . -7875) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t)) . -7876) (undo-tree-id4 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -7877) (undo-tree-id5 . -1) 7878 (t 25279 20174 969572 586000)) nil (25279 21098 444545 278000) 0 nil])
([nil nil ((7872 . 7876)) nil (25279 21098 444502 674000) 0 nil])
([nil nil ((7879 . 7889) (t 25279 21098 467515 702000)) nil (25279 21111 801467 717000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -7886) (undo-tree-id9 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -7887) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7888) (undo-tree-id11 . -1) 7889) nil (25279 21111 801463 806000) 0 nil])
([nil nil ((7886 . 7902)) nil (25279 21111 801457 310000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -7899) (undo-tree-id6 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -7900) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -7901) (undo-tree-id8 . -1) 7902) nil (25279 21111 801453 259000) 0 nil])
([nil nil ((7899 . 7905)) nil (25279 21111 801432 795000) 0 nil])
([nil nil ((7905 . 7906) (t 25279 21111 823892 39000)) nil (25279 21204 219593 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7913 . 7914) (nil fontified nil 7906 . 7914) (7906 . 7914)) nil (25279 21204 219590 845000) 0 nil])
([nil nil ((#("30728504" 0 7 (ws-butler-chg chg fontified t face highlight-numbers-number) 7 8 (ws-butler-chg chg fontified t rear-nonsticky t face highlight-numbers-number)) . 7906) (undo-tree-id56 . -8)) nil (25279 21204 219587 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7932 . 7933) (nil fontified nil 7906 . 7933) (7906 . 7933)) nil (25279 21204 219584 420000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-note t) # How to add extra fields" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 28 (fontified t face font-lock-variable-name-face) 28 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 61 (fontified t)) . 7844) (undo-tree-id51 . -27) (undo-tree-id52 . 61) (undo-tree-id53 . -1) (undo-tree-id54 . 27) (undo-tree-id55 . -35)) nil (25279 21204 219581 67000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7904 . 7905) (nil fontified nil 7879 . 7905) (nil fontified nil 7878 . 7879) (nil fontified nil 7877 . 7878) (nil fontified nil 7876 . 7877) (nil fontified nil 7872 . 7876) (nil fontified nil 7850 . 7872) (nil fontified nil 7849 . 7850) (nil fontified nil 7845 . 7849) (nil fontified nil 7844 . 7845) (7844 . 7905)) nil (25279 21204 219573 35000) 0 nil])
([nil nil ((7905 . 7906)) nil (25279 21204 219568 566000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7966 . 7967) (nil fontified nil 7941 . 7967) (nil fontified nil 7940 . 7941) (nil fontified nil 7939 . 7940) (nil fontified nil 7938 . 7939) (nil fontified nil 7934 . 7938) (nil fontified nil 7912 . 7934) (nil fontified nil 7911 . 7912) (nil fontified nil 7907 . 7911) (nil fontified nil 7906 . 7907) (7906 . 7967)) nil (25279 21204 219565 702000) 0 nil])
([nil nil ((#("# How to add extra fields" 0 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t rear-nonsticky t)) . 7942) (undo-tree-id50 . -25)) nil (25279 21204 219560 883000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -7939) (undo-tree-id49 . -1) 7940) nil (25279 21204 219557 111000) 0 nil])
([nil nil ((7939 . 7940)) nil (25279 21204 219553 479000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -7934) (undo-tree-id45 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -7935) (undo-tree-id46 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -7936) (undo-tree-id47 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -7937) (undo-tree-id48 . -1) 7938) nil (25279 21204 219550 127000) 0 nil])
([nil nil ((7934 . 7940)) nil (25279 21204 219542 793000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7906) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (#("(setq pubmed-bibtex-article-pubmed t)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t) 6 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 34 35 (ws-butler-chg delete fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face))) . 7906) (undo-tree-id40 . -34) (undo-tree-id41 . 37) (undo-tree-id42 . -1) (undo-tree-id43 . 1) (undo-tree-id44 . -37)) nil (25279 21204 219539 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7942 . 7943) (nil fontified nil 7942 . 7943) (nil fontified nil 7941 . 7942) (nil fontified nil 7940 . 7941) (nil fontified nil 7912 . 7940) (nil fontified nil 7911 . 7912) (nil fontified nil 7907 . 7911) (nil fontified nil 7906 . 7907) (7906 . 7943)) nil (25279 21204 219529 593000) 0 nil])
([nil nil ((7943 . 7944)) nil (25279 21204 219525 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7980 . 7981) (nil fontified nil 7980 . 7981) (nil fontified nil 7979 . 7980) (nil fontified nil 7978 . 7979) (nil fontified nil 7950 . 7978) (nil fontified nil 7949 . 7950) (nil fontified nil 7945 . 7949) (nil fontified nil 7944 . 7945) (7944 . 7981)) nil (25279 21204 219522 888000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t)) . -7972) (undo-tree-id32 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -7973) (undo-tree-id33 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -7974) (undo-tree-id34 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t)) . -7975) (undo-tree-id35 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -7976) (undo-tree-id36 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -7977) (undo-tree-id37 . -1) 7978) nil (25279 21204 219517 510000) 0 nil])
([nil nil ((7972 . 7976)) nil (25279 21204 219507 732000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -7975) (undo-tree-id31 . -1) 7976) nil (25279 21204 219505 148000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-doi t)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t) 6 31 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 31 32 (ws-butler-chg delete fontified t) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 7944) (undo-tree-id26 . -31) (undo-tree-id27 . 34) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -34)) nil (25279 21204 219501 27000) 0 nil])
([nil nil ((nil fontified nil 7977 . 7978) (nil fontified nil 7976 . 7977) (nil fontified nil 7975 . 7976) (nil fontified nil 7950 . 7975) (nil fontified nil 7949 . 7950) (nil fontified nil 7945 . 7949) (nil fontified nil 7944 . 7945) (7944 . 7978)) nil (25279 21204 219493 135000) 0 nil])
([nil nil ((7978 . 7979)) nil (25279 21204 219488 595000) 0 nil])
([nil nil ((nil fontified nil 8012 . 8013) (nil fontified nil 8011 . 8012) (nil fontified nil 8010 . 8011) (nil fontified nil 7985 . 8010) (nil fontified nil 7984 . 7985) (nil fontified nil 7980 . 7984) (nil fontified nil 7979 . 7980) (7979 . 8013)) nil (25279 21204 219485 941000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t)) . -8007) (undo-tree-id23 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -8008) (undo-tree-id24 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -8009) (undo-tree-id25 . -1) 8010) nil (25279 21204 219481 401000) 0 nil])
([nil nil ((8007 . 8009)) nil (25279 21204 219475 325000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -8007) (undo-tree-id21 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -8008) (undo-tree-id22 . -1) 8009) nil (25279 21204 219472 392000) 0 nil])
([nil nil ((8007 . 8009)) nil (25279 21204 219467 153000) 0 nil])
([nil nil ((8009 . 8010)) nil (25279 21204 219464 639000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-url t)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t) 6 31 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 31 32 (ws-butler-chg delete fontified t) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7979) (undo-tree-id16 . -31) (undo-tree-id17 . 34) (undo-tree-id18 . -1) (undo-tree-id19 . 1) (undo-tree-id20 . -34)) nil (25279 21204 219461 776000) 0 nil])
([nil nil ((nil fontified nil 8012 . 8013) (nil fontified nil 8011 . 8012) (nil fontified nil 8010 . 8011) (nil fontified nil 7985 . 8010) (nil fontified nil 7984 . 7985) (nil fontified nil 7980 . 7984) (nil fontified nil 7979 . 7980) (7979 . 8013)) nil (25279 21204 219453 255000) 0 nil])
([nil nil ((8013 . 8014)) nil (25279 21204 219449 344000) 0 nil])
([nil nil ((nil fontified nil 8047 . 8048) (nil fontified nil 8046 . 8047) (nil fontified nil 8045 . 8046) (nil fontified nil 8020 . 8045) (nil fontified nil 8019 . 8020) (nil fontified nil 8015 . 8019) (nil fontified nil 8014 . 8015) (8014 . 8048)) nil (25279 21204 219446 550000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t)) . -8042) (undo-tree-id13 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -8043) (undo-tree-id14 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -8044) (undo-tree-id15 . -1) 8045) nil (25279 21204 219441 940000) 0 nil])
([nil nil ((8042 . 8045)) nil (25279 21204 219435 165000) 0 nil])
([nil nil ((8045 . 8046)) nil (25279 21204 219432 581000) 0 nil])
([nil nil ((#("issn, pubmed, pii, doi, url" 0 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg rear-nonsticky t fontified t)) . 8050) (undo-tree-id12 . -27)) nil (25279 21343 322689 512000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t)) . -7880) (undo-tree-id10 . -1) 7881) nil (25279 21363 2097 930000) 0 nil] [nil nil ((apply -12 7906 8062 undo--wrap-and-run-primitive-undo 7906 8062 ((8023 . 8026) (7985 . 7988) (7947 . 7950) (7906 . 7909) 8050)) (t 25279 21204 246580 205000)) ((apply 12 7906 8050 undo--wrap-and-run-primitive-undo 7906 8050 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7906) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7947) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7985) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8023)))) (25279 21338 115687 64000) 0 nil])
([nil nil ((7880 . 7881)) nil (25279 21363 2085 9000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -7864) (undo-tree-id0 . -1) (#("r" 0 1 (fontified t)) . -7865) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t)) . -7866) (undo-tree-id2 . -1) (#("i" 0 1 (fontified t)) . -7867) (undo-tree-id3 . -1) (#("c" 0 1 (fontified t)) . -7868) (undo-tree-id4 . -1) (#("l" 0 1 (fontified t)) . -7869) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t)) . -7870) (undo-tree-id6 . -1) (#("-" 0 1 (fontified t face font-lock-variable-name-face)) . -7871) (undo-tree-id7 . -1) 7872 (t 25279 21283 932924 327000)) ((7864 . 7872) (t 25279 21311 49719 207000)) (25279 21337 387599 704000) 0 nil])
([nil nil ((7905 . 7915)) nil (25279 21363 2078 932000) 0 nil])
([nil nil ((#(" # How to add extra fields" 0 26 (fontified t)) . 7871) (undo-tree-id8 . -7) (undo-tree-id9 . -7) (t 25279 21311 49719 207000)) ((nil ws-butler-chg delete 7897 . 7898) (7871 . 7897)) (25279 21335 791601 220000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-doi t)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 31 (face font-lock-variable-name-face fontified t) 31 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7954) (undo-tree-id26 . 34) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -34) (t 25279 21363 23239 119000)) nil (25279 21556 21229 672000) 0 nil])
nil
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7954) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25279 21556 21221 361000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-url t)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 31 (face font-lock-variable-name-face fontified t) 31 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7954) (undo-tree-id19 . 34) (undo-tree-id20 . -1) (undo-tree-id21 . 1) (undo-tree-id22 . -34)) nil (25279 21556 21214 796000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7954) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1)) nil (25279 21556 21206 903000) 0 nil])
([nil nil ((#("(setq pubmed-bibtex-article-issn t)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 32 (face font-lock-variable-name-face fontified t) 32 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7954) (undo-tree-id12 . 35) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -35)) nil (25279 21556 21200 129000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7953) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 7954) nil (25279 21556 21191 328000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7954) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25279 21556 21172 960000) 0 nil])
([nil nil ((8438 . 8441) (t 25279 21556 44849 24000)) nil (25279 31160 1139 433000) 0 nil])
([nil nil ((8438 . 8439)) nil (25279 31160 1136 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8819 . 8820) (nil fontified nil 8439 . 8820) (8439 . 8820)) nil (25279 31160 1134 335000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8446) (undo-tree-id69 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8447) (undo-tree-id70 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8448) (undo-tree-id71 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8449) (undo-tree-id72 . -1) 8450) nil (25279 31160 1130 703000) 0 nil])
([nil nil ((8446 . 8454)) nil (25279 31160 1122 601000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8455) (undo-tree-id65 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8456) (undo-tree-id66 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8457) (undo-tree-id67 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8458) (undo-tree-id68 . -1) 8459) nil (25279 31160 1119 109000) 0 nil])
([nil nil ((8455 . 8458)) nil (25279 31160 1109 471000) 0 nil])
([nil nil ((#("Tidies the HTML content in the buffer using `tidy" 0 45 (ws-butler-chg chg fontified t face font-lock-doc-face) 45 49 (ws-butler-chg chg fontified t face (font-lock-constant-face font-lock-doc-face))) . 8465) (undo-tree-id64 . -16)) nil (25279 31160 1106 677000) 0 nil])
([nil nil ((8465 . 8474)) nil (25279 31160 1103 45000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8468) (undo-tree-id58 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8469) (undo-tree-id59 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8470) (undo-tree-id60 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8471) (undo-tree-id61 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8472) (undo-tree-id62 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8473) (undo-tree-id63 . -1) 8474) nil (25279 31160 1099 274000) 0 nil])
([nil nil ((#("D" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8465) (undo-tree-id55 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8466) (undo-tree-id56 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8467) (undo-tree-id57 . -1) 8468) nil (25279 31160 1088 169000) 0 nil])
([nil nil ((8465 . 8473)) nil (25279 31160 1081 464000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8465) (undo-tree-id47 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8466) (undo-tree-id48 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8467) (undo-tree-id49 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8468) (undo-tree-id50 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8469) (undo-tree-id51 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8470) (undo-tree-id52 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8471) (undo-tree-id53 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8472) (undo-tree-id54 . -1) 8473) nil (25279 31160 1077 413000) 0 nil])
([nil nil ((8465 . 8469)) nil (25279 31160 1064 492000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8468) (undo-tree-id46 . -1) 8469) nil (25279 31160 1061 838000) 0 nil])
([nil nil ((8468 . 8470)) nil (25279 31160 1057 996000) 0 nil])
([nil nil ((8470 . 8484)) nil (25279 31160 1055 692000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8482) (undo-tree-id44 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8483) (undo-tree-id45 . -1) 8484) nil (25279 31160 1052 828000) 0 nil])
([nil nil ((8482 . 8486)) nil (25279 31160 1047 729000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8484) (undo-tree-id42 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8485) (undo-tree-id43 . -1) 8486) nil (25279 31160 1044 866000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8482) (undo-tree-id40 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8483) (undo-tree-id41 . -1) 8484) nil (25279 31160 1039 348000) 0 nil])
([nil nil ((8482 . 8484)) nil (25279 31160 1034 180000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8482) (undo-tree-id38 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8483) (undo-tree-id39 . -1) 8484) nil (25279 31160 1031 247000) 0 nil])
([nil nil ((8482 . 8484)) nil (25279 31160 1025 799000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8482) (undo-tree-id36 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face)) . -8483) (undo-tree-id37 . -1) 8484) nil (25279 31160 1022 726000) 0 nil])
([nil nil ((8482 . 8496)) nil (25279 31160 1017 348000) 0 nil])
([nil nil ((8496 . 8499)) nil (25279 31160 1015 43000) 0 nil])
([nil nil ((8579 . 8582) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . -8579) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (#("(point-min)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 1 10 (ws-butler-chg chg fontified t face font-lock-constant-face) 10 11 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face))) . 8582) (undo-tree-id31 . -11) (undo-tree-id32 . 11) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -11)) nil (25279 31160 1011 830000) 0 nil])
([nil nil ((#("   " 0 1 (ws-butler-chg delete fontified nil) 1 3 (ws-butler-chg chg fontified nil)) . -8582) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 8582) (undo-tree-id26 . -1)) nil (25279 31160 998 909000) 0 nil])
([nil nil ((8579 . 8582) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . -8579) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (#("(point-max)" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-3-face)) 1 10 (ws-butler-chg chg fontified t face font-lock-constant-face) 10 11 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face))) . 8582) (undo-tree-id22 . 11) (undo-tree-id23 . -1) (undo-tree-id24 . 1) (undo-tree-id25 . -11)) nil (25279 31160 994 160000) 0 nil])
([nil nil ((#("   " 0 1 (ws-butler-chg delete fontified nil) 1 3 (ws-butler-chg chg fontified nil)) . -8582) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 8582) (undo-tree-id18 . -1)) nil (25279 31160 982 845000) 0 nil])
([nil nil ((#("q" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8628) (undo-tree-id17 . -1) 8629) nil (25279 31160 978 306000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8612) (undo-tree-id1 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8613) (undo-tree-id2 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8614) (undo-tree-id3 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8615) (undo-tree-id4 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8616) (undo-tree-id5 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8617) (undo-tree-id6 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8618) (undo-tree-id7 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8619) (undo-tree-id8 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8620) (undo-tree-id9 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8621) (undo-tree-id10 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8622) (undo-tree-id11 . -1) (#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8623) (undo-tree-id12 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8624) (undo-tree-id13 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8625) (undo-tree-id14 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8626) (undo-tree-id15 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8627) (undo-tree-id16 . -1) 8628) nil (25279 31160 970 832000) 0 nil])
([nil nil ((8612 . 8613)) nil (25279 31160 945 549000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -8612) (undo-tree-id0 . -1) 8613) nil (25279 31160 942 476000) 0 nil])
([nil nil ((8612 . 8627)) nil (25279 31162 594165 781000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8639 . 8640) (8627 . 8639)) ((#("uofc/sci-hub" 0 12 (ws-butler-chg chg fontified t face font-lock-string-face)) . 8627) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id89 . -12) (undo-tree-id91 . -12) (undo-tree-id93 . -12) (undo-tree-id95 . -12) (undo-tree-id97 . -12) (undo-tree-id99 . -12) (undo-tree-id101 . -12) (undo-tree-id103 . -12) (undo-tree-id105 . -12)) (25279 31163 778306 156000) 0 nil])
([nil nil ((8639 . 8643)) ((#("/sci" 0 4 (ws-butler-chg chg fontified t face font-lock-string-face)) . 8639) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id76 . -4) (undo-tree-id78 . -4) (undo-tree-id80 . -4) (undo-tree-id82 . -4) (undo-tree-id84 . -4)) (25279 31163 936863 568000) 0 nil])
([nil nil ((8643 . 8650)) ((#("_hub.py" 0 7 (ws-butler-chg chg fontified t face font-lock-string-face)) . 8643)) (25279 31164 101181 205000) 0 nil])
([nil nil ((8608 . 8611) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . -8608) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (#("\"/home/cdaniels/uofc/sci-hub/sci_hub.py\"" 0 16 (ws-butler-chg chg fontified t face font-lock-string-face) 16 28 (ws-butler-chg chg fontified t face font-lock-string-face) 28 32 (ws-butler-chg chg fontified t face font-lock-string-face) 32 39 (ws-butler-chg chg fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face)) . 8611) (undo-tree-id128 . -32) (undo-tree-id129 . -32) (undo-tree-id130 . -32) (undo-tree-id131 . -32) (undo-tree-id132 . -32)) nil (25279 31309 154651 664000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8650 . 8651) (nil fontified nil 8650 . 8651) (nil fontified nil 8643 . 8650) (nil fontified nil 8639 . 8643) (nil fontified nil 8627 . 8639) (nil fontified nil 8611 . 8627) (8611 . 8651)) nil (25279 31309 154636 857000) 0 nil])
([nil nil ((8438 . 8440)) nil (25279 31309 154633 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8593 . 8594) (nil fontified nil 8440 . 8594) (8440 . 8594)) nil (25279 31309 154630 780000) 0 nil])
([nil nil ((#("(defun download-pdf ()
  \"Takes as DOI and downloads the pdf'\"
  (interactive)
  (shell-command-on-region
   ;; beginning and end of buffer
   ;; command and parameters
   \"/home/cdaniels/uofc/sci-hub/sci_hub.py\"
   ;; output buffer
   (current-buffer)
   ;; replace?
   t
   ;; name of the error buffer
   \"*Tidy Error Buffer*\"
   ;; show error buffer?
   t))" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg delete fontified t face font-lock-function-name-face) 16 19 (ws-butler-chg chg fontified t face font-lock-function-name-face) 19 20 (ws-butler-chg delete fontified t) 20 21 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 22 23 (ws-butler-chg chg fontified t) 23 25 (ws-butler-chg chg fontified t) 25 60 (ws-butler-chg chg fontified t face font-lock-doc-face) 60 61 (ws-butler-chg delete fontified t face font-lock-doc-face) 61 62 (ws-butler-chg chg fontified t face font-lock-doc-face) 62 63 (ws-butler-chg chg fontified t) 63 65 (ws-butler-chg chg fontified t) 65 66 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 66 77 (ws-butler-chg chg fontified t face font-lock-keyword-face) 77 78 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 78 81 (ws-butler-chg chg fontified t) 81 82 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 82 105 (ws-butler-chg chg fontified t face font-lock-function-name-face) 105 109 (ws-butler-chg chg fontified t) 109 112 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 112 140 (ws-butler-chg chg fontified t face font-lock-comment-face) 140 143 (ws-butler-chg chg fontified t) 143 144 (ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 144 146 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 146 169 (ws-butler-chg chg fontified t face font-lock-comment-face) 169 172 (ws-butler-chg chg fontified t) 172 188 (ws-butler-chg chg fontified t face font-lock-string-face) 188 200 (ws-butler-chg chg fontified t face font-lock-string-face) 200 204 (ws-butler-chg chg fontified t face font-lock-string-face) 204 211 (ws-butler-chg chg fontified t face font-lock-string-face) 211 212 (ws-butler-chg chg rear-nonsticky t fontified t face font-lock-string-face) 212 213 (ws-butler-chg delete fontified t) 213 216 (ws-butler-chg chg fontified t) 216 219 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 219 233 (ws-butler-chg chg fontified t face font-lock-comment-face) 233 236 (ws-butler-chg chg fontified t) 236 237 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 237 251 (ws-butler-chg chg fontified t face font-lock-constant-face) 251 252 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 252 256 (ws-butler-chg chg fontified t) 256 259 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 259 268 (ws-butler-chg chg fontified t face font-lock-comment-face) 268 276 (ws-butler-chg chg fontified t) 276 279 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 279 304 (ws-butler-chg chg fontified t face font-lock-comment-face) 304 307 (ws-butler-chg chg fontified t) 307 328 (ws-butler-chg chg fontified t face font-lock-string-face) 328 332 (ws-butler-chg chg fontified t) 332 335 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 335 354 (ws-butler-chg chg fontified t face font-lock-comment-face) 354 358 (ws-butler-chg chg fontified t) 358 359 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 359 360 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 8595) (undo-tree-id109 . -23) (undo-tree-id110 . -169) (undo-tree-id111 . -22) (undo-tree-id112 . -232) (undo-tree-id113 . -232) (undo-tree-id114 . -169) (undo-tree-id115 . -169) (undo-tree-id116 . -169) (undo-tree-id117 . -172) (undo-tree-id118 . 360) (undo-tree-id119 . -1) (undo-tree-id120 . 1) (undo-tree-id121 . -360)) nil (25279 31309 154627 9000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 8595) (undo-tree-id108 . -1)) nil (25279 31309 154608 920000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 8595) (undo-tree-id107 . -1)) nil (25279 31309 154604 310000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 8595) (undo-tree-id106 . -1)) nil (25279 31309 154596 278000) 0 nil])
([nil nil ((apply -12 8440 8607 undo--wrap-and-run-primitive-undo 8440 8607 ((8541 . 8544) (8518 . 8521) (8475 . 8478) (8440 . 8443) 8595)) (t 25279 31309 182041 685000)) nil (25279 31511 496738 852000) 0 nil])
([nil nil ((apply 18 7955 8419 undo--wrap-and-run-primitive-undo 7955 8419 ((#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8302) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8256) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8201) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8135) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8063) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8037) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8010) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -7983) (#(";;" 0 2 (face font-lock-comment-delimiter-face fontified t)) . -7955) 8437)) (t 25279 31511 519410 82000)) nil (25280 18769 37288 869000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -8298) (undo-tree-id0 . -1) 8299 (t 25280 18769 59341 425000)) nil (25280 20485 576142 632000) 0 nil])
([nil nil ((8298 . 8299)) nil (25280 20485 576112 599000) 0 nil])
([nil nil ((apply -27 7955 8446 undo--wrap-and-run-primitive-undo 7955 8446 ((8326 . 8329) (8277 . 8280) (8219 . 8222) (8150 . 8153) (8075 . 8078) (8046 . 8049) (8016 . 8019) (7986 . 7989) (7955 . 7958) 8419)) (t 25280 20485 600715 263000)) nil (25280 21702 292259 469000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 8074) (undo-tree-id3 . -1)) nil (25280 21702 292256 326000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7954) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25280 21702 292249 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7246 . 7247) (nil fontified nil 7135 . 7247) (7135 . 7247) (t 25280 21702 316128 658000)) nil (25280 31922 848170 365000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -7171) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7172) (undo-tree-id55 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7173) (undo-tree-id56 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7174) (undo-tree-id57 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7175) (undo-tree-id58 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7176) (undo-tree-id59 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7177) (undo-tree-id60 . -1) 7178) nil (25280 31922 848165 615000) 0 nil])
([nil nil ((7171 . 7172)) nil (25280 31922 848153 44000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -7202) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7203) (undo-tree-id45 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7204) (undo-tree-id46 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7205) (undo-tree-id47 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7206) (undo-tree-id48 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7207) (undo-tree-id49 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7208) (undo-tree-id50 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7209) (undo-tree-id51 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7210) (undo-tree-id52 . -1) 7211) nil (25280 31922 848148 644000) 0 nil])
([nil nil ((7202 . 7203)) nil (25280 31922 848133 558000) 0 nil])
([nil nil ((#(" \"/path/to/bibtex-file-2.bib\"" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face) 2 29 (ws-butler-chg chg fontified t face font-lock-string-face)) . 7202)) nil (25280 31922 848131 43000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7176) (undo-tree-id38 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7177) (undo-tree-id39 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7178) (undo-tree-id40 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7179) (undo-tree-id41 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7180) (undo-tree-id42 . -1) 7181) nil (25280 31922 848127 411000) 0 nil])
([nil nil ((7176 . 7195)) nil (25280 31922 848118 472000) 0 nil])
([nil nil ((7195 . 7198)) nil (25280 31922 848116 167000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7197) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . -7198) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7199) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7200) (undo-tree-id20 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7201) (undo-tree-id21 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7202) (undo-tree-id22 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7203) (undo-tree-id23 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7204) (undo-tree-id24 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7205) (undo-tree-id25 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7206) (undo-tree-id26 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7207) (undo-tree-id27 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7208) (undo-tree-id28 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7209) (undo-tree-id29 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7210) (undo-tree-id30 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7211) (undo-tree-id31 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7212) (undo-tree-id32 . -1) (#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7213) (undo-tree-id33 . -1) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7214) (undo-tree-id34 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7215) (undo-tree-id35 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7216) (undo-tree-id36 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7217) (undo-tree-id37 . -1) 7218) nil (25280 31922 848108 624000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7190) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7191) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7192) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7193) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7194) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7195) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7196) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 7197) nil (25280 31922 848074 471000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7204 . 7205) (nil fontified nil 7190 . 7205) (7190 . 7205)) nil (25280 31922 848030 889000) 0 nil])
([nil nil ((7205 . 7206)) nil (25280 31922 848027 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7221 . 7222) (nil fontified nil 7206 . 7222) (7206 . 7222)) nil (25280 31922 848021 111000) 0 nil])
([nil nil ((7225 . 7226) (t 25280 31922 870997 248000)) nil (25280 32120 123429 254000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7299 . 7300) (nil fontified nil 7226 . 7300) (7226 . 7300)) nil (25280 32120 123426 600000) 0 nil])
([nil nil ((7300 . 7304)) nil (25280 32120 123423 527000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -7300) (undo-tree-id170 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -7301) (undo-tree-id171 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -7302) (undo-tree-id172 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -7303) (undo-tree-id173 . -1) 7304) nil (25280 32120 123420 244000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7283) (undo-tree-id156 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7284) (undo-tree-id157 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7285) (undo-tree-id158 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7286) (undo-tree-id159 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7287) (undo-tree-id160 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7288) (undo-tree-id161 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7289) (undo-tree-id162 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7290) (undo-tree-id163 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7291) (undo-tree-id164 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7292) (undo-tree-id165 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7293) (undo-tree-id166 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7294) (undo-tree-id167 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7295) (undo-tree-id168 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7296) (undo-tree-id169 . -1) 7297) nil (25280 32120 123409 558000) 0 nil])
([nil nil ((#("\"\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face)) . 7282) (undo-tree-id155 . -1) 7283) nil (25280 32120 123389 234000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7277) (undo-tree-id151 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7278) (undo-tree-id152 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7279) (undo-tree-id153 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7281) (undo-tree-id154 . -1) 7282) nil (25280 32120 123384 205000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7266) (undo-tree-id140 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7267) (undo-tree-id141 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7268) (undo-tree-id142 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7269) (undo-tree-id143 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7270) (undo-tree-id144 . -1) (#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7271) (undo-tree-id145 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7272) (undo-tree-id146 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7273) (undo-tree-id147 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7274) (undo-tree-id148 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7275) (undo-tree-id149 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7276) (undo-tree-id150 . -1) 7277) nil (25280 32120 123373 938000) 0 nil])
([nil nil ((#("/home/cdaniels/uofc/bibtex-lib/bibliography.bib" 0 15 (fontified t face font-lock-string-face) 15 29 (fontified t face font-lock-string-face) 29 30 (fontified t rear-nonsticky t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 46 (fontified t face font-lock-string-face) 46 47 (fontified t rear-nonsticky t face font-lock-string-face)) . 7175) (undo-tree-id137 . -47) (undo-tree-id138 . -15) (undo-tree-id139 . -31)) nil (25280 32120 123350 192000) 0 nil])
([nil nil ((nil fontified nil 7221 . 7222) (nil fontified nil 7206 . 7221) (nil fontified nil 7205 . 7206) (nil fontified nil 7204 . 7205) (nil fontified nil 7190 . 7204) (nil fontified nil 7175 . 7190) (7175 . 7222)) nil (25280 32120 123344 255000) 0 nil])
([nil nil ((nil fontified nil 7312 . 7313) (nil fontified nil 7297 . 7312) (nil fontified nil 7296 . 7297) (nil fontified nil 7295 . 7296) (nil fontified nil 7281 . 7295) (nil fontified nil 7266 . 7281) (7266 . 7313)) nil (25280 32120 123340 134000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7292) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7293) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7294) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("b" 0 1 (rear-nonsticky t ws-butler-chg chg fontified t face font-lock-string-face)) . -7295) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7296) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7297) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7298) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7299) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7300) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7301) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7302) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7303) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7304) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7305) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7306) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7307) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7308) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7309) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7310) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7311) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("b" 0 1 (rear-nonsticky t ws-butler-chg chg fontified t face font-lock-string-face)) . -7312) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 7313) nil (25280 32120 123330 147000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7286) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7287) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7288) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7289) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7290) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7291) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 7292) nil (25280 32120 123225 801000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7297 . 7298) (nil fontified nil 7286 . 7298) (7286 . 7298)) nil (25280 32120 123209 738000) 0 nil])
([nil nil ((7301 . 7302)) nil (25280 32120 123206 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7357 . 7358) (nil fontified nil 7302 . 7358) (7302 . 7358)) nil (25280 32120 123204 429000) 0 nil])
([nil nil ((#("/home/cdaniels/uofc/articles-lib" 0 15 (ws-butler-chg chg fontified t face font-lock-string-face) 15 20 (ws-butler-chg chg fontified t face font-lock-string-face) 20 31 (ws-butler-chg chg fontified t face font-lock-string-face) 31 32 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face)) . 7266) (undo-tree-id82 . -20)) nil (25280 32120 123201 147000) 0 nil])
([nil nil ((nil fontified nil 7297 . 7298) (nil fontified nil 7286 . 7297) (nil fontified nil 7281 . 7286) (nil fontified nil 7266 . 7281) (7266 . 7298)) nil (25280 32120 123197 306000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7338) (undo-tree-id64 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7339) (undo-tree-id65 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7340) (undo-tree-id66 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7341) (undo-tree-id67 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7342) (undo-tree-id68 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7343) (undo-tree-id69 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7344) (undo-tree-id70 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7345) (undo-tree-id71 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7346) (undo-tree-id72 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7347) (undo-tree-id73 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7348) (undo-tree-id74 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7349) (undo-tree-id75 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7350) (undo-tree-id76 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7351) (undo-tree-id77 . -1) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7352) (undo-tree-id78 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7353) (undo-tree-id79 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7354) (undo-tree-id80 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7355) (undo-tree-id81 . -1) 7356) nil (25280 32120 123189 762000) 0 nil])
([nil nil ((nil fontified nil 7369 . 7370) (nil fontified nil 7358 . 7369) (nil fontified nil 7353 . 7358) (nil fontified nil 7338 . 7353) (7338 . 7370)) nil (25280 32120 123162 733000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7367) (undo-tree-id61 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7368) (undo-tree-id62 . -1) (#("b" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t face font-lock-string-face)) . -7369) (undo-tree-id63 . -1) 7370) nil (25280 32120 123157 495000) 0 nil])
([nil nil ((7367 . 7372)) nil (25280 32120 123137 310000) 0 nil])
([nil nil ((7375 . 7377) (t 25280 32120 148475 122000)) nil (25280 33158 647287 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7383 . 7384) (nil fontified nil 7376 . 7384) (7376 . 7384)) nil (25280 33158 647284 910000) 0 nil])
([nil nil ((#("31597913" 0 7 (face highlight-numbers-number fontified t ws-butler-chg chg) 7 8 (face highlight-numbers-number rear-nonsticky t fontified t ws-butler-chg chg)) . 7376) (undo-tree-id2 . -8)) nil (25280 33158 647281 906000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7686 . 7687) (nil fontified nil 7376 . 7687) (7376 . 7687)) nil (25280 33158 647278 65000) 0 nil])
([nil nil ((#("helm" 0 4 (face font-lock-constant-face fontified t ws-butler-chg chg)) . -7386) (7390 . 7393)) nil (25280 33158 647275 62000) 0 nil])
([nil nil ((#("helm" 0 4 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -7431) (7435 . 7438)) nil (25280 33158 647272 408000) 0 nil])
([nil nil ((#("helm" 0 4 (fontified t ws-butler-chg chg)) . -7464) (7468 . 7471)) nil (25280 33158 647269 684000) 0 nil])
([nil nil ((#("helm" 0 4 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -7485) (7489 . 7492)) nil (25280 33158 647266 960000) 0 nil])
([nil nil ((#("helm" 0 4 (fontified t ws-butler-chg chg)) . -7509) (7513 . 7516)) nil (25280 33158 647264 376000) 0 nil])
([nil nil ((#("helm" 0 4 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -7530) (7534 . 7537)) nil (25280 33158 647261 652000) 0 nil])
([nil nil ((#("helm" 0 4 (fontified t ws-butler-chg chg)) . -7578) (7582 . 7585)) nil (25280 33158 647258 928000) 0 nil])
([nil nil ((#("helm" 0 4 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -7599) (7603 . 7606)) nil (25280 33158 647256 134000) 0 nil])
([nil nil ((#("helm" 0 4 (fontified t ws-butler-chg chg)) . -7634) (7638 . 7641)) nil (25280 33158 647253 410000) 0 nil])
([nil nil ((#("helm" 0 4 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . -7666) (7670 . 7673)) nil (25280 33158 647250 617000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 7451) (undo-tree-id1 . -1)) nil (25280 33158 647247 544000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 7398) (undo-tree-id0 . -1)) nil (25280 33158 647240 490000) 0 nil])
([nil nil ((7376 . 7377) (t 25280 33158 673856 861000)) nil (25280 33209 769997 811000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"<menu>\") 'ivy-command-prefix)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 15 (face font-lock-function-name-face fontified t) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 20 (face font-lock-function-name-face fontified t) 20 21 (fontified t) 21 29 (face font-lock-string-face fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (fontified t) 31 32 (face highlight-quoted-quote fontified t) 32 50 (face highlight-quoted-symbol fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7399) (undo-tree-id0 . 51) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -51) (undo-tree-id4 . -1) (t 25280 33209 795313 427000)) nil (25280 33236 381999 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7449 . 7450) (nil fontified nil 7449 . 7450) (nil fontified nil 7431 . 7449) (nil fontified nil 7430 . 7431) (nil fontified nil 7429 . 7430) (nil fontified nil 7428 . 7429) (nil fontified nil 7420 . 7428) (nil fontified nil 7419 . 7420) (nil fontified nil 7416 . 7419) (nil fontified nil 7415 . 7416) (nil fontified nil 7414 . 7415) (nil fontified nil 7400 . 7414) (nil fontified nil 7399 . 7400) (7399 . 7450)) nil (25280 33236 381966 656000) 0 nil])
([nil nil ((7399 . 7400)) nil (25280 33236 381957 646000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7376) (undo-tree-id1 . -1) 7377 (t 25280 33236 408071 847000)) nil (25280 33453 803692 948000) 0 nil])
([nil nil ((7376 . 7377)) nil (25280 33453 803688 478000) 0 nil])
([nil nil ((7134 . 7137)) nil (25280 33453 803685 964000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7481 . 7482) (nil fontified nil 7135 . 7482) (7135 . 7482)) nil (25280 33453 803683 100000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 7483) (undo-tree-id0 . -1)) nil (25280 33453 803677 94000) 0 nil])
([nil nil ((apply -12 7801 8039 undo--wrap-and-run-primitive-undo 7801 8039 ((7980 . 7983) (7921 . 7924) (7849 . 7852) (7801 . 7804) 8027)) (t 25280 33453 830329 485000)) nil (25280 33487 985782 942000) 0 nil])
([nil nil ((#(";(require 'ivy-config)" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 22 (fontified t face font-lock-comment-face)) . 7725) (undo-tree-id57 . 1) (undo-tree-id58 . -22) (undo-tree-id59 . 21) (undo-tree-id60 . -2) (t 25280 33488 11452 911000)) nil (25280 33796 398032 3000) 0 nil])
([nil nil ((7725 . 7765) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 7725) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1)) nil (25280 33796 398025 19000) 0 nil])
([nil nil ((7725 . 7765) (#("                                        " 0 40 (fontified nil ws-butler-chg chg)) . -7725) (undo-tree-id47 . -40) (undo-tree-id48 . -40) (undo-tree-id49 . -40) (#(";(global-set-key (kbd \"<menu>\") 'ivy-command-prefix)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 52 (fontified t face font-lock-comment-face)) . 7765) (undo-tree-id50 . 1) (undo-tree-id51 . -52) (undo-tree-id52 . 51) (undo-tree-id53 . -2)) nil (25280 33796 398018 314000) 0 nil])
([nil nil ((#("                                        " 0 40 (fontified nil ws-butler-chg chg)) . -7725) (undo-tree-id40 . -40) (undo-tree-id41 . -40) (undo-tree-id42 . -40) (undo-tree-id43 . -40) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 7765) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (25280 33796 398007 768000) 0 nil])
([nil nil ((#(";; (define-key ivy-command-map \"b\" 'ivy-bibtex)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 29 (fontified t face font-lock-comment-face) 29 47 (fontified t face font-lock-comment-face)) . 7725) (undo-tree-id36 . 1) (undo-tree-id37 . -47) (undo-tree-id38 . 44) (undo-tree-id39 . -4)) nil (25280 33796 397998 269000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7725) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1)) nil (25280 33796 397991 913000) 0 nil])
([nil nil ((#(";; (define-key ivy-command-map \"B\" 'ivy-bibtex-with-local-bibliography)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 71 (fontified t face font-lock-comment-face)) . 7725) (undo-tree-id29 . 1) (undo-tree-id30 . -71) (undo-tree-id31 . 68) (undo-tree-id32 . -4)) nil (25280 33796 397986 186000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7725) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1)) nil (25280 33796 397979 621000) 0 nil])
([nil nil ((#(";; (define-key ivy-command-map \"n\" 'ivy-bibtex-with-notes)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 58 (fontified t face font-lock-comment-face)) . 7725) (undo-tree-id22 . 1) (undo-tree-id23 . -58) (undo-tree-id24 . 55) (undo-tree-id25 . -4)) nil (25280 33796 397973 684000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7725) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25280 33796 397966 909000) 0 nil])
([nil nil ((#(";; (define-key ivy-command-map (kbd \"<menu>\") 'ivy-resume)" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 58 (fontified t face font-lock-comment-face)) . 7725) (undo-tree-id15 . 1) (undo-tree-id16 . -58) (undo-tree-id17 . 55) (undo-tree-id18 . -4)) nil (25280 33796 397961 43000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7724) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) nil (25280 33796 397953 360000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7724) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25280 33796 397934 572000) 0 nil])
([nil nil ((#("(autoload 'ivy-bibtex \"ivy-bibtex\" \"\" t)
;; ivy-bibtex requires ivy's `ivy--regex-ignore-order` regex builder, which
;; ignores the order of regexp tokens when searching for matching candidates.
;; Add something like this to your init file:
(setq ivy-re-builders-alist
      '((ivy-bibtex . ivy--regex-ignore-order)
        (t . ivy--regex-plus)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (face font-lock-constant-face fontified t) 9 10 (fontified t) 10 11 (face highlight-quoted-quote fontified t) 11 21 (face highlight-quoted-symbol fontified t) 21 22 (fontified t) 22 34 (face font-lock-string-face fontified t) 34 35 (fontified t) 35 37 (face font-lock-doc-face fontified t) 37 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (fontified t) 41 44 (face font-lock-comment-delimiter-face fontified t) 44 117 (face font-lock-comment-face fontified t) 117 120 (face font-lock-comment-delimiter-face fontified t) 120 161 (face font-lock-comment-face fontified t) 161 195 (face font-lock-comment-face fontified t) 195 198 (face font-lock-comment-delimiter-face fontified t) 198 241 (face font-lock-comment-face fontified t) 241 242 (face (rainbow-delimiters-depth-1-face) fontified t) 242 246 (face font-lock-keyword-face fontified t) 246 247 (fontified t) 247 268 (face font-lock-variable-name-face fontified t) 268 275 (fontified t) 275 276 (face highlight-quoted-quote fontified t) 276 277 (face (rainbow-delimiters-depth-2-face) fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) fontified t) 278 288 (face font-lock-function-name-face fontified t) 288 314 (fontified t) 314 315 (face (rainbow-delimiters-depth-3-face) fontified t) 315 324 (fontified t) 324 325 (face (rainbow-delimiters-depth-3-face) fontified t) 325 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-3-face) fontified t) 345 346 (face (rainbow-delimiters-depth-2-face) fontified t) 346 347 (face (rainbow-delimiters-depth-1-face) fontified t) 347 348 (fontified t)) . -7135) (undo-tree-id0 . -348) (undo-tree-id1 . -348) (undo-tree-id2 . -316) (undo-tree-id3 . -316) (undo-tree-id4 . -269) (undo-tree-id5 . -269) (undo-tree-id6 . -241) (undo-tree-id7 . -241) (undo-tree-id8 . -195) (undo-tree-id9 . -195) (undo-tree-id10 . -117) (undo-tree-id11 . -117) (undo-tree-id12 . -41) (undo-tree-id13 . -41) (undo-tree-id14 . -348) (undo-tree-id15 . -348) (undo-tree-id16 . -348) 7483 (t 25280 33796 425269 419000)) nil (25280 34522 25549 928000) 0 nil])
([nil nil ((7136 . 7137)) nil (25280 34522 25490 142000) 0 nil])
([nil nil ((7228 . 7229)) nil (25280 34522 25487 279000) 0 nil])
([nil nil ((7305 . 7306)) nil (25280 34522 25480 923000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7136) (undo-tree-id16 . -1) 7137 (t 25280 34522 51145 712000)) nil (25280 35138 249602 265000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7227) (undo-tree-id15 . -1) 7228) nil (25280 35138 249597 655000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7303) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 7304) nil (25280 35138 249593 255000) 0 nil])
([nil nil ((7134 . 7136)) nil (25280 35138 249586 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7433 . 7434) (nil fontified nil 7136 . 7434) (7136 . 7434)) nil (25280 35138 249584 385000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 7168) (undo-tree-id11 . -1)) nil (25280 35138 249581 102000) 0 nil])
([nil nil ((7432 . 7441)) nil (25280 35147 365140 817000) 0 nil])
([nil nil ((#("(use-package bibtex-completion)" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7136) (undo-tree-id140 . -31) (undo-tree-id141 . 31) (undo-tree-id142 . -1) (undo-tree-id143 . 1) (undo-tree-id144 . -31)) nil (25280 35426 573791 775000) 0 nil] [nil nil ((7371 . 7373) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . -7371) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (#("(setq bibtex-actions-bibliography '(\"~/bib/references.bib\")
        )" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 36 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 36 58 (ws-butler-chg chg fontified t face font-lock-string-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 59 68 (ws-butler-chg chg fontified t) 68 69 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 7373) (undo-tree-id30 . -60) (undo-tree-id31 . -6) (undo-tree-id32 . 69) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -69)) ((7373 . 7442) (nil ws-butler-chg delete 7373 . 7374) (7371 . 7373) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 7371) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2)) (25280 35145 568906 744000) 0 nil] [nil nil ((7371 . 7373) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . -7371) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (#("(setq bibtex-actions-bibliography '(\"~/bib/references.bib\")
        )" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 36 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 36 58 (ws-butler-chg chg fontified t face font-lock-string-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 59 68 (ws-butler-chg chg fontified t) 68 69 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 7373) (undo-tree-id5 . -60) (undo-tree-id6 . -6) (undo-tree-id7 . 69) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -69)) ((7373 . 7442) (nil ws-butler-chg delete 7373 . 7374) (7371 . 7373) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 7371) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2)) (25280 35138 249570 346000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id139 . -1)) nil (25280 35426 573783 813000) 0 nil])
nil
nil
([nil nil ((#("(use-package bibtex-actions" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 27 (ws-butler-chg chg fontified t)) . 7136) (undo-tree-id137 . 27) (undo-tree-id138 . -1)) nil (25280 35426 573779 552000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7136) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7136) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id136 . -1)) nil (25280 35426 573774 174000) 0 nil])
([nil nil ((#(":bind ((\"C-c b\" . bibtex-actions-insert-citation)
         :map minibuffer-local-map
         (\"M-b\" . bibtex-actions-insert-preset))" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 5 (ws-butler-chg chg fontified t face font-lock-builtin-face) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 8 15 (ws-butler-chg chg fontified t face font-lock-string-face) 15 48 (ws-butler-chg chg fontified t) 48 49 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (ws-butler-chg chg fontified t) 50 59 (ws-butler-chg chg fontified t) 59 62 (ws-butler-chg chg fontified t face font-lock-builtin-face) 62 63 (ws-butler-chg chg fontified t face font-lock-builtin-face) 63 64 (ws-butler-chg chg fontified t) 64 84 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 84 85 (ws-butler-chg chg fontified t) 85 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 95 100 (ws-butler-chg chg fontified t face font-lock-string-face) 100 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 132 133 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . 7136) (undo-tree-id131 . -50) (undo-tree-id132 . 85) (undo-tree-id133 . -49) (undo-tree-id134 . 126) (undo-tree-id135 . -8)) nil (25280 35426 573769 635000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7136) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7136) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id130 . -1)) nil (25280 35426 573761 114000) 0 nil])
([nil nil ((#(":after (bibtex-completion)" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 6 (ws-butler-chg chg fontified t face font-lock-builtin-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 8 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7136) (undo-tree-id126 . 1) (undo-tree-id127 . -26) (undo-tree-id128 . 19) (undo-tree-id129 . -8)) nil (25280 35426 573756 574000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7136) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7136) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id125 . -1)) nil (25280 35426 573747 844000) 0 nil])
([nil nil ((#(":config" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 7 (ws-butler-chg chg fontified t face font-lock-builtin-face)) . 7136)) nil (25280 35426 573743 374000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7136) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7136) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1)) nil (25280 35426 573739 742000) 0 nil])
([nil nil ((#("(setq bibtex-actions-bibliography '(\"~/bib/references.bib\")
        )" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 36 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 36 58 (ws-butler-chg chg fontified t face font-lock-string-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 59 60 (ws-butler-chg chg fontified t) 60 68 (ws-butler-chg chg fontified t) 68 69 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 7136) (undo-tree-id111 . -60) (undo-tree-id112 . 69) (undo-tree-id113 . -1) (undo-tree-id114 . 1) (undo-tree-id115 . -69)) nil (25280 35426 573726 891000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7136) (undo-tree-id110 . -1)) nil (25280 35426 573719 138000) 0 nil])
([nil nil ((7136 . 7137)) nil (25280 35426 573715 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7433 . 7434) (nil fontified nil 7136 . 7434) (7136 . 7434)) nil (25280 35426 573712 992000) 0 nil])
([nil nil ((#("(use-package bibtex-actions" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 27 (ws-butler-chg chg fontified t)) . 7169) (undo-tree-id107 . -27) (undo-tree-id108 . 27) (undo-tree-id109 . -1)) nil (25280 35426 573709 290000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id106 . -1)) nil (25280 35426 573702 795000) 0 nil])
([nil nil ((#(":bind ((\"C-c b\" . bibtex-actions-insert-citation)
         :map minibuffer-local-map
         (\"M-b\" . bibtex-actions-insert-preset))" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 5 (ws-butler-chg chg fontified t face font-lock-builtin-face) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 8 15 (ws-butler-chg chg fontified t face font-lock-string-face) 15 48 (ws-butler-chg chg fontified t) 48 49 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (ws-butler-chg chg fontified t) 50 59 (ws-butler-chg chg fontified t) 59 63 (ws-butler-chg chg fontified t face font-lock-builtin-face) 63 64 (ws-butler-chg chg fontified t) 64 84 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 84 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 95 100 (ws-butler-chg chg fontified t face font-lock-string-face) 100 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 132 133 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . 7169) (undo-tree-id101 . -50) (undo-tree-id102 . 85) (undo-tree-id103 . -49) (undo-tree-id104 . 126) (undo-tree-id105 . -8)) nil (25280 35426 573698 395000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id100 . -1)) nil (25280 35426 573689 176000) 0 nil])
([nil nil ((#(":after (bibtex-completion)" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 6 (ws-butler-chg chg fontified t face font-lock-builtin-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 8 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7169) (undo-tree-id96 . 1) (undo-tree-id97 . -26) (undo-tree-id98 . 19) (undo-tree-id99 . -8)) nil (25280 35426 573684 426000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id95 . -1)) nil (25280 35426 573669 61000) 0 nil])
([nil nil ((#(":config" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 7 (ws-butler-chg chg fontified t face font-lock-builtin-face)) . 7169)) nil (25280 35426 573664 661000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id94 . -1)) nil (25280 35426 573661 727000) 0 nil])
([nil nil ((#("(setq bibtex-actions-bibliography '(\"~/bib/references.bib\"))" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 36 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 36 58 (ws-butler-chg chg fontified t face font-lock-string-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 59 60 (ws-butler-chg chg fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 7169) (undo-tree-id90 . 60) (undo-tree-id91 . -1) (undo-tree-id92 . 1) (undo-tree-id93 . -60)) nil (25280 35426 573656 978000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7169) (undo-tree-id89 . -1)) nil (25280 35426 573649 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7432 . 7433) (nil fontified nil 7168 . 7433) (7168 . 7433)) nil (25280 35426 573645 593000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -7433) (7433 . 7434)) nil (25280 35426 573641 263000) 0 nil])
([nil nil ((7167 . 7168)) nil (25280 35426 573636 165000) 0 nil])
([nil nil ((#("(use-package bibtex-actions" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 27 (ws-butler-chg chg fontified t)) . 7169) (undo-tree-id87 . 27) (undo-tree-id88 . -1)) nil (25280 35426 573633 301000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id86 . -1)) nil (25280 35426 573628 133000) 0 nil])
([nil nil ((#(":bind ((\"C-c b\" . bibtex-actions-insert-citation)
         :map minibuffer-local-map
         (\"M-b\" . bibtex-actions-insert-preset))" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 5 (ws-butler-chg chg fontified t face font-lock-builtin-face) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 8 15 (ws-butler-chg chg fontified t face font-lock-string-face) 15 48 (ws-butler-chg chg fontified t) 48 49 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (ws-butler-chg chg fontified t) 50 59 (ws-butler-chg chg fontified t) 59 63 (ws-butler-chg chg fontified t face font-lock-builtin-face) 63 64 (ws-butler-chg chg fontified t) 64 84 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 84 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 95 100 (ws-butler-chg chg fontified t face font-lock-string-face) 100 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face)) 132 133 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . 7169) (undo-tree-id81 . -50) (undo-tree-id82 . 85) (undo-tree-id83 . -49) (undo-tree-id84 . 126) (undo-tree-id85 . -8)) nil (25280 35426 573623 383000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id80 . -1)) nil (25280 35426 573615 72000) 0 nil])
([nil nil ((#(":after (bibtex-completion)" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 6 (ws-butler-chg chg fontified t face font-lock-builtin-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 8 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7169) (undo-tree-id76 . 1) (undo-tree-id77 . -26) (undo-tree-id78 . 19) (undo-tree-id79 . -8)) nil (25280 35426 573610 672000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id75 . -1)) nil (25280 35426 573603 199000) 0 nil])
([nil nil ((#(":config" 0 1 (ws-butler-chg delete fontified t face font-lock-builtin-face) 1 7 (ws-butler-chg chg fontified t face font-lock-builtin-face)) . 7169)) nil (25280 35426 573598 938000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified nil)) . -7169) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 7169) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7169) (undo-tree-id74 . -1)) nil (25280 35426 573595 865000) 0 nil])
([nil nil ((#("(setq bibtex-actions-bibliography '(\"~/bib/references.bib\"))" 0 1 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t face highlight-quoted-quote) 35 36 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 36 58 (ws-butler-chg chg fontified t face font-lock-string-face) 58 59 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 59 60 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7169) (undo-tree-id69 . -60) (undo-tree-id70 . 60) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -60)) nil (25280 35426 573590 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7432 . 7433) (nil fontified nil 7168 . 7433) (7168 . 7433)) nil (25280 35426 573583 154000) 0 nil])
([nil nil ((#("(use-package bibtex-actions" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 27 (ws-butler-chg chg fontified t)) . 7168) (undo-tree-id66 . -27) (undo-tree-id67 . 27) (undo-tree-id68 . -1)) nil (25280 35426 573579 592000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id65 . -1)) nil (25280 35426 573573 446000) 0 nil])
([nil nil ((#("  :bind ((\"C-c b\" . bibtex-actions-insert-citation)" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 7 (ws-butler-chg chg fontified t face font-lock-builtin-face) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 9 10 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 10 17 (ws-butler-chg chg fontified t face font-lock-string-face) 17 50 (ws-butler-chg chg fontified t) 50 51 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . 7168) (undo-tree-id61 . 1) (undo-tree-id62 . -51) (undo-tree-id63 . 42) (undo-tree-id64 . -10)) nil (25280 35426 573566 671000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id60 . -1)) nil (25280 35426 573557 871000) 0 nil])
([nil nil ((#("         :map minibuffer-local-map" 0 1 (ws-butler-chg delete fontified t) 1 9 (ws-butler-chg chg fontified t) 9 13 (ws-butler-chg chg fontified t face font-lock-builtin-face) 13 14 (ws-butler-chg chg fontified t) 14 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 7168)) nil (25280 35426 573554 29000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id59 . -1)) nil (25280 35426 573551 445000) 0 nil])
([nil nil ((#("         (\"M-b\" . bibtex-actions-insert-preset))" 0 1 (ws-butler-chg delete fontified t) 1 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 10 15 (ws-butler-chg chg fontified t face font-lock-string-face) 15 46 (ws-butler-chg chg fontified t) 46 47 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (ws-butler-chg chg fontified t face (rainbow-delimiters-unmatched-face))) . 7168) (undo-tree-id55 . 39) (undo-tree-id56 . -10) (undo-tree-id57 . 2) (undo-tree-id58 . -47)) nil (25280 35426 573547 324000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id54 . -1)) nil (25280 35426 573540 270000) 0 nil])
([nil nil ((#("  :after (bibtex-completion)" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 8 (ws-butler-chg chg fontified t face font-lock-builtin-face) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 10 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7168) (undo-tree-id50 . 1) (undo-tree-id51 . -28) (undo-tree-id52 . 19) (undo-tree-id53 . -10)) nil (25280 35426 573535 940000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id49 . -1)) nil (25280 35426 573528 327000) 0 nil])
([nil nil ((#("  :config" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 9 (ws-butler-chg chg fontified t face font-lock-builtin-face)) . 7168)) nil (25280 35426 573524 206000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7168) (undo-tree-id48 . -1)) nil (25280 35426 573521 343000) 0 nil])
([nil nil ((#("  (setq bibtex-actions-bibliography '(\"~/bib/references.bib\"))" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 3 7 (ws-butler-chg chg fontified t face font-lock-keyword-face) 7 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t face highlight-quoted-quote) 37 38 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 38 60 (ws-butler-chg chg fontified t face font-lock-string-face) 60 61 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 61 62 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7168) (undo-tree-id44 . 60) (undo-tree-id45 . -3) (undo-tree-id46 . 1) (undo-tree-id47 . -62)) nil (25280 35426 573517 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7369 . 7370) (nil fontified nil 7168 . 7370) (7168 . 7370)) nil (25280 35426 573509 539000) 0 nil])
([nil nil ((7370 . 7371)) nil (25280 35426 573506 816000) 0 nil])
([nil nil ((7370 . 7373)) nil (25280 35426 573504 301000) 0 nil])
([nil nil ((7372 . 7374) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 7371) (7371 . 7373) (7371 . 7372) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 7371) (undo-tree-id43 . -2) 7373) nil (25280 35426 573500 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7430 . 7431) (nil fontified nil 7371 . 7431) (7371 . 7431)) nil (25280 35426 573495 222000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . -7370) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 7371) nil (25280 35426 573491 241000) 0 nil])
([nil nil ((7370 . 7371)) nil (25280 35426 573463 303000) 0 nil])
([nil nil ((7341 . 7342)) nil (25280 35426 573456 808000) 0 nil])
([nil nil ((#("(use-package bibtex-completion)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7136) (undo-tree-id56 . -3) (undo-tree-id57 . 31) (undo-tree-id58 . -1) (undo-tree-id59 . 1) (undo-tree-id60 . -31) (t 25280 35426 601652 975000)) nil (25280 36895 605059 625000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1)) nil (25280 36895 605051 593000) 0 nil])
([nil nil ((#("(use-package bibtex-actions
  :bind ((\"C-c b\" . bibtex-actions-insert-citation)
         :map minibuffer-local-map
         (\"M-b\" . bibtex-actions-insert-preset))
  :after  (bibtex-completion)
  :config (setq bibtex-actions-bibliography '(\"~/bib/references.bib\"))
  )" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 28 (fontified t) 28 30 (fontified t) 30 35 (face font-lock-builtin-face fontified t) 35 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 38 (face (rainbow-delimiters-depth-3-face) fontified t) 38 45 (face font-lock-string-face fontified t) 45 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-3-face) fontified t) 79 80 (fontified t) 80 89 (fontified t) 89 93 (face font-lock-builtin-face fontified t) 93 94 (fontified t) 94 114 (face font-lock-variable-name-face fontified t) 114 115 (fontified t) 115 124 (fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) fontified t) 125 130 (face font-lock-string-face fontified t) 130 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-3-face) fontified t) 162 163 (face (rainbow-delimiters-depth-2-face) fontified t) 163 164 (fontified t) 164 166 (fontified t) 166 172 (face font-lock-builtin-face fontified t) 172 174 (fontified t) 174 175 (face (rainbow-delimiters-depth-2-face) fontified t) 175 192 (fontified t) 192 193 (face (rainbow-delimiters-depth-2-face) fontified t) 193 196 (fontified t) 196 203 (face font-lock-builtin-face fontified t) 203 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-2-face) fontified t) 205 209 (face font-lock-keyword-face fontified t) 209 238 (fontified t) 238 239 (face highlight-quoted-quote fontified t) 239 240 (face (rainbow-delimiters-depth-3-face) fontified t) 240 262 (face font-lock-string-face fontified t) 262 263 (face (rainbow-delimiters-depth-3-face) fontified t) 263 264 (face (rainbow-delimiters-depth-2-face) fontified t) 264 267 (fontified t) 267 268 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7136) (undo-tree-id33 . -174) (undo-tree-id34 . -174) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -265) (undo-tree-id38 . -265) (undo-tree-id39 . -194) (undo-tree-id40 . -194) (undo-tree-id41 . -164) (undo-tree-id42 . -164) (undo-tree-id43 . -115) (undo-tree-id44 . -115) (undo-tree-id45 . -80) (undo-tree-id46 . -80) (undo-tree-id47 . -28) (undo-tree-id48 . -28) (undo-tree-id49 . 268) (undo-tree-id50 . -1) (undo-tree-id51 . 1) (undo-tree-id52 . -268)) nil (25280 36895 605045 28000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (25280 36895 605022 678000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7136) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (25280 36895 605016 462000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7135) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (25280 36895 605006 754000) 0 nil])
([nil nil ((7134 . 7136) (t 25280 36895 632129 464000)) nil (25280 37341 311999 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7331 . 7332) (nil fontified nil 7136 . 7332) (7136 . 7332)) nil (25280 37341 311996 568000) 0 nil])
([nil nil ((#("\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"" 0 49 (fontified t face font-lock-string-face)) . 7373)) nil (25280 37341 311993 425000) 0 nil])
([nil nil ((#("~" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7308) (undo-tree-id19 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7309) (undo-tree-id20 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7310) (undo-tree-id21 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7311) (undo-tree-id22 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7312) (undo-tree-id23 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7313) (undo-tree-id24 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7314) (undo-tree-id25 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7315) (undo-tree-id26 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7316) (undo-tree-id27 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7317) (undo-tree-id28 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7318) (undo-tree-id29 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7319) (undo-tree-id30 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7320) (undo-tree-id31 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7321) (undo-tree-id32 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7322) (undo-tree-id33 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7323) (undo-tree-id34 . -1) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7324) (undo-tree-id35 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7325) (undo-tree-id36 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7326) (undo-tree-id37 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7327) (undo-tree-id38 . -1) 7328) nil (25280 37341 311986 301000) 0 nil])
([nil nil ((#("\"\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face)) . 7307) (undo-tree-id18 . -1) 7308) nil (25280 37341 311957 386000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7355 . 7356) (nil fontified nil 7307 . 7356) (7307 . 7356)) nil (25280 37341 311953 475000) 0 nil])
([nil nil ((7357 . 7380)) nil (25280 37341 311950 542000) 0 nil])
([nil nil ((7359 . 7381) (#("                      " 0 22 (ws-butler-chg chg fontified nil)) . 7358) (7358 . 7380) (7358 . 7359) (#("                      " 0 22 (ws-butler-chg chg fontified t)) . 7358) (undo-tree-id17 . -22) 7380) nil (25280 37341 311947 469000) 0 nil])
([nil nil ((7358 . 7380) (#("                      " 0 1 (ws-butler-chg delete fontified nil) 1 22 (ws-butler-chg chg fontified nil)) . 7358) (#("
" 0 1 (ws-butler-chg delete fontified t)) . 7358) (undo-tree-id16 . -1)) nil (25280 37341 311941 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7423 . 7424) (nil fontified nil 7423 . 7424) (7423 . 7424)) nil (25280 37341 311937 760000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -7423) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 7424) nil (25280 37341 311934 338000) 0 nil])
([nil nil ((#("\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"" 0 48 (ws-butler-chg chg fontified t face font-lock-string-face) 48 49 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face)) . 7307)) nil (25280 37341 311928 122000) 0 nil])
([nil nil ((nil fontified nil 7355 . 7356) (nil fontified nil 7307 . 7355) (7307 . 7356)) nil (25280 37341 311925 538000) 0 nil])
([nil nil ((nil fontified nil 7471 . 7472) (nil fontified nil 7423 . 7471) (7423 . 7472)) nil (25280 37349 118915 748000) 0 nil])
([nil nil ((apply -9 7384 7632 undo--wrap-and-run-primitive-undo 7384 7632 ((7557 . 7560) (7478 . 7481) (7384 . 7387) 7623))) nil (25280 37365 555505 769000) 0 nil] [nil nil ((#("(setq bibtex-completion-bibliography '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"))
(setq bibtex-completion-library-path '(\"/home/cdaniels/uofc/articles-lib\"))
(setq bibtex-completion-notes-path \"/home/cdaniels/uofc/articles-notes\")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 37 (fontified t) 37 38 (fontified t face highlight-quoted-quote) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 87 (ws-butler-chg chg fontified t face font-lock-string-face) 87 88 (ws-butler-chg chg rear-nonsticky t fontified t face font-lock-string-face) 88 89 (ws-butler-chg delete fontified t face (rainbow-delimiters-depth-2-face)) 89 90 (fontified t face (rainbow-delimiters-depth-1-face)) 90 91 (fontified t) 91 92 (fontified t face (rainbow-delimiters-depth-1-face)) 92 96 (fontified t face font-lock-keyword-face) 96 128 (fontified t) 128 129 (fontified t face highlight-quoted-quote) 129 130 (fontified t face (rainbow-delimiters-depth-2-face)) 130 164 (fontified t face font-lock-string-face) 164 165 (fontified t face (rainbow-delimiters-depth-2-face)) 165 166 (fontified t face (rainbow-delimiters-depth-1-face)) 166 167 (fontified t) 167 168 (fontified t face (rainbow-delimiters-depth-1-face)) 168 172 (fontified t face font-lock-keyword-face) 172 202 (fontified t) 202 238 (fontified t face font-lock-string-face) 238 239 (fontified t face (rainbow-delimiters-depth-1-face))) . -7384) (undo-tree-id0 . -239) (undo-tree-id1 . -167) (undo-tree-id2 . -167) (undo-tree-id3 . -91) (undo-tree-id4 . -91) (undo-tree-id5 . -167) (undo-tree-id6 . -39) (undo-tree-id7 . -39) (undo-tree-id8 . -239) (undo-tree-id9 . 1) (undo-tree-id10 . -239) (undo-tree-id11 . 72) (undo-tree-id12 . -168) 7551) ((nil ws-butler-chg delete 7623 . 7624) (7384 . 7623)) (25280 37343 608591 536000) 0 nil])
([nil nil ((#("citar-bibliography '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\")" 0 19 (fontified t) 19 20 (face highlight-quoted-quote fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) fontified t) 21 39 (face font-lock-string-face fontified t) 39 65 (face font-lock-string-face fontified t) 65 70 (face font-lock-string-face fontified t) 70 71 (face (rainbow-delimiters-depth-3-face) fontified t)) . 7286) (t 25280 37365 585178 378000)) nil (25280 39027 697475 911000) 0 nil])
([nil nil ((7384 . 7385)) ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 7384) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) (25280 37341 311877 626000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7356 . 7357) (nil fontified nil 7356 . 7357) (nil fontified nil 7351 . 7356) (nil fontified nil 7325 . 7351) (nil fontified nil 7307 . 7325) (nil fontified nil 7306 . 7307) (nil fontified nil 7305 . 7306) (nil fontified nil 7286 . 7305) (7286 . 7357)) nil (25280 39027 697472 768000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7453 . 7454) (nil fontified nil 7453 . 7454) (nil fontified nil 7448 . 7453) (nil fontified nil 7422 . 7448) (nil fontified nil 7404 . 7422) (nil fontified nil 7403 . 7404) (nil fontified nil 7402 . 7403) (nil fontified nil 7383 . 7402) (7383 . 7454)) nil (25280 39027 697468 229000) 0 nil])
([nil nil ((7383 . 7384) (7454 . 7455)) nil (25280 39027 697463 689000) 0 nil])
([nil nil ((7384 . 7387)) nil (25280 39027 697460 476000) 0 nil])
([nil nil ((7387 . 7389)) nil (25280 39027 697454 190000) 0 nil])
([nil nil ((7103 . 7105) (t 25280 39027 726627 170000)) nil (25280 39279 671662 769000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -7319) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7320) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("e" 0 1 (fontified nil face font-lock-string-face)) . -7321) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7322) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -7323) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7324) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -7325) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7326) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -7327) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7328) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7329) (undo-tree-id38 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7330) (undo-tree-id39 . -1) (#("i" 0 1 (fontified nil face font-lock-string-face)) . -7331) (undo-tree-id40 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7332) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -7333) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7334) (undo-tree-id43 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -7335) (undo-tree-id44 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7336) (undo-tree-id45 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7337) (undo-tree-id46 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7338) (undo-tree-id47 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7339) (undo-tree-id48 . -1) 7340) nil (25280 39279 671654 528000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -7310) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7311) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7312) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -7313) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7314) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7315) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7316) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -7317) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -7318) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 7319) nil (25280 39282 34976 442000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil face font-lock-string-face)) . -7392) (undo-tree-id115 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7393) (undo-tree-id116 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7394) (undo-tree-id117 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7395) (undo-tree-id118 . -1) (#("s" 0 1 (fontified nil face font-lock-string-face)) . -7396) (undo-tree-id119 . -1) (#("/" 0 1 (fontified nil face font-lock-string-face)) . -7397) (undo-tree-id120 . -1) (#("u" 0 1 (fontified nil face font-lock-string-face)) . -7398) (undo-tree-id121 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7399) (undo-tree-id122 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -7400) (undo-tree-id123 . -1) (#("c" 0 1 (fontified nil face font-lock-string-face)) . -7401) (undo-tree-id124 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -7402) (undo-tree-id125 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7403) (undo-tree-id126 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7404) (undo-tree-id127 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7405) (undo-tree-id128 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -7406) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -7407) (undo-tree-id130 . -1) (#("x" 0 1 (fontified nil face font-lock-string-face)) . -7408) (undo-tree-id131 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -7409) (undo-tree-id132 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7410) (undo-tree-id133 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7411) (undo-tree-id134 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7412) (undo-tree-id135 . -1) 7413) nil (25280 39380 502642 225000) 0 nil] [nil nil ((nil rear-nonsticky nil 7380 . 7381) (nil fontified nil 7310 . 7381) (7310 . 7381)) ((#("citar-bibliography '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\")" 0 22 (ws-butler-chg chg fontified nil face font-lock-string-face) 22 41 (ws-butler-chg chg fontified nil) 41 69 (ws-butler-chg chg fontified nil) 69 70 (ws-butler-chg chg fontified nil face font-lock-string-face) 70 71 (ws-butler-chg chg fontified nil rear-nonsticky nil face font-lock-string-face)) . 7310) (undo-tree-id49 . -71) (nil rear-nonsticky t 7380 . 7381)) (25280 39279 671553 395000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -7383) (undo-tree-id106 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7384) (undo-tree-id107 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7385) (undo-tree-id108 . -1) (#("m" 0 1 (fontified nil face font-lock-string-face)) . -7386) (undo-tree-id109 . -1) (#("e" 0 1 (fontified nil face font-lock-string-face)) . -7387) (undo-tree-id110 . -1) (#("/" 0 1 (fontified nil face font-lock-string-face)) . -7388) (undo-tree-id111 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -7389) (undo-tree-id112 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -7390) (undo-tree-id113 . -1) (#("a" 0 1 (fontified nil face font-lock-string-face)) . -7391) (undo-tree-id114 . -1) 7392) nil (25280 39380 502611 564000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7412 . 7413) (nil fontified nil 7383 . 7413) (7383 . 7413)) nil (25280 39380 502597 595000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -7429) (undo-tree-id105 . -1) 7430) nil (25280 39380 502594 173000) 0 nil])
([nil nil ((7429 . 7435)) nil (25280 39380 502590 331000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -7414) (undo-tree-id84 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7415) (undo-tree-id85 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7416) (undo-tree-id86 . -1) (#("l" 0 1 (fontified nil face font-lock-string-face)) . -7417) (undo-tree-id87 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7418) (undo-tree-id88 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7419) (undo-tree-id89 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -7420) (undo-tree-id90 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -7421) (undo-tree-id91 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -7422) (undo-tree-id92 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -7423) (undo-tree-id93 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7424) (undo-tree-id94 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -7425) (undo-tree-id95 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -7426) (undo-tree-id96 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7427) (undo-tree-id97 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7428) (undo-tree-id98 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7429) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7430) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7431) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7432) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7433) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7434) (undo-tree-id104 . -1) 7435) nil (25280 39380 502583 137000) 0 nil])
([nil nil ((7414 . 7417)) nil (25280 39380 502546 51000) 0 nil])
([nil nil ((7417 . 7420)) nil (25280 39380 502543 606000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7414) (undo-tree-id78 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7415) (undo-tree-id79 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7416) (undo-tree-id80 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7417) (undo-tree-id81 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7418) (undo-tree-id82 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -7419) (undo-tree-id83 . -1) 7420) nil (25280 39380 502539 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7430 . 7431) (nil fontified nil 7414 . 7431) (7414 . 7431)) nil (25280 39380 502530 127000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face)) . -7430) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 7431) nil (25280 39380 502526 704000) 0 nil])
([nil nil ((#("\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"" 0 1 (fontified t face font-lock-string-face) 1 30 (ws-butler-chg chg fontified t face font-lock-string-face) 30 31 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face) 31 32 (fontified t ws-butler-chg delete face font-lock-string-face) 32 48 (ws-butler-chg chg fontified t face font-lock-string-face) 48 49 (fontified t ws-butler-chg delete face font-lock-string-face)) . 7382) (undo-tree-id73 . -48) (undo-tree-id74 . -32) (undo-tree-id75 . -1)) nil (25280 39380 502521 606000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7430 . 7431) (nil fontified nil 7430 . 7431) (nil fontified nil 7414 . 7430) (nil fontified nil 7413 . 7414) (nil fontified nil 7412 . 7413) (nil fontified nil 7383 . 7412) (nil fontified nil 7382 . 7383) (7382 . 7431)) nil (25280 39380 502515 739000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -7310) (undo-tree-id56 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7311) (undo-tree-id57 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7312) (undo-tree-id58 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7313) (undo-tree-id59 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -7314) (undo-tree-id60 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7315) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -7316) (undo-tree-id62 . -1) (#("g" 0 1 (fontified nil face font-lock-string-face)) . -7317) (undo-tree-id63 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -7318) (undo-tree-id64 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -7319) (undo-tree-id65 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -7320) (undo-tree-id66 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -7321) (undo-tree-id67 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -7322) (undo-tree-id68 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -7323) (undo-tree-id69 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7324) (undo-tree-id70 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -7325) (undo-tree-id71 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -7326) (undo-tree-id72 . -1) 7327) nil (25280 39380 502507 637000) 0 nil])
([nil nil ((#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t ws-butler-chg delete face font-lock-string-face)) . 7309) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 7310) nil (25280 39380 502480 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7357 . 7358) (nil fontified nil 7357 . 7358) (nil fontified nil 7341 . 7357) (nil fontified nil 7340 . 7341) (nil fontified nil 7339 . 7340) (nil fontified nil 7310 . 7339) (nil fontified nil 7309 . 7310) (7309 . 7358)) nil (25280 39380 502460 423000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7103) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -7104) (undo-tree-id1 . -1) 7105 (t 25280 39380 532760 316000)) nil (25280 39949 91018 212000) 0 nil])
([nil nil ((apply -21 7136 7403 undo--wrap-and-run-primitive-undo 7136 7403 ((7376 . 7379) (7298 . 7301) (7285 . 7288) (7242 . 7245) (7204 . 7207) (7158 . 7161) (7136 . 7139) 7382)) (t 25280 39949 121018 126000)) nil (25280 41778 976529 471000) 0 nil])
([nil nil ((#("(setq citar-bibliography '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 25 (fontified t) 25 26 (face highlight-quoted-quote fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 76 (face font-lock-string-face fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7404) (undo-tree-id0 . 78) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -78) (undo-tree-id4 . -27) (t 25280 41779 5312 519000)) nil (25280 41837 342354 513000) 0 nil])
([nil nil ((apply 21 7136 7382 undo--wrap-and-run-primitive-undo 7136 7382 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7358) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7283) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7273) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7233) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7198) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7155) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -7136) 7403))) nil (25280 41837 342319 522000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7384) (undo-tree-id7 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7385) (undo-tree-id8 . -1) 7386 (t 25280 41837 370993 824000)) nil (25280 42036 60900 560000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7476) (undo-tree-id4 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7477) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7478) (undo-tree-id6 . -1) 7479) nil (25280 42036 60893 786000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7552) (undo-tree-id1 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7553) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -7554) (undo-tree-id3 . -1) 7555) nil (25280 42036 60885 893000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -7384) (undo-tree-id0 . -1) 7385) nil (25280 42036 60875 137000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7359) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -7360) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -7361) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t)) . -7362) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -7363) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -7364) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t)) . -7365) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -7366) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -7367) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -7368) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -7369) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -7370) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -7371) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#(" " 0 1 (fontified t)) . -7372) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -7373) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -7374) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -7375) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -7376) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t)) . -7377) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -7378) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -7379) (undo-tree-id46 . -1) 7380 (t 25280 42036 88708 808000)) nil (25280 43153 595460 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7357) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (nil ws-butler-chg nil 7358 . 7359) (#(" " 0 1 (fontified t)) . 7358) (undo-tree-id64 . -1) (undo-tree-id65 . -1)) ((7358 . 7359) (nil ws-butler-chg nil 7358 . 7359) (nil ws-butler-chg delete 7358 . 7359) (7357 . 7358)) (25280 43154 482284 70000) 0 nil])
([nil nil ((7359 . 7361) (t 25280 43157 456831 750000)) nil (25280 44249 949951 875000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7376 . 7377) (nil fontified nil 7376 . 7377) (nil mouse-face highlight 7375 . 7376) (nil keymap (keymap (mouse-1 . org-cite-insert)) 7375 . 7376) (nil fontified nil 7375 . 7376) (nil mouse-face highlight 7367 . 7375) (nil keymap (keymap (mouse-1 . org-cite-insert)) 7367 . 7375) (nil fontified nil 7367 . 7375) (nil fontified nil 7363 . 7367) (nil fontified nil 7362 . 7363) (nil fontified nil 7361 . 7362) (7361 . 7377)) nil (25280 44249 949948 592000) 0 nil])
([nil nil ((#("[cite:@31597913]" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t) 6 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 7361) (undo-tree-id22 . -16) (undo-tree-id23 . 16) (undo-tree-id24 . -1) (undo-tree-id25 . 1) (undo-tree-id26 . -16)) nil (25280 44249 949943 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7467 . 7468) (nil fontified nil 7361 . 7468) (7361 . 7468)) nil (25280 44249 949934 973000) 0 nil])
([nil nil ((7357 . 7380)) nil (25280 44249 949931 970000) 0 nil])
([nil nil ((7359 . 7381) (#("                      " 0 22 (fontified nil ws-butler-chg chg)) . 7358) (7358 . 7380) (7358 . 7359) (#("                      " 0 22 (fontified t ws-butler-chg chg)) . 7358) (undo-tree-id21 . -22) 7380) nil (25280 44249 949928 896000) 0 nil])
([nil nil ((#("(setq bibtex-completion-bibliography '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 37 (fontified t) 37 38 (fontified t face highlight-quoted-quote) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 88 (fontified t face font-lock-string-face) 88 89 (fontified t face (rainbow-delimiters-depth-2-face)) 89 90 (fontified t face (rainbow-delimiters-depth-1-face))) . 7494) (undo-tree-id16 . -32) (undo-tree-id17 . 90) (undo-tree-id18 . -1) (undo-tree-id19 . 1) (undo-tree-id20 . -90)) nil (25280 44267 454383 292000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -7496) (undo-tree-id140 . -1) (#("e" 0 1 (fontified t)) . -7497) (undo-tree-id141 . -1) (#("t" 0 1 (fontified t)) . -7498) (undo-tree-id142 . -1) (#("q" 0 1 (fontified t)) . -7499) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -7500) (undo-tree-id144 . -1) 7501) nil (25280 44401 240122 550000) 0 nil] [nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7494) (undo-tree-id15 . -1)) ((nil ws-butler-chg delete 7495 . 7496) (7494 . 7495)) (25280 44263 508734 542000) 0 nil])
([nil nil ((#("(bibtex-completion-library-path '(\"/home/cdaniels/uofc/articles-lib\"))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t ws-butler-chg delete) 2 32 (fontified t) 32 33 (fontified t face highlight-quoted-quote) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 68 (fontified t face font-lock-string-face) 68 69 (fontified t face (rainbow-delimiters-depth-2-face)) 69 70 (fontified t face (rainbow-delimiters-depth-1-face))) . 7495) (undo-tree-id135 . -1) (undo-tree-id136 . 70) (undo-tree-id137 . -1) (undo-tree-id138 . 1) (undo-tree-id139 . -70)) nil (25280 44401 240113 261000) 0 nil])
([nil nil ((#("(setq bibtex-completion-library-path '(\"/home/cdaniels/uofc/articles-lib\"))" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 37 (fontified t) 37 38 (fontified t face highlight-quoted-quote) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 73 (fontified t face font-lock-string-face) 73 74 (fontified t face (rainbow-delimiters-depth-2-face)) 74 75 (fontified t face (rainbow-delimiters-depth-1-face))) . 7494) (undo-tree-id11 . 75) (undo-tree-id12 . -1) (undo-tree-id13 . 1) (undo-tree-id14 . -75)) ((nil ws-butler-chg delete 7569 . 7570) (7494 . 7569)) (25280 44262 938900 208000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7495) (undo-tree-id134 . -1)) nil (25280 44401 240105 298000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7494) (undo-tree-id10 . -1)) ((nil ws-butler-chg delete 7495 . 7496) (7494 . 7495)) (25280 44262 416816 459000) 0 nil])
([nil nil ((#("(setq bibtex-completion-notes-path \"/home/cdaniels/uofc/articles-notes\")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 35 (fontified t) 35 71 (fontified t face font-lock-string-face) 71 72 (fontified t face (rainbow-delimiters-depth-1-face))) . 7495) (undo-tree-id130 . 72) (undo-tree-id131 . -1) (undo-tree-id132 . 1) (undo-tree-id133 . -72)) nil (25280 44401 240101 317000) 0 nil])
([nil nil ((#("(setq bibtex-completion-notes-path \"/home/cdaniels/uofc/articles-notes\")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 35 (fontified t) 35 71 (fontified t face font-lock-string-face) 71 72 (fontified t face (rainbow-delimiters-depth-1-face))) . 7494) (undo-tree-id6 . 72) (undo-tree-id7 . -1) (undo-tree-id8 . 1) (undo-tree-id9 . -72)) ((nil ws-butler-chg delete 7566 . 7567) (7494 . 7566)) (25280 44261 924204 274000) 0 nil])
([nil nil ((#("(setq! citar-library-paths '(\"/path/to/library/files/\")
       citar-notes-paths '(\"/path/to/your/notes/\"))" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 26 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t face highlight-quoted-quote) 28 29 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 29 54 (ws-butler-chg chg fontified t face font-lock-string-face) 54 55 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 55 63 (ws-butler-chg chg fontified t) 63 80 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 80 81 (ws-butler-chg chg fontified t) 81 82 (ws-butler-chg chg fontified t face highlight-quoted-quote) 82 83 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 83 105 (ws-butler-chg chg fontified t face font-lock-string-face) 105 106 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 106 107 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 7385) (undo-tree-id125 . -56) (undo-tree-id126 . 107) (undo-tree-id127 . -1) (undo-tree-id128 . 1) (undo-tree-id129 . -107)) nil (25280 44401 240094 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7600 . 7601) (nil fontified nil 7494 . 7601) (7494 . 7601)) ((#("(setq! citar-library-paths '(\"/path/to/library/files/\")
       citar-notes-paths '(\"/path/to/your/notes/\"))" 0 1 (ws-butler-chg chg fontified nil face (rainbow-delimiters-depth-1-face)) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified nil) 7 8 (fontified nil face font-lock-variable-name-face) 8 26 (ws-butler-chg chg fontified nil face font-lock-variable-name-face) 26 27 (ws-butler-chg chg fontified nil) 27 28 (ws-butler-chg chg fontified nil face highlight-quoted-quote) 28 29 (ws-butler-chg chg fontified nil face (rainbow-delimiters-depth-2-face)) 29 54 (ws-butler-chg chg fontified nil face font-lock-string-face) 54 55 (ws-butler-chg chg fontified nil face (rainbow-delimiters-depth-2-face)) 55 56 (ws-butler-chg chg fontified nil) 56 63 (ws-butler-chg chg fontified nil) 63 80 (ws-butler-chg chg fontified nil face font-lock-variable-name-face) 80 81 (ws-butler-chg chg fontified nil) 81 82 (ws-butler-chg chg fontified nil face highlight-quoted-quote) 82 83 (ws-butler-chg chg fontified nil face (rainbow-delimiters-depth-2-face)) 83 105 (ws-butler-chg chg fontified nil face font-lock-string-face) 105 106 (ws-butler-chg chg fontified nil face (rainbow-delimiters-depth-2-face)) 106 107 (ws-butler-chg chg rear-nonsticky nil fontified nil face (rainbow-delimiters-depth-1-face))) . 7494) (undo-tree-id27 . -56) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -51) (undo-tree-id31 . -63) (undo-tree-id32 . -63) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (nil fontified t 7549 . 7550) (nil fontified t 7548 . 7549) (nil fontified t 7523 . 7548) (nil fontified t 7522 . 7523) (nil fontified t 7521 . 7522) (nil fontified t 7520 . 7521) (nil fontified t 7502 . 7520) (nil fontified t 7501 . 7502) (nil fontified t 7500 . 7501) (nil fontified t 7499 . 7500) (nil fontified t 7498 . 7499) (nil fontified t 7497 . 7498) (nil fontified t 7496 . 7497) (nil fontified t 7495 . 7496) (nil fontified t 7494 . 7495) (nil rear-nonsticky t 7600 . 7601)) (25280 44252 361094 977000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7385) (undo-tree-id124 . -1)) nil (25280 44401 240086 790000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -7495) (undo-tree-id0 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -7496) (undo-tree-id1 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -7497) (undo-tree-id2 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t)) . -7498) (undo-tree-id3 . -1) (#("!" 0 1 (ws-butler-chg chg fontified t)) . -7499) (undo-tree-id4 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7500) (undo-tree-id5 . -1) 7501) ((7496 . 7501) (nil ws-butler-chg delete 7496 . 7497) (7495 . 7496)) (25280 44249 949884 546000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 7385) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1)) nil (25280 44401 240081 901000) 0 nil])
nil
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7385) (undo-tree-id110 . -1) (undo-tree-id111 . -1)) nil (25280 44401 240066 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7491 . 7492) (nil fontified nil 7385 . 7492) (7385 . 7492)) nil (25280 44401 240062 205000) 0 nil])
([nil nil ((#("citar-notes-paths '(\"/path/to/your/notes/\")" 0 17 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t face highlight-quoted-quote) 19 20 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 20 42 (ws-butler-chg chg fontified t face font-lock-string-face) 42 43 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . 7448)) nil (25280 44401 240059 272000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -7440) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7441) (undo-tree-id103 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7442) (undo-tree-id104 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7443) (undo-tree-id105 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7444) (undo-tree-id106 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7445) (undo-tree-id107 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7446) (undo-tree-id108 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7447) (undo-tree-id109 . -1) 7448) nil (25280 44401 240055 81000) 0 nil])
([nil nil ((7441 . 7442)) nil (25280 44401 240041 113000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7484 . 7485) (nil fontified nil 7484 . 7485) (nil fontified nil 7462 . 7484) (nil fontified nil 7461 . 7462) (nil fontified nil 7460 . 7461) (nil fontified nil 7459 . 7460) (nil fontified nil 7442 . 7459) (7442 . 7485)) nil (25280 44401 240038 459000) 0 nil])
([nil nil ((7442 . 7443) (7485 . 7486)) nil (25280 44401 240034 338000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -7386) (undo-tree-id95 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -7387) (undo-tree-id96 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -7388) (undo-tree-id97 . -1) (#("q" 0 1 (ws-butler-chg chg fontified t)) . -7389) (undo-tree-id98 . -1) (#("!" 0 1 (ws-butler-chg chg fontified t)) . -7390) (undo-tree-id99 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7391) (undo-tree-id100 . -1) 7392) nil (25280 44401 240029 519000) 0 nil])
([nil nil ((#("(citar-library-paths '(\"/path/to/library/files/\"))" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 2 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t face highlight-quoted-quote) 22 23 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 23 48 (ws-butler-chg chg fontified t face font-lock-string-face) 48 49 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (ws-butler-chg delete fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 7385) (undo-tree-id90 . -1) (undo-tree-id91 . 50) (undo-tree-id92 . -1) (undo-tree-id93 . 1) (undo-tree-id94 . -50)) nil (25280 44401 240004 306000) 0 nil])
([nil nil ((7358 . 7380)) nil (25280 44401 239991 175000) 0 nil])
([nil nil ((nil fontified nil 7429 . 7430) (nil fontified nil 7428 . 7429) (nil fontified nil 7403 . 7428) (nil fontified nil 7402 . 7403) (nil fontified nil 7401 . 7402) (nil fontified nil 7400 . 7401) (nil fontified nil 7382 . 7400) (nil fontified nil 7381 . 7382) (nil fontified nil 7380 . 7381) (7380 . 7430)) nil (25280 44401 239988 451000) 0 nil])
([nil nil ((7380 . 7381) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7380) (7380 . 7381) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -7380) (7380 . 7381)) nil (25280 44401 239983 492000) 0 nil])
([nil nil ((7433 . 7455) (#("                      " 0 22 (fontified nil ws-butler-chg chg)) . 7432) (7432 . 7454) (7432 . 7433) (#("                      " 0 22 (ws-butler-chg chg fontified t)) . 7432) (undo-tree-id89 . -22) 7454) nil (25280 44401 239979 581000) 0 nil])
([nil nil ((#("(citar-notes-paths '(\"/path/to/your/notes/\"))" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 1 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t face highlight-quoted-quote) 20 21 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 21 43 (ws-butler-chg chg fontified t face font-lock-string-face) 43 44 (ws-butler-chg chg rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 44 45 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . 7460) (undo-tree-id84 . -22) (undo-tree-id85 . 45) (undo-tree-id86 . -1) (undo-tree-id87 . 1) (undo-tree-id88 . -45)) nil (25280 44401 239974 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7476 . 7477) (nil fontified nil 7476 . 7477) (nil fontified nil 7475 . 7476) (nil fontified nil 7453 . 7475) (nil fontified nil 7452 . 7453) (nil fontified nil 7451 . 7452) (nil fontified nil 7450 . 7451) (nil fontified nil 7433 . 7450) (nil fontified nil 7432 . 7433) (7432 . 7477)) nil (25280 44401 239966 521000) 0 nil])
([nil nil ((7432 . 7433)) nil (25280 44401 239961 771000) 0 nil])
([nil nil ((7432 . 7454)) nil (25280 44401 239959 466000) 0 nil])
([nil nil ((#("\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"" 0 49 (fontified t face font-lock-string-face)) . 7307)) nil (25280 44401 239956 812000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7355 . 7356) (nil fontified nil 7307 . 7356) (7307 . 7356)) nil (25280 44401 239954 368000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7407) (undo-tree-id63 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7408) (undo-tree-id64 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7409) (undo-tree-id65 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7410) (undo-tree-id66 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7411) (undo-tree-id67 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7412) (undo-tree-id68 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7413) (undo-tree-id69 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7414) (undo-tree-id70 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7415) (undo-tree-id71 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7416) (undo-tree-id72 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7417) (undo-tree-id73 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7418) (undo-tree-id74 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7419) (undo-tree-id75 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7420) (undo-tree-id76 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7421) (undo-tree-id77 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7422) (undo-tree-id78 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7423) (undo-tree-id79 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7424) (undo-tree-id80 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7425) (undo-tree-id81 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7426) (undo-tree-id82 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7427) (undo-tree-id83 . -1) 7428) nil (25280 44401 239946 755000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7405) (undo-tree-id61 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7406) (undo-tree-id62 . -1) 7407) nil (25280 44401 239915 256000) 0 nil])
([nil nil ((#("\"\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face)) . 7404) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 7405) nil (25280 44401 239909 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7452 . 7453) (nil fontified nil 7404 . 7453) (7404 . 7453)) nil (25280 44401 239904 500000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7501) (undo-tree-id39 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7502) (undo-tree-id40 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7503) (undo-tree-id41 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7504) (undo-tree-id42 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7505) (undo-tree-id43 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7506) (undo-tree-id44 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7507) (undo-tree-id45 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7508) (undo-tree-id46 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7509) (undo-tree-id47 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7510) (undo-tree-id48 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7511) (undo-tree-id49 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7512) (undo-tree-id50 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7513) (undo-tree-id51 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7514) (undo-tree-id52 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7515) (undo-tree-id53 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7516) (undo-tree-id54 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7517) (undo-tree-id55 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7518) (undo-tree-id56 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7519) (undo-tree-id57 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -7520) (undo-tree-id58 . -1) 7521) nil (25280 44401 239896 608000) 0 nil])
([nil nil ((#("\"\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face)) . 7500) (undo-tree-id38 . -1) 7501) nil (25280 44401 239867 413000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7548 . 7549) (nil fontified nil 7500 . 7549) (7500 . 7549)) nil (25280 44401 239851 210000) 0 nil])
([nil nil ((#("bibtex-lib/bibliography.bib" 0 27 (fontified t face font-lock-string-face)) . 7425) (undo-tree-id210 . -26) (undo-tree-id211 . -26) (undo-tree-id212 . -26) (t 25280 44401 272797 530000)) nil (25280 44593 993262 21000) 0 nil])
([nil nil ((7425 . 7437)) nil (25280 44593 993255 736000) 0 nil])
([nil nil ((#("bibtex-lib/bibliography.bib" 0 27 (fontified t face font-lock-string-face)) . 7506)) nil (25280 44593 993253 12000) 0 nil])
([nil nil ((7506 . 7520)) nil (25280 44593 993250 567000) 0 nil])
([nil nil ((7483 . 7485)) nil (25280 44593 993248 123000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -7484) (undo-tree-id208 . -1) (#("'" 0 1 (fontified t face highlight-quoted-quote)) . -7485) (undo-tree-id209 . -1) 7486) nil (25280 44593 993245 119000) 0 nil])
([nil nil ((7484 . 7485)) nil (25280 44593 993239 811000) 0 nil])
([nil nil ((7485 . 7486) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7485) (7485 . 7486) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -7485) (7485 . 7486)) nil (25280 44593 993236 738000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t face highlight-quoted-quote)) . -7463) (undo-tree-id207 . -1) 7464) nil (25280 44593 993233 37000) 0 nil])
([nil nil ((7463 . 7464) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -7463) (7463 . 7464) (#("'" 0 1 (fontified nil ws-butler-chg chg)) . -7463) (7463 . 7464)) nil (25280 44593 993228 427000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face highlight-quoted-quote)) . -7380) (undo-tree-id206 . -1) 7381) nil (25280 44593 993224 725000) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg chg fontified t face highlight-quoted-quote)) . -7462) (undo-tree-id205 . -1) 7463) nil (25280 44593 993220 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7360) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t)) . -7361) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -7362) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -7363) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#(" " 0 1 (fontified t)) . -7364) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -7365) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -7366) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#(" " 0 1 (fontified t)) . -7367) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t)) . -7368) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -7369) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#(" " 0 1 (fontified t)) . -7370) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#(" " 0 1 (fontified t)) . -7371) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#(" " 0 1 (fontified t)) . -7372) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t)) . -7373) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -7374) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t)) . -7375) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -7376) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -7377) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#(" " 0 1 (fontified t)) . -7378) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . -7379) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 7380) nil (25280 44593 993210 268000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7422) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -7423) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t)) . -7424) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -7425) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t)) . -7426) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -7427) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -7428) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t)) . -7429) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t)) . -7430) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t)) . -7431) (undo-tree-id154 . -1) (#(" " 0 1 (fontified t)) . -7432) (undo-tree-id155 . -1) (#(" " 0 1 (fontified t)) . -7433) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -7434) (undo-tree-id157 . -1) (#(" " 0 1 (fontified t)) . -7435) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -7436) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t)) . -7437) (undo-tree-id160 . -1) (#(" " 0 1 (fontified t)) . -7438) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -7439) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t)) . -7440) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t)) . -7441) (undo-tree-id164 . -1) 7442) nil (25280 44593 993155 720000) 0 nil])
([nil nil ((7304 . 7305)) nil (25280 44593 993098 938000) 0 nil])
([nil nil ((7359 . 7361) (#("                       " 0 23 (ws-butler-chg chg fontified nil)) . -7359) (undo-tree-id57 . 23) (undo-tree-id58 . 23) (7359 . 7382) (#("  " 0 2 (fontified nil)) . 7359) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (#("(citar-library-paths '(\"/home/cdaniels/uofc/articles-lib\"))" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 20 (face font-lock-variable-name-face fontified t) 20 21 (fontified t) 21 22 (face highlight-quoted-quote fontified t) 22 23 (face (rainbow-delimiters-depth-4-face) fontified t) 23 57 (face font-lock-string-face fontified t) 57 58 (face (rainbow-delimiters-depth-4-face) fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t)) . 7361) (undo-tree-id68 . -20) (undo-tree-id69 . -20) (undo-tree-id70 . 59) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -59) (t 25280 44594 30366 509000)) nil (25280 44730 452457 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7510 . 7511) (nil fontified nil 7510 . 7511) (nil fontified nil 7509 . 7510) (nil fontified nil 7475 . 7509) (nil fontified nil 7474 . 7475) (nil fontified nil 7473 . 7474) (nil fontified nil 7472 . 7473) (nil fontified nil 7453 . 7472) (nil fontified nil 7452 . 7453) (7452 . 7511)) nil (25280 44730 452433 6000) 0 nil])
([nil nil ((7362 . 7364) (#("                       " 0 23 (ws-butler-chg chg fontified nil)) . -7362) (undo-tree-id46 . 23) (undo-tree-id47 . 23) (7362 . 7385) (#("  " 0 2 (fontified nil)) . 7362) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (#("(citar-notes-paths   '(\"/home/cdaniels/uofc/articles-notes\"))" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 18 (face font-lock-variable-name-face fontified t) 18 21 (fontified t) 21 22 (face highlight-quoted-quote fontified t) 22 23 (face (rainbow-delimiters-depth-4-face) fontified t) 23 59 (face font-lock-string-face fontified t) 59 60 (face (rainbow-delimiters-depth-4-face) fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t)) . 7364) (undo-tree-id52 . -57) (undo-tree-id53 . 61) (undo-tree-id54 . -1) (undo-tree-id55 . 1) (undo-tree-id56 . -61)) nil (25280 44730 452427 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7511 . 7512) (nil fontified nil 7511 . 7512) (nil fontified nil 7510 . 7511) (nil fontified nil 7474 . 7510) (nil fontified nil 7473 . 7474) (nil fontified nil 7472 . 7473) (nil fontified nil 7469 . 7472) (nil fontified nil 7452 . 7469) (nil fontified nil 7451 . 7452) (7451 . 7512)) nil (25280 44730 452411 564000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7366) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -7367) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -7368) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t)) . -7369) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -7370) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -7371) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -7372) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -7373) (undo-tree-id32 . -1) (#(" " 0 1 (fontified t)) . -7374) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -7375) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -7376) (undo-tree-id35 . -1) (#(" " 0 1 (fontified t)) . -7377) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -7378) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -7379) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -7380) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -7381) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -7382) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -7383) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t)) . -7384) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -7385) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -7386) (undo-tree-id45 . -1) 7387) nil (25280 44730 452402 135000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7358) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7359) (undo-tree-id16 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7360) (undo-tree-id17 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -7361) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7362) (undo-tree-id20 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7363) (undo-tree-id21 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -7364) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t)) . -7365) (undo-tree-id24 . -1) 7366) nil (25280 44730 452369 798000) 0 nil])
([nil nil ((#("(citar-bibliography  '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\"))" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 19 (face font-lock-variable-name-face fontified t) 19 21 (fontified t) 21 22 (face highlight-quoted-quote fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) fontified t) 23 66 (face font-lock-string-face fontified t) 66 72 (face font-lock-string-face fontified t) 72 73 (face (rainbow-delimiters-depth-3-face) fontified t) 73 74 (face (rainbow-delimiters-depth-2-face) ws-butler-chg delete fontified t)) . 7285) (undo-tree-id3 . -73) (undo-tree-id4 . -73) (undo-tree-id5 . -73) (undo-tree-id6 . -73) (undo-tree-id7 . 74) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -74)) nil (25280 44730 452348 216000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7358 . 7359) (nil fontified nil 7358 . 7359) (nil fontified nil 7357 . 7358) (nil fontified nil 7351 . 7357) (nil fontified nil 7308 . 7351) (nil fontified nil 7307 . 7308) (nil fontified nil 7306 . 7307) (nil fontified nil 7304 . 7306) (nil fontified nil 7286 . 7304) (nil fontified nil 7285 . 7286) (7285 . 7359)) nil (25280 44730 452334 388000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7434 . 7435) (nil fontified nil 7434 . 7435) (nil fontified nil 7433 . 7434) (nil fontified nil 7427 . 7433) (nil fontified nil 7384 . 7427) (nil fontified nil 7383 . 7384) (nil fontified nil 7382 . 7383) (nil fontified nil 7380 . 7382) (nil fontified nil 7362 . 7380) (nil fontified nil 7361 . 7362) (7361 . 7435)) nil (25280 44730 452329 80000) 0 nil])
([nil nil ((7362 . 7368)) nil (25280 44730 452324 121000) 0 nil])
([nil nil ((7443 . 7449)) nil (25280 44730 452321 816000) 0 nil])
([nil nil ((7509 . 7515)) nil (25280 44730 452319 162000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -7448) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 7449) nil (25280 44730 452315 460000) 0 nil])
([nil nil ((7448 . 7449)) nil (25280 44730 452275 580000) 0 nil])
([nil nil ((7440 . 7448) (t 25280 44730 486302 926000)) nil (25280 44908 387699 143000) 0 nil])
([nil nil ((#("citar-library-paths '(\"/home/cdaniels/uofc/articles-lib\")" 0 1 (face font-lock-variable-name-face fontified t) 1 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face highlight-quoted-quote fontified t) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t) 22 56 (face font-lock-string-face fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7457)) nil (25280 44908 387696 210000) 0 nil])
([nil nil ((7440 . 7448)) nil (25280 44908 387693 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7504 . 7505) (nil fontified nil 7504 . 7505) (nil fontified nil 7470 . 7504) (nil fontified nil 7469 . 7470) (nil fontified nil 7468 . 7469) (nil fontified nil 7467 . 7468) (nil fontified nil 7449 . 7467) (nil fontified nil 7448 . 7449) (7448 . 7505)) nil (25280 44908 387691 42000) 0 nil])
([nil nil ((#("citar-notes-paths   '(\"/home/cdaniels/uofc/articles-notes\")" 0 17 (face font-lock-variable-name-face fontified t) 17 20 (fontified t) 20 21 (face highlight-quoted-quote fontified t) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t) 22 58 (face font-lock-string-face fontified t) 58 59 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7531) (undo-tree-id131 . -57)) nil (25280 44908 387686 432000) 0 nil])
([nil nil ((7505 . 7513)) nil (25280 44908 387683 10000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7571 . 7572) (nil fontified nil 7571 . 7572) (nil fontified nil 7535 . 7571) (nil fontified nil 7534 . 7535) (nil fontified nil 7533 . 7534) (nil fontified nil 7530 . 7533) (nil fontified nil 7513 . 7530) (7513 . 7572)) nil (25280 44908 387680 425000) 0 nil])
([nil nil ((#("(setq! )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t ws-butler-chg delete rear-nonsticky t)) . 7582) (undo-tree-id125 . -7) (undo-tree-id126 . -6) (undo-tree-id127 . 8) (undo-tree-id128 . -1) (undo-tree-id129 . 1) (undo-tree-id130 . -8)) nil (25280 44908 387675 886000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 7582) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1)) nil (25280 44908 387667 435000) 0 nil])
([nil nil ((#("(setq! )" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t ws-butler-chg delete rear-nonsticky t)) . 7582) (undo-tree-id117 . 8) (undo-tree-id118 . -1) (undo-tree-id119 . 1) (undo-tree-id120 . -8)) nil (25280 44908 387660 590000) 0 nil])
([nil nil ((7360 . 7361)) nil (25280 44908 387654 25000) 0 nil])
([nil nil ((#("citar-bibliography  '(\"/home/cdaniels/uofc/bibtex-lib/bibliography.bib\")" 0 18 (face font-lock-variable-name-face fontified t) 18 20 (fontified t) 20 21 (face highlight-quoted-quote fontified t) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t) 22 65 (face font-lock-string-face fontified t) 65 71 (face font-lock-string-face fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7369)) nil (25280 44908 387651 510000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7368) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -7369) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7370) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7371) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7372) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7373) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7374) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7375) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7376) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 7377) nil (25280 44908 387646 272000) 0 nil])
([nil nil ((7368 . 7369)) nil (25280 44908 387621 967000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -7493) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7494) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7495) (undo-tree-id92 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7496) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7497) (undo-tree-id94 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7498) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7499) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -7500) (undo-tree-id97 . -1) 7501) nil (25280 44908 387617 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7361) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1)) nil (25280 44908 387525 584000) 0 nil])
([nil nil ((7135 . 7137)) nil (25280 44908 387518 599000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7265 . 7266) (nil fontified nil 7223 . 7266) (nil fontified nil 7220 . 7223) (nil fontified nil 7186 . 7220) (nil fontified nil 7183 . 7186) (nil fontified nil 7139 . 7183) (nil fontified nil 7136 . 7139) (7136 . 7266)) nil (25280 44908 387515 875000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7267) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1)) nil (25280 44908 387511 196000) 0 nil])
([nil nil ((7267 . 7269)) nil (25280 44908 387505 469000) 0 nil])
([nil nil ((#("=" 0 1 (ws-butler-chg chg fontified t)) . -7267) (undo-tree-id80 . -1) (#("=" 0 1 (ws-butler-chg chg fontified t)) . -7268) (undo-tree-id81 . -1) 7269) nil (25280 44908 387501 977000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7189) (undo-tree-id74 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7190) (undo-tree-id75 . -1) (#("b" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7191) (undo-tree-id76 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7192) (undo-tree-id77 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7193) (undo-tree-id78 . -1) (#("x" 0 1 (face font-lock-comment-face fontified t ws-butler-chg chg)) . -7194) (undo-tree-id79 . -1) 7195) nil (25280 44908 387494 504000) 0 nil])
([nil nil ((7189 . 7194)) nil (25280 44908 387471 735000) 0 nil])
([nil nil ((8443 . 8444) (t 25280 44908 419430 541000)) nil (25280 46385 495378 447000) 0 nil])
([nil nil ((apply 27 8444 8908 undo--wrap-and-run-primitive-undo 8444 8908 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8790) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8744) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8689) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8623) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8551) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8526) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8499) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8472) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8444) 8935))) nil (25280 46433 152586 848000) 0 nil] [nil nil ((#(";; (require 'pubmed-unpaywall)
;; (require 'pubmed-dissemin)
;; (require 'pubmed-springer)
;; (require 'pubmed-scihub)
;; (setq pubmed-openaccessbutton-api-key \"2a98a191b95c9169eb5b1730235c3e\")
;; (setq pubmed-springer-api-key \"f3bce4ebf5b2b8c1747cf735b3c30728\")
;; (setq pubmed-unpaywall-email \"devnullmenot@gmail.com\")
;; (setq pubmed-scihub-url \"https://sci-hub.se\")
;; (setq pubmed-fulltext-functions '(pubmed-pmc pubmed-openaccessbutton pubmed-unpaywall pubmed-dissemin pubmed-scihub))
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 31 (fontified t face font-lock-comment-face) 31 34 (fontified t face font-lock-comment-delimiter-face) 34 61 (fontified t face font-lock-comment-face) 61 64 (fontified t face font-lock-comment-delimiter-face) 64 91 (fontified t face font-lock-comment-face) 91 94 (fontified t face font-lock-comment-delimiter-face) 94 119 (fontified t face font-lock-comment-face) 119 122 (fontified t face font-lock-comment-delimiter-face) 122 194 (fontified t face font-lock-comment-face) 194 197 (fontified t face font-lock-comment-delimiter-face) 197 263 (fontified t face font-lock-comment-face) 263 266 (fontified t face font-lock-comment-delimiter-face) 266 306 (fontified t face font-lock-comment-face) 306 321 (fontified t face font-lock-comment-face) 321 324 (fontified t face font-lock-comment-delimiter-face) 324 370 (fontified t face font-lock-comment-face) 370 373 (fontified t face font-lock-comment-delimiter-face) 373 491 (fontified t face font-lock-comment-face)) . -8444) (undo-tree-id0 . -491) (undo-tree-id1 . -370) (undo-tree-id2 . -370) (undo-tree-id3 . -321) (undo-tree-id4 . -321) (undo-tree-id5 . -263) (undo-tree-id6 . -263) (undo-tree-id7 . -194) (undo-tree-id8 . -194) (undo-tree-id9 . -119) (undo-tree-id10 . -119) (undo-tree-id11 . -91) (undo-tree-id12 . -91) (undo-tree-id13 . -61) (undo-tree-id14 . -61) (undo-tree-id15 . -31) (undo-tree-id16 . -31) (undo-tree-id17 . -11) (undo-tree-id18 . -491) 8814) ((nil ws-butler-chg delete 8935 . 8936) (8444 . 8935)) (25280 46384 913360 305000) 0 nil])
([nil nil ((#("(require 'pubmed-unpaywall)
(require 'pubmed-dissemin)
(require 'pubmed-springer)
(require 'pubmed-scihub)" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t ws-butler-chg chg face font-lock-constant-face) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg face highlight-quoted-quote) 10 26 (fontified t ws-butler-chg chg face font-lock-constant-face) 26 27 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 29 36 (fontified t ws-butler-chg chg face font-lock-constant-face) 36 37 (fontified t ws-butler-chg chg) 37 38 (fontified t ws-butler-chg chg face highlight-quoted-quote) 38 53 (fontified t ws-butler-chg chg face font-lock-constant-face) 53 54 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 54 55 (fontified t ws-butler-chg chg) 55 56 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 56 63 (fontified t ws-butler-chg chg face font-lock-constant-face) 63 64 (fontified t ws-butler-chg chg) 64 65 (fontified t ws-butler-chg chg face highlight-quoted-quote) 65 80 (fontified t ws-butler-chg chg face font-lock-constant-face) 80 81 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 81 82 (fontified t ws-butler-chg chg) 82 83 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 83 90 (fontified t ws-butler-chg chg face font-lock-constant-face) 90 91 (fontified t ws-butler-chg chg) 91 92 (fontified t ws-butler-chg chg face highlight-quoted-quote) 92 105 (fontified t ws-butler-chg chg face font-lock-constant-face) 105 106 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 8444) (undo-tree-id42 . -106) (undo-tree-id43 . -82) (undo-tree-id44 . -82) (undo-tree-id45 . -55) (undo-tree-id46 . -55) (undo-tree-id47 . -28) (undo-tree-id48 . -28) (undo-tree-id49 . -106) (undo-tree-id50 . 1) (undo-tree-id51 . -106) (undo-tree-id52 . 24) (undo-tree-id53 . -83) (undo-tree-id54 . -106) 8550) nil (25280 46433 152583 496000) 0 nil])
([nil nil ((8444 . 8445)) ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 8444) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) (25280 46381 430133 865000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -8443) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -8444) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 8445) nil (25280 46433 152563 870000) 0 nil])
nil
([nil nil ((8681 . 8682)) nil (25280 46433 152520 847000) 0 nil])
([nil current ((nil rear-nonsticky nil 8787 . 8788) (nil fontified nil 8787 . 8788) (nil fontified nil 8774 . 8787) (nil fontified nil 8773 . 8774) (nil fontified nil 8772 . 8773) (nil fontified nil 8765 . 8772) (nil fontified nil 8764 . 8765) (nil fontified nil 8763 . 8764) (nil fontified nil 8762 . 8763) (nil fontified nil 8747 . 8762) (nil fontified nil 8746 . 8747) (nil fontified nil 8745 . 8746) (nil fontified nil 8738 . 8745) (nil fontified nil 8737 . 8738) (nil fontified nil 8736 . 8737) (nil fontified nil 8735 . 8736) (nil fontified nil 8720 . 8735) (nil fontified nil 8719 . 8720) (nil fontified nil 8718 . 8719) (nil fontified nil 8711 . 8718) (nil fontified nil 8710 . 8711) (nil fontified nil 8709 . 8710) (nil fontified nil 8708 . 8709) (nil fontified nil 8692 . 8708) (nil fontified nil 8691 . 8692) (nil fontified nil 8690 . 8691) (nil fontified nil 8683 . 8690) (nil fontified nil 8682 . 8683) (8682 . 8788)) nil (25280 46433 152513 304000) 0 nil])
nil
