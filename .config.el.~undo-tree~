(undo-tree-save-format-version . 1)
"47ab4905970cbcafb81431f15c93a65bcca5b596"
[nil nil nil nil (25591 54805 201697 535000) 0 nil]
([nil nil ((#("
" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 4612) (4608 . 4612) (4607 . 4609) (#("
" 0 1 (ws-butler-chg chg face font-lock-comment-face fontified nil)) . 4607) (4603 . 4607) (4602 . 4604) (t 25591 54787 872104 836000)) nil (25591 55057 281387 934000) 0 nil] [nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -4888) (undo-tree-id0 . -1) 4889 (t 25591 54787 872104 836000)) ((nil ws-butler-chg delete 4889 . 4890) (4888 . 4889)) (25591 54804 70712 903000) 0 nil])
([nil nil ((#(";;;;" 0 4 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 4603) (undo-tree-id36 . -4)) nil (25591 55057 281385 664000) 0 nil])
nil
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4603)) nil (25591 55057 281383 964000) 0 nil])
([nil nil ((#(";;;;" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg delete fontified t) 1 4 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 4603)) nil (25591 55057 281383 154000) 0 nil])
([nil nil ((4603 . 4605)) nil (25591 55057 281382 414000) 0 nil])
([nil nil ((4604 . 4614)) nil (25591 55057 281381 634000) 0 nil])
([nil nil ((4614 . 4623)) nil (25591 55057 281380 914000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4622) (undo-tree-id35 . -1) 4623) nil (25591 55057 281379 924000) 0 nil])
([nil nil ((4622 . 4627)) nil (25591 55057 281377 964000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4618) (undo-tree-id26 . -1) (#("i" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4619) (undo-tree-id27 . -1) (#("n" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4620) (undo-tree-id28 . -1) (#("i" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4621) (undo-tree-id29 . -1) (#("-" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4622) (undo-tree-id30 . -1) (#("b" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4623) (undo-tree-id31 . -1) (#("u" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4624) (undo-tree-id32 . -1) (#("f" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4625) (undo-tree-id33 . -1) (#("f" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4626) (undo-tree-id34 . -1) 4627) nil (25591 55057 281375 614000) 0 nil])
([nil nil ((4618 . 4625)) nil (25591 55057 281366 14000) 0 nil])
([nil nil ((4625 . 4630)) nil (25591 55057 281365 284000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4628) (undo-tree-id24 . -1) (#("p" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4629) (undo-tree-id25 . -1) 4630) nil (25591 55057 281363 814000) 0 nil])
([nil nil ((4628 . 4636)) nil (25591 55057 281360 64000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4634) (undo-tree-id22 . -1) (#("n" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4635) (undo-tree-id23 . -1) 4636) nil (25591 55057 281358 584000) 0 nil])
([nil nil ((4634 . 4643)) nil (25591 55057 281355 464000) 0 nil])
([nil nil ((4643 . 4656)) nil (25591 55057 281354 514000) 0 nil])
([nil nil ((4656 . 4677)) nil (25591 55057 281353 654000) 0 nil])
([nil nil ((4677 . 4679)) nil (25591 55057 281352 774000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4676) (undo-tree-id19 . -1) (#("l" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4677) (undo-tree-id20 . -1) (#(" " 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4678) (undo-tree-id21 . -1) 4679) nil (25591 55057 281351 264000) 0 nil])
([nil nil ((4676 . 4686)) nil (25591 55057 281347 424000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face ws-butler-chg chg fontified t)) . -4685) (undo-tree-id18 . -1) 4686) nil (25591 55057 281346 364000) 0 nil])
([nil nil ((4685 . 4690)) nil (25591 55057 281344 454000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4771 . 4772) (nil fontified nil 4691 . 4772) (4691 . 4772)) nil (25591 55057 281343 334000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -4704) (undo-tree-id17 . -1) 4705) nil (25591 55057 281341 584000) 0 nil])
([nil nil ((4704 . 4705)) nil (25591 55057 281339 164000) 0 nil])
([nil nil ((#("\"C-x C-c\" #'save-buffers-kill-terminal" 0 9 (face font-lock-string-face fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 12 (face highlight-quoted-quote fontified t ws-butler-chg chg) 12 38 (face highlight-quoted-symbol fontified t ws-butler-chg chg)) . 4733) (undo-tree-id16 . -8)) nil (25591 55057 281337 184000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4726) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4727) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4728) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4729) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4730) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4731) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4732) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 4733) nil (25591 55057 281330 654000) 0 nil])
([nil nil ((#("c" 0 1 (face highlight-quoted-symbol fontified t)) . -4709) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("o" 0 1 (face highlight-quoted-symbol fontified t)) . -4710) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("u" 0 1 (face highlight-quoted-symbol fontified t)) . -4711) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -4712) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("s" 0 1 (face highlight-quoted-symbol fontified t)) . -4713) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -4714) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -4715) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -4716) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("f" 0 1 (face highlight-quoted-symbol fontified t)) . -4717) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -4718) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("n" 0 1 (face highlight-quoted-symbol fontified t)) . -4719) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("d" 0 1 (face highlight-quoted-symbol fontified t)) . -4720) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("-" 0 1 (face highlight-quoted-symbol fontified t)) . -4721) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("f" 0 1 (face highlight-quoted-symbol fontified t)) . -4722) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("i" 0 1 (face highlight-quoted-symbol fontified t)) . -4723) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("l" 0 1 (face highlight-quoted-symbol fontified t)) . -4724) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("e" 0 1 (face highlight-quoted-symbol fontified t)) . -4725) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 4726 (t 25591 55057 277846 877000)) nil (25591 55203 27078 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4742 . 4743) (nil fontified nil 4709 . 4743) (4709 . 4743)) nil (25591 55203 26994 808000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4741) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (rear-nonsticky t fontified t ws-butler-chg chg)) . -4742) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 4743) nil (25591 55203 26990 678000) 0 nil])
([nil nil ((10774 . 10780) (t 25643 2771 448809 139000)) nil (25643 2996 166297 978000) 0 nil])
([nil nil ((#(";;(add-hook 'julia-mode-hook 'julia-repl-mode)  ; Don't use with julia-snail" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 76 (fontified t face font-lock-comment-face)) . 10944) (undo-tree-id1 . -18)) nil (25643 2996 166296 438000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 10944) (undo-tree-id0 . -1)) nil (25643 2996 166293 108000) 0 nil])
([nil current ((10980 . 10982)) nil (25643 2996 166276 928000) 0 nil])
nil
